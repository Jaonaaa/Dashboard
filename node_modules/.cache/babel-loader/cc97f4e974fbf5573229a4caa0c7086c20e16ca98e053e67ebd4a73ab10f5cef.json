{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/components/ContentContainer/Header/Indexation/Indexation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { indexVariants } from \"./variants\";\nimport \"./Indexation.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Indexation = () => {\n  _s();\n  const [indexName, setIndexName] = useState([\"index\", \"text\"]);\n  useEffect(() => {\n    handleIndex();\n  }, [window.location.pathname]);\n  const handleIndex = () => {\n    let currentPath = window.location.pathname;\n    let pathArray = currentPath.split(\"/\");\n    pathArray.shift();\n    if (currentPath === \"/\") setIndexName([\"home\"]);else setIndexName(pathArray);\n  };\n  const getIndex = () => {\n    return indexName.map((name, index) => {\n      if (index == indexName.length - 1) return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"index_current\",\n        children: UpFirst(name)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"index_before\",\n        children: [UpFirst(name), \" /\", \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    variants: indexVariants,\n    className: \"indexation_container\",\n    children: getIndex()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Indexation, \"s85xfNE6ix2tXbCgov71JLYRVpg=\");\n_c = Indexation;\nconst UpFirst = str => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n_c2 = UpFirst;\nexport default Indexation;\nvar _c, _c2;\n$RefreshReg$(_c, \"Indexation\");\n$RefreshReg$(_c2, \"UpFirst\");","map":{"version":3,"names":["React","useEffect","useState","motion","indexVariants","jsxDEV","_jsxDEV","Indexation","_s","indexName","setIndexName","handleIndex","window","location","pathname","currentPath","pathArray","split","shift","getIndex","map","name","index","length","className","children","UpFirst","fileName","_jsxFileName","lineNumber","columnNumber","div","variants","_c","str","charAt","toUpperCase","slice","_c2","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/components/ContentContainer/Header/Indexation/Indexation.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { indexVariants } from \"./variants\";\r\nimport \"./Indexation.sass\";\r\n\r\nconst Indexation = () => {\r\n  const [indexName, setIndexName] = useState([\"index\", \"text\"]);\r\n\r\n  useEffect(() => {\r\n    handleIndex();\r\n  }, [window.location.pathname]);\r\n\r\n  const handleIndex = () => {\r\n    let currentPath = window.location.pathname;\r\n    let pathArray = currentPath.split(\"/\");\r\n    pathArray.shift();\r\n    if (currentPath === \"/\") setIndexName([\"home\"]);\r\n    else setIndexName(pathArray);\r\n  };\r\n\r\n  const getIndex = () => {\r\n    return indexName.map((name, index) => {\r\n      if (index == indexName.length - 1)\r\n        return (\r\n          <span className=\"index_current\" key={index}>\r\n            {UpFirst(name)}\r\n          </span>\r\n        );\r\n      return (\r\n        <span className=\"index_before\" key={index}>\r\n          {UpFirst(name)} /{\" \"}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <motion.div variants={indexVariants} className=\"indexation_container\">\r\n      {getIndex()}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst UpFirst = (str) => {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n\r\nexport default Indexation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,aAAa,QAAQ,YAAY;AAC1C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EAE9B,MAAMH,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAII,WAAW,GAAGH,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAC1C,IAAIE,SAAS,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;IACtCD,SAAS,CAACE,KAAK,CAAC,CAAC;IACjB,IAAIH,WAAW,KAAK,GAAG,EAAEL,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAC3CA,YAAY,CAACM,SAAS,CAAC;EAC9B,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAOV,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACpC,IAAIA,KAAK,IAAIb,SAAS,CAACc,MAAM,GAAG,CAAC,EAC/B,oBACEjB,OAAA;QAAMkB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC5BC,OAAO,CAACL,IAAI;MAAC,GADqBC,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpC,CAAC;MAEX,oBACExB,OAAA;QAAMkB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAC3BC,OAAO,CAACL,IAAI,CAAC,EAAC,IAAE,EAAC,GAAG;MAAA,GADaC,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnC,CAAC;IAEX,CAAC,CAAC;EACJ,CAAC;EAED,oBACExB,OAAA,CAACH,MAAM,CAAC4B,GAAG;IAACC,QAAQ,EAAE5B,aAAc;IAACoB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAClEN,QAAQ,CAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEjB,CAAC;AAACtB,EAAA,CApCID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAsChB,MAAMmB,OAAO,GAAIQ,GAAG,IAAK;EACvB,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;AACnD,CAAC;AAACC,GAAA,GAFIZ,OAAO;AAIb,eAAenB,UAAU;AAAC,IAAA0B,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}