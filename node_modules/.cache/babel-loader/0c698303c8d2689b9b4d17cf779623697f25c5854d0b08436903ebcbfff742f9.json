{"ast":null,"code":"import _assertThisInitialized from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _toConsumableArray from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _inherits from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _;\nimport { DecodeStream as $6uUbQ$DecodeStream, Struct as $6uUbQ$Struct, String as $6uUbQ$String, uint32 as $6uUbQ$uint32, Pointer as $6uUbQ$Pointer, uint16 as $6uUbQ$uint16, Array as $6uUbQ$Array, VoidPointer as $6uUbQ$VoidPointer, int16 as $6uUbQ$int16, uint24 as $6uUbQ$uint24, uint8 as $6uUbQ$uint8, VersionedStruct as $6uUbQ$VersionedStruct, LazyArray as $6uUbQ$LazyArray, Reserved as $6uUbQ$Reserved, int32 as $6uUbQ$int32, Bitfield as $6uUbQ$Bitfield, fixed32 as $6uUbQ$fixed32, Buffer as $6uUbQ$Buffer, Number as $6uUbQ$Number, resolveLength as $6uUbQ$resolveLength, fixed16 as $6uUbQ$fixed16, PropertyDescriptor as $6uUbQ$PropertyDescriptor, Fixed as $6uUbQ$Fixed, int8 as $6uUbQ$int8, Optional as $6uUbQ$Optional, EncodeStream as $6uUbQ$EncodeStream } from \"restructure\";\nimport $6uUbQ$swchelperssrc_define_propertymjs from \"@swc/helpers/src/_define_property.mjs\";\nimport $6uUbQ$swchelperssrc_ts_decoratemjs from \"@swc/helpers/src/_ts_decorate.mjs\";\nimport $6uUbQ$fastdeepequal from \"fast-deep-equal\";\nimport { getCombiningClass as $6uUbQ$getCombiningClass, getScript as $6uUbQ$getScript, isDigit as $6uUbQ$isDigit, getCategory as $6uUbQ$getCategory, isMark as $6uUbQ$isMark } from \"unicode-properties\";\nimport $6uUbQ$unicodetrie from \"unicode-trie\";\nimport $6uUbQ$dfa from \"dfa\";\nimport $6uUbQ$clone from \"clone\";\nimport $6uUbQ$tinyinflate from \"tiny-inflate\";\nimport $6uUbQ$brotlidecompressjs from \"brotli/decompress.js\";\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $d636bc798e7178db$exports = {};\n$parcel$export($d636bc798e7178db$exports, \"logErrors\", function () {\n  return $d636bc798e7178db$export$bd5c5d8b8dcafd78;\n});\n$parcel$export($d636bc798e7178db$exports, \"registerFormat\", function () {\n  return $d636bc798e7178db$export$36b2f24e97d43be;\n});\n$parcel$export($d636bc798e7178db$exports, \"create\", function () {\n  return $d636bc798e7178db$export$185802fd694ee1f5;\n});\n$parcel$export($d636bc798e7178db$exports, \"defaultLanguage\", function () {\n  return $d636bc798e7178db$export$42940898df819940;\n});\n$parcel$export($d636bc798e7178db$exports, \"setDefaultLanguage\", function () {\n  return $d636bc798e7178db$export$5157e7780d44cc36;\n});\nvar $d636bc798e7178db$export$bd5c5d8b8dcafd78 = false;\nvar $d636bc798e7178db$var$formats = [];\nfunction $d636bc798e7178db$export$36b2f24e97d43be(format) {\n  $d636bc798e7178db$var$formats.push(format);\n}\nfunction $d636bc798e7178db$export$185802fd694ee1f5(buffer, postscriptName) {\n  for (var i = 0; i < $d636bc798e7178db$var$formats.length; i++) {\n    var format = $d636bc798e7178db$var$formats[i];\n    if (format.probe(buffer)) {\n      var font = new format(new (0, $6uUbQ$DecodeStream)(buffer));\n      if (postscriptName) return font.getFont(postscriptName);\n      return font;\n    }\n  }\n  throw new Error(\"Unknown font format\");\n}\nvar $d636bc798e7178db$export$42940898df819940 = \"en\";\nfunction $d636bc798e7178db$export$5157e7780d44cc36() {\n  var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"en\";\n  $d636bc798e7178db$export$42940898df819940 = lang;\n}\nfunction $e71565f2ce09cb6b$export$69a3209f1a06c04d(target, key1, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key1, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === \"function\") {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache1 = new Map();\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          var key = args.length > 0 ? args[0] : \"value\";\n          if (cache1.has(key)) return cache1.get(key);\n          var result = fn.apply(this, args);\n          cache1.set(key, result);\n          return result;\n        }\n        Object.defineProperty(this, key1, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\nvar $26a62205ad06574e$var$SubHeader = new $6uUbQ$Struct({\n  firstCode: $6uUbQ$uint16,\n  entryCount: $6uUbQ$uint16,\n  idDelta: $6uUbQ$int16,\n  idRangeOffset: $6uUbQ$uint16\n});\nvar $26a62205ad06574e$var$CmapGroup = new $6uUbQ$Struct({\n  startCharCode: $6uUbQ$uint32,\n  endCharCode: $6uUbQ$uint32,\n  glyphID: $6uUbQ$uint32\n});\nvar $26a62205ad06574e$var$UnicodeValueRange = new $6uUbQ$Struct({\n  startUnicodeValue: $6uUbQ$uint24,\n  additionalCount: $6uUbQ$uint8\n});\nvar $26a62205ad06574e$var$UVSMapping = new $6uUbQ$Struct({\n  unicodeValue: $6uUbQ$uint24,\n  glyphID: $6uUbQ$uint16\n});\nvar $26a62205ad06574e$var$DefaultUVS = new $6uUbQ$Array($26a62205ad06574e$var$UnicodeValueRange, $6uUbQ$uint32);\nvar $26a62205ad06574e$var$NonDefaultUVS = new $6uUbQ$Array($26a62205ad06574e$var$UVSMapping, $6uUbQ$uint32);\nvar $26a62205ad06574e$var$VarSelectorRecord = new $6uUbQ$Struct({\n  varSelector: $6uUbQ$uint24,\n  defaultUVS: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$DefaultUVS, {\n    type: \"parent\"\n  }),\n  nonDefaultUVS: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$NonDefaultUVS, {\n    type: \"parent\"\n  })\n});\nvar $26a62205ad06574e$var$CmapSubtable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  0: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    codeMap: new $6uUbQ$LazyArray($6uUbQ$uint8, 256)\n  },\n  2: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    subHeaderKeys: new $6uUbQ$Array($6uUbQ$uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new $6uUbQ$LazyArray($26a62205ad06574e$var$SubHeader, \"subHeaderCount\"),\n    glyphIndexArray: new $6uUbQ$LazyArray($6uUbQ$uint16, \"subHeaderCount\")\n  },\n  4: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    segCountX2: $6uUbQ$uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16,\n    endCode: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n    reservedPad: new $6uUbQ$Reserved($6uUbQ$uint16),\n    startCode: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n    idDelta: new $6uUbQ$LazyArray($6uUbQ$int16, \"segCount\"),\n    idRangeOffset: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n    glyphIndexArray: new $6uUbQ$LazyArray($6uUbQ$uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    firstCode: $6uUbQ$uint16,\n    entryCount: $6uUbQ$uint16,\n    glyphIndices: new $6uUbQ$LazyArray($6uUbQ$uint16, \"entryCount\")\n  },\n  8: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint16,\n    is32: new $6uUbQ$LazyArray($6uUbQ$uint8, 8192),\n    nGroups: $6uUbQ$uint32,\n    groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n  },\n  10: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint32,\n    firstCode: $6uUbQ$uint32,\n    entryCount: $6uUbQ$uint32,\n    glyphIndices: new $6uUbQ$LazyArray($6uUbQ$uint16, \"numChars\")\n  },\n  12: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint32,\n    nGroups: $6uUbQ$uint32,\n    groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n  },\n  13: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint32,\n    nGroups: $6uUbQ$uint32,\n    groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n  },\n  14: {\n    length: $6uUbQ$uint32,\n    numRecords: $6uUbQ$uint32,\n    varSelectors: new $6uUbQ$LazyArray($26a62205ad06574e$var$VarSelectorRecord, \"numRecords\")\n  }\n});\nvar $26a62205ad06574e$var$CmapEntry = new $6uUbQ$Struct({\n  platformID: $6uUbQ$uint16,\n  encodingID: $6uUbQ$uint16,\n  table: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$CmapSubtable, {\n    type: \"parent\",\n    lazy: true\n  })\n});\nvar\n// character to glyph mapping\n$26a62205ad06574e$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numSubtables: $6uUbQ$uint16,\n  tables: new $6uUbQ$Array($26a62205ad06574e$var$CmapEntry, \"numSubtables\")\n});\nvar\n// font header\n$f2612a29f92ac062$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$int32,\n  revision: $6uUbQ$int32,\n  checkSumAdjustment: $6uUbQ$uint32,\n  magicNumber: $6uUbQ$uint32,\n  flags: $6uUbQ$uint16,\n  unitsPerEm: $6uUbQ$uint16,\n  created: new $6uUbQ$Array($6uUbQ$int32, 2),\n  modified: new $6uUbQ$Array($6uUbQ$int32, 2),\n  xMin: $6uUbQ$int16,\n  yMin: $6uUbQ$int16,\n  xMax: $6uUbQ$int16,\n  yMax: $6uUbQ$int16,\n  macStyle: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"bold\", \"italic\", \"underline\", \"outline\", \"shadow\", \"condensed\", \"extended\"]),\n  lowestRecPPEM: $6uUbQ$uint16,\n  fontDirectionHint: $6uUbQ$int16,\n  indexToLocFormat: $6uUbQ$int16,\n  glyphDataFormat: $6uUbQ$int16 // 0 for current format\n});\n\nvar\n// horizontal header\n$2c179dd593583073$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$int32,\n  ascent: $6uUbQ$int16,\n  descent: $6uUbQ$int16,\n  lineGap: $6uUbQ$int16,\n  advanceWidthMax: $6uUbQ$uint16,\n  minLeftSideBearing: $6uUbQ$int16,\n  minRightSideBearing: $6uUbQ$int16,\n  xMaxExtent: $6uUbQ$int16,\n  caretSlopeRise: $6uUbQ$int16,\n  caretSlopeRun: $6uUbQ$int16,\n  caretOffset: $6uUbQ$int16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$int16, 4),\n  metricDataFormat: $6uUbQ$int16,\n  numberOfMetrics: $6uUbQ$uint16 // Number of advance widths in 'hmtx' table\n});\n\nvar $bdc9060542264b85$var$HmtxEntry = new $6uUbQ$Struct({\n  advance: $6uUbQ$uint16,\n  bearing: $6uUbQ$int16\n});\nvar $bdc9060542264b85$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  metrics: new $6uUbQ$LazyArray($bdc9060542264b85$var$HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new $6uUbQ$LazyArray($6uUbQ$int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\nvar\n// maxiumum profile\n$dbf51cb3d3fe409d$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$int32,\n  numGlyphs: $6uUbQ$uint16,\n  maxPoints: $6uUbQ$uint16,\n  maxContours: $6uUbQ$uint16,\n  maxComponentPoints: $6uUbQ$uint16,\n  maxComponentContours: $6uUbQ$uint16,\n  maxZones: $6uUbQ$uint16,\n  maxTwilightPoints: $6uUbQ$uint16,\n  maxStorage: $6uUbQ$uint16,\n  maxFunctionDefs: $6uUbQ$uint16,\n  maxInstructionDefs: $6uUbQ$uint16,\n  maxStackElements: $6uUbQ$uint16,\n  maxSizeOfInstructions: $6uUbQ$uint16,\n  maxComponentElements: $6uUbQ$uint16,\n  maxComponentDepth: $6uUbQ$uint16 // Maximum levels of recursion; 1 for simple components\n});\n\nfunction $e449ad78d50845fe$export$badc544e0651b6b1(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (platformID === 1 && $e449ad78d50845fe$export$479e671907f486d1[languageID]) return $e449ad78d50845fe$export$479e671907f486d1[languageID];\n  return $e449ad78d50845fe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\nvar $e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS = new Set([\"x-mac-roman\", \"x-mac-cyrillic\", \"iso-8859-6\", \"iso-8859-8\"]);\nvar $e449ad78d50845fe$var$MAC_ENCODINGS = {\n  \"x-mac-croatian\": \"\\xC4\\xC5\\xC7\\xC9\\xD1\\xD6\\xDC\\xE1\\xE0\\xE2\\xE4\\xE3\\xE5\\xE7\\xE9\\xE8\\xEA\\xEB\\xED\\xEC\\xEE\\xEF\\xF1\\xF3\\xF2\\xF4\\xF6\\xF5\\xFA\\xF9\\xFB\\xFC\\u2020\\xB0\\xA2\\xA3\\xA7\\u2022\\xB6\\xDF\\xAE\\u0160\\u2122\\xB4\\xA8\\u2260\\u017D\\xD8\\u221E\\xB1\\u2264\\u2265\\u2206\\xB5\\u2202\\u2211\\u220F\\u0161\\u222B\\xAA\\xBA\\u03A9\\u017E\\xF8\\xBF\\xA1\\xAC\\u221A\\u0192\\u2248\\u0106\\xAB\\u010C\\u2026 \\xC0\\xC3\\xD5\\u0152\\u0153\\u0110\\u2014\\u201C\\u201D\\u2018\\u2019\\xF7\\u25CA\\uF8FF\\xA9\\u2044\\u20AC\\u2039\\u203A\\xC6\\xBB\\u2013\\xB7\\u201A\\u201E\\u2030\\xC2\\u0107\\xC1\\u010D\\xC8\\xCD\\xCE\\xCF\\xCC\\xD3\\xD4\\u0111\\xD2\\xDA\\xDB\\xD9\\u0131\\u02C6\\u02DC\\xAF\\u03C0\\xCB\\u02DA\\xB8\\xCA\\xE6\\u02C7\",\n  \"x-mac-gaelic\": \"\\xC4\\xC5\\xC7\\xC9\\xD1\\xD6\\xDC\\xE1\\xE0\\xE2\\xE4\\xE3\\xE5\\xE7\\xE9\\xE8\\xEA\\xEB\\xED\\xEC\\xEE\\xEF\\xF1\\xF3\\xF2\\xF4\\xF6\\xF5\\xFA\\xF9\\xFB\\xFC\\u2020\\xB0\\xA2\\xA3\\xA7\\u2022\\xB6\\xDF\\xAE\\xA9\\u2122\\xB4\\xA8\\u2260\\xC6\\xD8\\u1E02\\xB1\\u2264\\u2265\\u1E03\\u010A\\u010B\\u1E0A\\u1E0B\\u1E1E\\u1E1F\\u0120\\u0121\\u1E40\\xE6\\xF8\\u1E41\\u1E56\\u1E57\\u027C\\u0192\\u017F\\u1E60\\xAB\\xBB\\u2026 \\xC0\\xC3\\xD5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1E61\\u1E9B\\xFF\\u0178\\u1E6A\\u20AC\\u2039\\u203A\\u0176\\u0177\\u1E6B\\xB7\\u1EF2\\u1EF3\\u204A\\xC2\\xCA\\xC1\\xCB\\xC8\\xCD\\xCE\\xCF\\xCC\\xD3\\xD4\\u2663\\xD2\\xDA\\xDB\\xD9\\u0131\\xDD\\xFD\\u0174\\u0175\\u1E84\\u1E85\\u1E80\\u1E81\\u1E82\\u1E83\",\n  \"x-mac-greek\": \"\\xC4\\xB9\\xB2\\xC9\\xB3\\xD6\\xDC\\u0385\\xE0\\xE2\\xE4\\u0384\\xA8\\xE7\\xE9\\xE8\\xEA\\xEB\\xA3\\u2122\\xEE\\xEF\\u2022\\xBD\\u2030\\xF4\\xF6\\xA6\\u20AC\\xF9\\xFB\\xFC\\u2020\\u0393\\u0394\\u0398\\u039B\\u039E\\u03A0\\xDF\\xAE\\xA9\\u03A3\\u03AA\\xA7\\u2260\\xB0\\xB7\\u0391\\xB1\\u2264\\u2265\\xA5\\u0392\\u0395\\u0396\\u0397\\u0399\\u039A\\u039C\\u03A6\\u03AB\\u03A8\\u03A9\\u03AC\\u039D\\xAC\\u039F\\u03A1\\u2248\\u03A4\\xAB\\xBB\\u2026 \\u03A5\\u03A7\\u0386\\u0388\\u0153\\u2013\\u2015\\u201C\\u201D\\u2018\\u2019\\xF7\\u0389\\u038A\\u038C\\u038E\\u03AD\\u03AE\\u03AF\\u03CC\\u038F\\u03CD\\u03B1\\u03B2\\u03C8\\u03B4\\u03B5\\u03C6\\u03B3\\u03B7\\u03B9\\u03BE\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF\\u03C0\\u03CE\\u03C1\\u03C3\\u03C4\\u03B8\\u03C9\\u03C2\\u03C7\\u03C5\\u03B6\\u03CA\\u03CB\\u0390\\u03B0\\xAD\",\n  \"x-mac-icelandic\": \"\\xC4\\xC5\\xC7\\xC9\\xD1\\xD6\\xDC\\xE1\\xE0\\xE2\\xE4\\xE3\\xE5\\xE7\\xE9\\xE8\\xEA\\xEB\\xED\\xEC\\xEE\\xEF\\xF1\\xF3\\xF2\\xF4\\xF6\\xF5\\xFA\\xF9\\xFB\\xFC\\xDD\\xB0\\xA2\\xA3\\xA7\\u2022\\xB6\\xDF\\xAE\\xA9\\u2122\\xB4\\xA8\\u2260\\xC6\\xD8\\u221E\\xB1\\u2264\\u2265\\xA5\\xB5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xAA\\xBA\\u03A9\\xE6\\xF8\\xBF\\xA1\\xAC\\u221A\\u0192\\u2248\\u2206\\xAB\\xBB\\u2026 \\xC0\\xC3\\xD5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xF7\\u25CA\\xFF\\u0178\\u2044\\u20AC\\xD0\\xF0\\xDE\\xFE\\xFD\\xB7\\u201A\\u201E\\u2030\\xC2\\xCA\\xC1\\xCB\\xC8\\xCD\\xCE\\xCF\\xCC\\xD3\\xD4\\uF8FF\\xD2\\xDA\\xDB\\xD9\\u0131\\u02C6\\u02DC\\xAF\\u02D8\\u02D9\\u02DA\\xB8\\u02DD\\u02DB\\u02C7\",\n  \"x-mac-inuit\": \"\\u1403\\u1404\\u1405\\u1406\\u140A\\u140B\\u1431\\u1432\\u1433\\u1434\\u1438\\u1439\\u1449\\u144E\\u144F\\u1450\\u1451\\u1455\\u1456\\u1466\\u146D\\u146E\\u146F\\u1470\\u1472\\u1473\\u1483\\u148B\\u148C\\u148D\\u148E\\u1490\\u1491\\xB0\\u14A1\\u14A5\\u14A6\\u2022\\xB6\\u14A7\\xAE\\xA9\\u2122\\u14A8\\u14AA\\u14AB\\u14BB\\u14C2\\u14C3\\u14C4\\u14C5\\u14C7\\u14C8\\u14D0\\u14EF\\u14F0\\u14F1\\u14F2\\u14F4\\u14F5\\u1505\\u14D5\\u14D6\\u14D7\\u14D8\\u14DA\\u14DB\\u14EA\\u1528\\u1529\\u152A\\u152B\\u152D\\u2026 \\u152E\\u153E\\u1555\\u1556\\u1557\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1558\\u1559\\u155A\\u155D\\u1546\\u1547\\u1548\\u1549\\u154B\\u154C\\u1550\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1596\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u157C\\u0141\\u0142\",\n  \"x-mac-ce\": \"\\xC4\\u0100\\u0101\\xC9\\u0104\\xD6\\xDC\\xE1\\u0105\\u010C\\xE4\\u010D\\u0106\\u0107\\xE9\\u0179\\u017A\\u010E\\xED\\u010F\\u0112\\u0113\\u0116\\xF3\\u0117\\xF4\\xF6\\xF5\\xFA\\u011A\\u011B\\xFC\\u2020\\xB0\\u0118\\xA3\\xA7\\u2022\\xB6\\xDF\\xAE\\xA9\\u2122\\u0119\\xA8\\u2260\\u0123\\u012E\\u012F\\u012A\\u2264\\u2265\\u012B\\u0136\\u2202\\u2211\\u0142\\u013B\\u013C\\u013D\\u013E\\u0139\\u013A\\u0145\\u0146\\u0143\\xAC\\u221A\\u0144\\u0147\\u2206\\xAB\\xBB\\u2026 \\u0148\\u0150\\xD5\\u0151\\u014C\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xF7\\u25CA\\u014D\\u0154\\u0155\\u0158\\u2039\\u203A\\u0159\\u0156\\u0157\\u0160\\u201A\\u201E\\u0161\\u015A\\u015B\\xC1\\u0164\\u0165\\xCD\\u017D\\u017E\\u016A\\xD3\\xD4\\u016B\\u016E\\xDA\\u016F\\u0170\\u0171\\u0172\\u0173\\xDD\\xFD\\u0137\\u017B\\u0141\\u017C\\u0122\\u02C7\",\n  \"x-mac-romanian\": \"\\xC4\\xC5\\xC7\\xC9\\xD1\\xD6\\xDC\\xE1\\xE0\\xE2\\xE4\\xE3\\xE5\\xE7\\xE9\\xE8\\xEA\\xEB\\xED\\xEC\\xEE\\xEF\\xF1\\xF3\\xF2\\xF4\\xF6\\xF5\\xFA\\xF9\\xFB\\xFC\\u2020\\xB0\\xA2\\xA3\\xA7\\u2022\\xB6\\xDF\\xAE\\xA9\\u2122\\xB4\\xA8\\u2260\\u0102\\u0218\\u221E\\xB1\\u2264\\u2265\\xA5\\xB5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xAA\\xBA\\u03A9\\u0103\\u0219\\xBF\\xA1\\xAC\\u221A\\u0192\\u2248\\u2206\\xAB\\xBB\\u2026 \\xC0\\xC3\\xD5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xF7\\u25CA\\xFF\\u0178\\u2044\\u20AC\\u2039\\u203A\\u021A\\u021B\\u2021\\xB7\\u201A\\u201E\\u2030\\xC2\\xCA\\xC1\\xCB\\xC8\\xCD\\xCE\\xCF\\xCC\\xD3\\xD4\\uF8FF\\xD2\\xDA\\xDB\\xD9\\u0131\\u02C6\\u02DC\\xAF\\u02D8\\u02D9\\u02DA\\xB8\\u02DD\\u02DB\\u02C7\",\n  \"x-mac-turkish\": \"\\xC4\\xC5\\xC7\\xC9\\xD1\\xD6\\xDC\\xE1\\xE0\\xE2\\xE4\\xE3\\xE5\\xE7\\xE9\\xE8\\xEA\\xEB\\xED\\xEC\\xEE\\xEF\\xF1\\xF3\\xF2\\xF4\\xF6\\xF5\\xFA\\xF9\\xFB\\xFC\\u2020\\xB0\\xA2\\xA3\\xA7\\u2022\\xB6\\xDF\\xAE\\xA9\\u2122\\xB4\\xA8\\u2260\\xC6\\xD8\\u221E\\xB1\\u2264\\u2265\\xA5\\xB5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xAA\\xBA\\u03A9\\xE6\\xF8\\xBF\\xA1\\xAC\\u221A\\u0192\\u2248\\u2206\\xAB\\xBB\\u2026 \\xC0\\xC3\\xD5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xF7\\u25CA\\xFF\\u0178\\u011E\\u011F\\u0130\\u0131\\u015E\\u015F\\u2021\\xB7\\u201A\\u201E\\u2030\\xC2\\xCA\\xC1\\xCB\\xC8\\xCD\\xCE\\xCF\\xCC\\xD3\\xD4\\uF8FF\\xD2\\xDA\\xDB\\xD9\\uF8A0\\u02C6\\u02DC\\xAF\\u02D8\\u02D9\\u02DA\\xB8\\u02DD\\u02DB\\u02C7\"\n};\nvar $e449ad78d50845fe$var$encodingCache = new Map();\nfunction $e449ad78d50845fe$export$1dceb3c14ed68bee(encoding) {\n  var cached = $e449ad78d50845fe$var$encodingCache.get(encoding);\n  if (cached) return cached;\n  // These encodings aren't supported by TextDecoder.\n  var mapping = $e449ad78d50845fe$var$MAC_ENCODINGS[encoding];\n  if (mapping) {\n    var res = new Map();\n    for (var i = 0; i < mapping.length; i++) res.set(mapping.charCodeAt(i), 0x80 + i);\n    $e449ad78d50845fe$var$encodingCache.set(encoding, res);\n    return res;\n  }\n  // Only single byte encodings can be mapped 1:1.\n  if ($e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n    // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n    // Use this to create a mapping of code points.\n    var decoder = new TextDecoder(encoding);\n    var _mapping = new Uint8Array(0x80);\n    for (var _i = 0; _i < 0x80; _i++) _mapping[_i] = 0x80 + _i;\n    var _res = new Map();\n    var s = decoder.decode(_mapping);\n    for (var i1 = 0; i1 < 0x80; i1++) _res.set(s.charCodeAt(i1), 0x80 + i1);\n    $e449ad78d50845fe$var$encodingCache.set(encoding, _res);\n    return _res;\n  }\n}\nvar $e449ad78d50845fe$export$6fef87b7618bdf0b = [\n// unicode\n[\"utf16be\", \"utf16be\", \"utf16be\", \"utf16be\", \"utf16be\", \"utf16be\"],\n// macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n[\"x-mac-roman\", \"shift-jis\", \"big5\", \"euc-kr\", \"iso-8859-6\", \"iso-8859-8\", \"x-mac-greek\", \"x-mac-cyrillic\", \"x-mac-symbol\", \"x-mac-devanagari\", \"x-mac-gurmukhi\", \"x-mac-gujarati\", \"Oriya\", \"Bengali\", \"Tamil\", \"Telugu\", \"Kannada\", \"Malayalam\", \"Sinhalese\", \"Burmese\", \"Khmer\", \"iso-8859-11\", \"Laotian\", \"Georgian\", \"Armenian\", \"hz-gb-2312\", \"Tibetan\", \"Mongolian\", \"Geez\", \"x-mac-ce\", \"Vietnamese\", \"Sindhi\"],\n// ISO (deprecated)\n[\"ascii\"],\n// windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n[\"symbol\", \"utf16be\", \"shift-jis\", \"gb18030\", \"big5\", \"x-cp20949\", \"johab\", null, null, null, \"utf16be\"]];\nvar $e449ad78d50845fe$export$479e671907f486d1 = {\n  15: \"x-mac-icelandic\",\n  17: \"x-mac-turkish\",\n  18: \"x-mac-croatian\",\n  24: \"x-mac-ce\",\n  25: \"x-mac-ce\",\n  26: \"x-mac-ce\",\n  27: \"x-mac-ce\",\n  28: \"x-mac-ce\",\n  30: \"x-mac-icelandic\",\n  37: \"x-mac-romanian\",\n  38: \"x-mac-ce\",\n  39: \"x-mac-ce\",\n  40: \"x-mac-ce\",\n  143: \"x-mac-inuit\",\n  146: \"x-mac-gaelic\"\n};\nvar $e449ad78d50845fe$export$2092376fd002e13 = [\n// unicode\n[], {\n  0: \"en\",\n  30: \"fo\",\n  60: \"ks\",\n  90: \"rw\",\n  1: \"fr\",\n  31: \"fa\",\n  61: \"ku\",\n  91: \"rn\",\n  2: \"de\",\n  32: \"ru\",\n  62: \"sd\",\n  92: \"ny\",\n  3: \"it\",\n  33: \"zh\",\n  63: \"bo\",\n  93: \"mg\",\n  4: \"nl\",\n  34: \"nl-BE\",\n  64: \"ne\",\n  94: \"eo\",\n  5: \"sv\",\n  35: \"ga\",\n  65: \"sa\",\n  128: \"cy\",\n  6: \"es\",\n  36: \"sq\",\n  66: \"mr\",\n  129: \"eu\",\n  7: \"da\",\n  37: \"ro\",\n  67: \"bn\",\n  130: \"ca\",\n  8: \"pt\",\n  38: \"cz\",\n  68: \"as\",\n  131: \"la\",\n  9: \"no\",\n  39: \"sk\",\n  69: \"gu\",\n  132: \"qu\",\n  10: \"he\",\n  40: \"si\",\n  70: \"pa\",\n  133: \"gn\",\n  11: \"ja\",\n  41: \"yi\",\n  71: \"or\",\n  134: \"ay\",\n  12: \"ar\",\n  42: \"sr\",\n  72: \"ml\",\n  135: \"tt\",\n  13: \"fi\",\n  43: \"mk\",\n  73: \"kn\",\n  136: \"ug\",\n  14: \"el\",\n  44: \"bg\",\n  74: \"ta\",\n  137: \"dz\",\n  15: \"is\",\n  45: \"uk\",\n  75: \"te\",\n  138: \"jv\",\n  16: \"mt\",\n  46: \"be\",\n  76: \"si\",\n  139: \"su\",\n  17: \"tr\",\n  47: \"uz\",\n  77: \"my\",\n  140: \"gl\",\n  18: \"hr\",\n  48: \"kk\",\n  78: \"km\",\n  141: \"af\",\n  19: \"zh-Hant\",\n  49: \"az-Cyrl\",\n  79: \"lo\",\n  142: \"br\",\n  20: \"ur\",\n  50: \"az-Arab\",\n  80: \"vi\",\n  143: \"iu\",\n  21: \"hi\",\n  51: \"hy\",\n  81: \"id\",\n  144: \"gd\",\n  22: \"th\",\n  52: \"ka\",\n  82: \"tl\",\n  145: \"gv\",\n  23: \"ko\",\n  53: \"mo\",\n  83: \"ms\",\n  146: \"ga\",\n  24: \"lt\",\n  54: \"ky\",\n  84: \"ms-Arab\",\n  147: \"to\",\n  25: \"pl\",\n  55: \"tg\",\n  85: \"am\",\n  148: \"el-polyton\",\n  26: \"hu\",\n  56: \"tk\",\n  86: \"ti\",\n  149: \"kl\",\n  27: \"es\",\n  57: \"mn-CN\",\n  87: \"om\",\n  150: \"az\",\n  28: \"lv\",\n  58: \"mn\",\n  88: \"so\",\n  151: \"nn\",\n  29: \"se\",\n  59: \"ps\",\n  89: \"sw\"\n},\n// ISO (deprecated)\n[], {\n  0x0436: \"af\",\n  0x4009: \"en-IN\",\n  0x0487: \"rw\",\n  0x0432: \"tn\",\n  0x041C: \"sq\",\n  0x1809: \"en-IE\",\n  0x0441: \"sw\",\n  0x045B: \"si\",\n  0x0484: \"gsw\",\n  0x2009: \"en-JM\",\n  0x0457: \"kok\",\n  0x041B: \"sk\",\n  0x045E: \"am\",\n  0x4409: \"en-MY\",\n  0x0412: \"ko\",\n  0x0424: \"sl\",\n  0x1401: \"ar-DZ\",\n  0x1409: \"en-NZ\",\n  0x0440: \"ky\",\n  0x2C0A: \"es-AR\",\n  0x3C01: \"ar-BH\",\n  0x3409: \"en-PH\",\n  0x0454: \"lo\",\n  0x400A: \"es-BO\",\n  0x0C01: \"ar\",\n  0x4809: \"en-SG\",\n  0x0426: \"lv\",\n  0x340A: \"es-CL\",\n  0x0801: \"ar-IQ\",\n  0x1C09: \"en-ZA\",\n  0x0427: \"lt\",\n  0x240A: \"es-CO\",\n  0x2C01: \"ar-JO\",\n  0x2C09: \"en-TT\",\n  0x082E: \"dsb\",\n  0x140A: \"es-CR\",\n  0x3401: \"ar-KW\",\n  0x0809: \"en-GB\",\n  0x046E: \"lb\",\n  0x1C0A: \"es-DO\",\n  0x3001: \"ar-LB\",\n  0x0409: \"en\",\n  0x042F: \"mk\",\n  0x300A: \"es-EC\",\n  0x1001: \"ar-LY\",\n  0x3009: \"en-ZW\",\n  0x083E: \"ms-BN\",\n  0x440A: \"es-SV\",\n  0x1801: \"ary\",\n  0x0425: \"et\",\n  0x043E: \"ms\",\n  0x100A: \"es-GT\",\n  0x2001: \"ar-OM\",\n  0x0438: \"fo\",\n  0x044C: \"ml\",\n  0x480A: \"es-HN\",\n  0x4001: \"ar-QA\",\n  0x0464: \"fil\",\n  0x043A: \"mt\",\n  0x080A: \"es-MX\",\n  0x0401: \"ar-SA\",\n  0x040B: \"fi\",\n  0x0481: \"mi\",\n  0x4C0A: \"es-NI\",\n  0x2801: \"ar-SY\",\n  0x080C: \"fr-BE\",\n  0x047A: \"arn\",\n  0x180A: \"es-PA\",\n  0x1C01: \"aeb\",\n  0x0C0C: \"fr-CA\",\n  0x044E: \"mr\",\n  0x3C0A: \"es-PY\",\n  0x3801: \"ar-AE\",\n  0x040C: \"fr\",\n  0x047C: \"moh\",\n  0x280A: \"es-PE\",\n  0x2401: \"ar-YE\",\n  0x140C: \"fr-LU\",\n  0x0450: \"mn\",\n  0x500A: \"es-PR\",\n  0x042B: \"hy\",\n  0x180C: \"fr-MC\",\n  0x0850: \"mn-CN\",\n  0x0C0A: \"es\",\n  0x044D: \"as\",\n  0x100C: \"fr-CH\",\n  0x0461: \"ne\",\n  0x040A: \"es\",\n  0x082C: \"az-Cyrl\",\n  0x0462: \"fy\",\n  0x0414: \"nb\",\n  0x540A: \"es-US\",\n  0x042C: \"az\",\n  0x0456: \"gl\",\n  0x0814: \"nn\",\n  0x380A: \"es-UY\",\n  0x046D: \"ba\",\n  0x0437: \"ka\",\n  0x0482: \"oc\",\n  0x200A: \"es-VE\",\n  0x042D: \"eu\",\n  0x0C07: \"de-AT\",\n  0x0448: \"or\",\n  0x081D: \"sv-FI\",\n  0x0423: \"be\",\n  0x0407: \"de\",\n  0x0463: \"ps\",\n  0x041D: \"sv\",\n  0x0845: \"bn\",\n  0x1407: \"de-LI\",\n  0x0415: \"pl\",\n  0x045A: \"syr\",\n  0x0445: \"bn-IN\",\n  0x1007: \"de-LU\",\n  0x0416: \"pt\",\n  0x0428: \"tg\",\n  0x201A: \"bs-Cyrl\",\n  0x0807: \"de-CH\",\n  0x0816: \"pt-PT\",\n  0x085F: \"tzm\",\n  0x141A: \"bs\",\n  0x0408: \"el\",\n  0x0446: \"pa\",\n  0x0449: \"ta\",\n  0x047E: \"br\",\n  0x046F: \"kl\",\n  0x046B: \"qu-BO\",\n  0x0444: \"tt\",\n  0x0402: \"bg\",\n  0x0447: \"gu\",\n  0x086B: \"qu-EC\",\n  0x044A: \"te\",\n  0x0403: \"ca\",\n  0x0468: \"ha\",\n  0x0C6B: \"qu\",\n  0x041E: \"th\",\n  0x0C04: \"zh-HK\",\n  0x040D: \"he\",\n  0x0418: \"ro\",\n  0x0451: \"bo\",\n  0x1404: \"zh-MO\",\n  0x0439: \"hi\",\n  0x0417: \"rm\",\n  0x041F: \"tr\",\n  0x0804: \"zh\",\n  0x040E: \"hu\",\n  0x0419: \"ru\",\n  0x0442: \"tk\",\n  0x1004: \"zh-SG\",\n  0x040F: \"is\",\n  0x243B: \"smn\",\n  0x0480: \"ug\",\n  0x0404: \"zh-TW\",\n  0x0470: \"ig\",\n  0x103B: \"smj-NO\",\n  0x0422: \"uk\",\n  0x0483: \"co\",\n  0x0421: \"id\",\n  0x143B: \"smj\",\n  0x042E: \"hsb\",\n  0x041A: \"hr\",\n  0x045D: \"iu\",\n  0x0C3B: \"se-FI\",\n  0x0420: \"ur\",\n  0x101A: \"hr-BA\",\n  0x085D: \"iu-Latn\",\n  0x043B: \"se\",\n  0x0843: \"uz-Cyrl\",\n  0x0405: \"cs\",\n  0x083C: \"ga\",\n  0x083B: \"se-SE\",\n  0x0443: \"uz\",\n  0x0406: \"da\",\n  0x0434: \"xh\",\n  0x203B: \"sms\",\n  0x042A: \"vi\",\n  0x048C: \"prs\",\n  0x0435: \"zu\",\n  0x183B: \"sma-NO\",\n  0x0452: \"cy\",\n  0x0465: \"dv\",\n  0x0410: \"it\",\n  0x1C3B: \"sms\",\n  0x0488: \"wo\",\n  0x0813: \"nl-BE\",\n  0x0810: \"it-CH\",\n  0x044F: \"sa\",\n  0x0485: \"sah\",\n  0x0413: \"nl\",\n  0x0411: \"ja\",\n  0x1C1A: \"sr-Cyrl-BA\",\n  0x0478: \"ii\",\n  0x0C09: \"en-AU\",\n  0x044B: \"kn\",\n  0x0C1A: \"sr\",\n  0x046A: \"yo\",\n  0x2809: \"en-BZ\",\n  0x043F: \"kk\",\n  0x181A: \"sr-Latn-BA\",\n  0x1009: \"en-CA\",\n  0x0453: \"km\",\n  0x081A: \"sr-Latn\",\n  0x2409: \"en-029\",\n  0x0486: \"quc\",\n  0x046C: \"nso\"\n}];\nvar $2bcf221753ec8e32$var$NameRecord = new $6uUbQ$Struct({\n  platformID: $6uUbQ$uint16,\n  encodingID: $6uUbQ$uint16,\n  languageID: $6uUbQ$uint16,\n  nameID: $6uUbQ$uint16,\n  length: $6uUbQ$uint16,\n  string: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$String(\"length\", function (t) {\n    return (0, $e449ad78d50845fe$export$badc544e0651b6b1)(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: \"parent\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.parent.stringOffset;\n    },\n    allowNull: false\n  })\n});\nvar $2bcf221753ec8e32$var$LangTagRecord = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  tag: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$String(\"length\", \"utf16be\"), {\n    type: \"parent\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.stringOffset;\n    }\n  })\n});\nvar $2bcf221753ec8e32$var$NameTable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  0: {\n    count: $6uUbQ$uint16,\n    stringOffset: $6uUbQ$uint16,\n    records: new $6uUbQ$Array($2bcf221753ec8e32$var$NameRecord, \"count\")\n  },\n  1: {\n    count: $6uUbQ$uint16,\n    stringOffset: $6uUbQ$uint16,\n    records: new $6uUbQ$Array($2bcf221753ec8e32$var$NameRecord, \"count\"),\n    langTagCount: $6uUbQ$uint16,\n    langTags: new $6uUbQ$Array($2bcf221753ec8e32$var$LangTagRecord, \"langTagCount\")\n  }\n});\nvar $2bcf221753ec8e32$export$2e2bcd8739ae039 = $2bcf221753ec8e32$var$NameTable;\nvar $2bcf221753ec8e32$var$NAMES = [\"copyright\", \"fontFamily\", \"fontSubfamily\", \"uniqueSubfamily\", \"fullName\", \"version\", \"postscriptName\", \"trademark\", \"manufacturer\", \"designer\", \"description\", \"vendorURL\", \"designerURL\", \"license\", \"licenseURL\", null, \"preferredFamily\", \"preferredSubfamily\", \"compatibleFull\", \"sampleText\", \"postscriptCIDFontName\", \"wwsFamilyName\", \"wwsSubfamilyName\"];\n$2bcf221753ec8e32$var$NameTable.process = function (stream) {\n  var records = {};\n  var _iterator = _createForOfIteratorHelper(this.records),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var record = _step.value;\n      // find out what language this is for\n      var language = (0, $e449ad78d50845fe$export$2092376fd002e13)[record.platformID][record.languageID];\n      if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n      if (language == null) language = record.platformID + \"-\" + record.languageID;\n      // if the nameID is >= 256, it is a font feature record (AAT)\n      var key = record.nameID >= 256 ? \"fontFeatures\" : $2bcf221753ec8e32$var$NAMES[record.nameID] || record.nameID;\n      if (records[key] == null) records[key] = {};\n      var obj = records[key];\n      if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n      if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  this.records = records;\n};\n$2bcf221753ec8e32$var$NameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === \"fontFeatures\") continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: $2bcf221753ec8e32$var$NAMES.indexOf(key),\n      length: val.en.length * 2,\n      string: val.en\n    });\n    if (key === \"postscriptName\") records.push({\n      platformID: 1,\n      encodingID: 0,\n      languageID: 0,\n      nameID: $2bcf221753ec8e32$var$NAMES.indexOf(key),\n      length: val.en.length,\n      string: val.en\n    });\n  }\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = $2bcf221753ec8e32$var$NameTable.size(this, null, false);\n};\nvar $84b272aa31b70606$var$OS2 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  header: {\n    xAvgCharWidth: $6uUbQ$int16,\n    usWeightClass: $6uUbQ$uint16,\n    usWidthClass: $6uUbQ$uint16,\n    fsType: new $6uUbQ$Bitfield($6uUbQ$uint16, [null, \"noEmbedding\", \"viewOnly\", \"editable\", null, null, null, null, \"noSubsetting\", \"bitmapOnly\"]),\n    ySubscriptXSize: $6uUbQ$int16,\n    ySubscriptYSize: $6uUbQ$int16,\n    ySubscriptXOffset: $6uUbQ$int16,\n    ySubscriptYOffset: $6uUbQ$int16,\n    ySuperscriptXSize: $6uUbQ$int16,\n    ySuperscriptYSize: $6uUbQ$int16,\n    ySuperscriptXOffset: $6uUbQ$int16,\n    ySuperscriptYOffset: $6uUbQ$int16,\n    yStrikeoutSize: $6uUbQ$int16,\n    yStrikeoutPosition: $6uUbQ$int16,\n    sFamilyClass: $6uUbQ$int16,\n    panose: new $6uUbQ$Array($6uUbQ$uint8, 10),\n    ulCharRange: new $6uUbQ$Array($6uUbQ$uint32, 4),\n    vendorID: new $6uUbQ$String(4),\n    fsSelection: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"italic\", \"underscore\", \"negative\", \"outlined\", \"strikeout\", \"bold\", \"regular\", \"useTypoMetrics\", \"wws\", \"oblique\"]),\n    usFirstCharIndex: $6uUbQ$uint16,\n    usLastCharIndex: $6uUbQ$uint16 // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: $6uUbQ$int16,\n    typoDescender: $6uUbQ$int16,\n    typoLineGap: $6uUbQ$int16,\n    winAscent: $6uUbQ$uint16,\n    winDescent: $6uUbQ$uint16,\n    codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: $6uUbQ$int16,\n    typoDescender: $6uUbQ$int16,\n    typoLineGap: $6uUbQ$int16,\n    winAscent: $6uUbQ$uint16,\n    winDescent: $6uUbQ$uint16,\n    codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2),\n    xHeight: $6uUbQ$int16,\n    capHeight: $6uUbQ$int16,\n    defaultChar: $6uUbQ$uint16,\n    breakChar: $6uUbQ$uint16,\n    maxContent: $6uUbQ$uint16\n  },\n  5: {\n    typoAscender: $6uUbQ$int16,\n    typoDescender: $6uUbQ$int16,\n    typoLineGap: $6uUbQ$int16,\n    winAscent: $6uUbQ$uint16,\n    winDescent: $6uUbQ$uint16,\n    codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2),\n    xHeight: $6uUbQ$int16,\n    capHeight: $6uUbQ$int16,\n    defaultChar: $6uUbQ$uint16,\n    breakChar: $6uUbQ$uint16,\n    maxContent: $6uUbQ$uint16,\n    usLowerOpticalPointSize: $6uUbQ$uint16,\n    usUpperOpticalPointSize: $6uUbQ$uint16\n  }\n});\nvar $84b272aa31b70606$var$versions = $84b272aa31b70606$var$OS2.versions;\n$84b272aa31b70606$var$versions[3] = $84b272aa31b70606$var$versions[4] = $84b272aa31b70606$var$versions[2];\nvar $84b272aa31b70606$export$2e2bcd8739ae039 = $84b272aa31b70606$var$OS2;\nvar\n// PostScript information\n$32d9e2eb9565d93c$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$fixed32, {\n  header: {\n    italicAngle: $6uUbQ$fixed32,\n    underlinePosition: $6uUbQ$int16,\n    underlineThickness: $6uUbQ$int16,\n    isFixedPitch: $6uUbQ$uint32,\n    minMemType42: $6uUbQ$uint32,\n    maxMemType42: $6uUbQ$uint32,\n    minMemType1: $6uUbQ$uint32,\n    maxMemType1: $6uUbQ$uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {},\n  2: {\n    numberOfGlyphs: $6uUbQ$uint16,\n    glyphNameIndex: new $6uUbQ$Array($6uUbQ$uint16, \"numberOfGlyphs\"),\n    names: new $6uUbQ$Array(new $6uUbQ$String($6uUbQ$uint8))\n  },\n  2.5: {\n    numberOfGlyphs: $6uUbQ$uint16,\n    offsets: new $6uUbQ$Array($6uUbQ$uint8, \"numberOfGlyphs\")\n  },\n  3: {},\n  4: {\n    map: new $6uUbQ$Array($6uUbQ$uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\nvar\n// An array of predefined values accessible by instructions\n$5202bd9d9ad8eaac$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  controlValues: new $6uUbQ$Array($6uUbQ$int16)\n});\nvar\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$5c0f37ca5ffb1850$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  instructions: new $6uUbQ$Array($6uUbQ$uint8)\n});\nvar $2b2b260902b1c57e$var$loca = new $6uUbQ$VersionedStruct(\"head.indexToLocFormat\", {\n  0: {\n    offsets: new $6uUbQ$Array($6uUbQ$uint16)\n  },\n  1: {\n    offsets: new $6uUbQ$Array($6uUbQ$uint32)\n  }\n});\n$2b2b260902b1c57e$var$loca.process = function () {\n  if (this.version === 0 && !this._processed) {\n    for (var i = 0; i < this.offsets.length; i++) this.offsets[i] <<= 1;\n    this._processed = true;\n  }\n};\n$2b2b260902b1c57e$var$loca.preEncode = function () {\n  if (this.version === 0 && this._processed !== false) {\n    for (var i = 0; i < this.offsets.length; i++) this.offsets[i] >>>= 1;\n    this._processed = false;\n  }\n};\nvar $2b2b260902b1c57e$export$2e2bcd8739ae039 = $2b2b260902b1c57e$var$loca;\nvar\n// Set of instructions executed whenever the point size or font transformation change\n$7afb878c7bea4f66$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  controlValueProgram: new $6uUbQ$Array($6uUbQ$uint8)\n});\nvar\n// only used for encoding\n$6c92b6371bce8bd9$export$2e2bcd8739ae039 = new $6uUbQ$Array(new $6uUbQ$Buffer());\nvar $43e9821ef3717eec$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $43e9821ef3717eec$export$2e2bcd8739ae039(type) {\n    _classCallCheck(this, $43e9821ef3717eec$export$2e2bcd8739ae039);\n    this.type = type;\n  }\n  _createClass($43e9821ef3717eec$export$2e2bcd8739ae039, [{\n    key: \"getCFFVersion\",\n    value: function getCFFVersion(ctx) {\n      while (ctx && !ctx.hdrSize) ctx = ctx.parent;\n      return ctx ? ctx.version : -1;\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var version = this.getCFFVersion(parent);\n      var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n      if (count === 0) return [];\n      var offSize = stream.readUInt8();\n      var offsetType;\n      if (offSize === 1) offsetType = $6uUbQ$uint8;else if (offSize === 2) offsetType = $6uUbQ$uint16;else if (offSize === 3) offsetType = $6uUbQ$uint24;else if (offSize === 4) offsetType = $6uUbQ$uint32;else throw new Error(\"Bad offset size in CFFIndex: \".concat(offSize, \" \").concat(stream.pos));\n      var ret = [];\n      var startPos = stream.pos + (count + 1) * offSize - 1;\n      var start = offsetType.decode(stream);\n      for (var i = 0; i < count; i++) {\n        var end = offsetType.decode(stream);\n        if (this.type != null) {\n          var pos = stream.pos;\n          stream.pos = startPos + start;\n          parent.length = end - start;\n          ret.push(this.type.decode(stream, parent));\n          stream.pos = pos;\n        } else ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n        start = end;\n      }\n      stream.pos = startPos + start;\n      return ret;\n    }\n  }, {\n    key: \"size\",\n    value: function size(arr, parent) {\n      var size = 2;\n      if (arr.length === 0) return size;\n      var type = this.type || new $6uUbQ$Buffer();\n      // find maximum offset to detminine offset type\n      var offset = 1;\n      for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        offset += type.size(item, parent);\n      }\n      var offsetType;\n      if (offset <= 0xff) offsetType = $6uUbQ$uint8;else if (offset <= 0xffff) offsetType = $6uUbQ$uint16;else if (offset <= 0xffffff) offsetType = $6uUbQ$uint24;else if (offset <= 0xffffffff) offsetType = $6uUbQ$uint32;else throw new Error(\"Bad offset in CFFIndex\");\n      size += 1 + offsetType.size() * (arr.length + 1);\n      size += offset - 1;\n      return size;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, arr, parent) {\n      stream.writeUInt16BE(arr.length);\n      if (arr.length === 0) return;\n      var type = this.type || new $6uUbQ$Buffer();\n      // find maximum offset to detminine offset type\n      var sizes = [];\n      var offset = 1;\n      var _iterator2 = _createForOfIteratorHelper(arr),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          var s = type.size(item, parent);\n          sizes.push(s);\n          offset += s;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var offsetType;\n      if (offset <= 0xff) offsetType = $6uUbQ$uint8;else if (offset <= 0xffff) offsetType = $6uUbQ$uint16;else if (offset <= 0xffffff) offsetType = $6uUbQ$uint24;else if (offset <= 0xffffffff) offsetType = $6uUbQ$uint32;else throw new Error(\"Bad offset in CFFIndex\");\n      // write offset size\n      stream.writeUInt8(offsetType.size());\n      // write elements\n      offset = 1;\n      offsetType.encode(stream, offset);\n      for (var _i2 = 0, _sizes = sizes; _i2 < _sizes.length; _i2++) {\n        var size = _sizes[_i2];\n        offset += size;\n        offsetType.encode(stream, offset);\n      }\n      var _iterator3 = _createForOfIteratorHelper(arr),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item1 = _step3.value;\n          type.encode(stream, item1, parent);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return;\n    }\n  }]);\n  return $43e9821ef3717eec$export$2e2bcd8739ae039;\n}();\nvar $c2d28e92708f99da$var$FLOAT_EOF = 0xf;\nvar $c2d28e92708f99da$var$FLOAT_LOOKUP = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"E\", \"E-\", null, \"-\"];\nvar $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP = {\n  \".\": 10,\n  \"E\": 11,\n  \"E-\": 12,\n  \"-\": 14\n};\nvar $c2d28e92708f99da$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $c2d28e92708f99da$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $c2d28e92708f99da$export$2e2bcd8739ae039);\n  }\n  _createClass($c2d28e92708f99da$export$2e2bcd8739ae039, null, [{\n    key: \"decode\",\n    value: function decode(stream, value) {\n      if (32 <= value && value <= 246) return value - 139;\n      if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n      if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n      if (value === 28) return stream.readInt16BE();\n      if (value === 29) return stream.readInt32BE();\n      if (value === 30) {\n        var str = \"\";\n        while (true) {\n          var b = stream.readUInt8();\n          var n1 = b >> 4;\n          if (n1 === $c2d28e92708f99da$var$FLOAT_EOF) break;\n          str += $c2d28e92708f99da$var$FLOAT_LOOKUP[n1];\n          var n2 = b & 15;\n          if (n2 === $c2d28e92708f99da$var$FLOAT_EOF) break;\n          str += $c2d28e92708f99da$var$FLOAT_LOOKUP[n2];\n        }\n        return parseFloat(str);\n      }\n      return null;\n    }\n  }, {\n    key: \"size\",\n    value: function size(value) {\n      // if the value needs to be forced to the largest size (32 bit)\n      // e.g. for unknown pointers, set to 32768\n      if (value.forceLarge) value = 32768;\n      if ((value | 0) !== value) {\n        var str = \"\" + value;\n        return 1 + Math.ceil((str.length + 1) / 2);\n      } else if (-107 <= value && value <= 107) return 1;else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;else if (-32768 <= value && value <= 32767) return 3;else return 5;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, value) {\n      // if the value needs to be forced to the largest size (32 bit)\n      // e.g. for unknown pointers, save the old value and set to 32768\n      var val = Number(value);\n      if (value.forceLarge) {\n        stream.writeUInt8(29);\n        return stream.writeInt32BE(val);\n      } else if ((val | 0) !== val) {\n        stream.writeUInt8(30);\n        var str = \"\" + val;\n        for (var i = 0; i < str.length; i += 2) {\n          var c1 = str[i];\n          var n1 = $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n          if (i === str.length - 1) var n2 = $c2d28e92708f99da$var$FLOAT_EOF;else {\n            var c2 = str[i + 1];\n            var n2 = $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n          }\n          stream.writeUInt8(n1 << 4 | n2 & 15);\n        }\n        if (n2 !== $c2d28e92708f99da$var$FLOAT_EOF) return stream.writeUInt8($c2d28e92708f99da$var$FLOAT_EOF << 4);\n      } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);else if (108 <= val && val <= 1131) {\n        val -= 108;\n        stream.writeUInt8((val >> 8) + 247);\n        return stream.writeUInt8(val & 0xff);\n      } else if (-1131 <= val && val <= -108) {\n        val = -val - 108;\n        stream.writeUInt8((val >> 8) + 251);\n        return stream.writeUInt8(val & 0xff);\n      } else if (-32768 <= val && val <= 32767) {\n        stream.writeUInt8(28);\n        return stream.writeInt16BE(val);\n      } else {\n        stream.writeUInt8(29);\n        return stream.writeInt32BE(val);\n      }\n    }\n  }]);\n  return $c2d28e92708f99da$export$2e2bcd8739ae039;\n}();\nvar $61aa549f16d58b9b$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $61aa549f16d58b9b$export$2e2bcd8739ae039() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, $61aa549f16d58b9b$export$2e2bcd8739ae039);\n    this.ops = ops;\n    this.fields = {};\n    var _iterator4 = _createForOfIteratorHelper(ops),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var field = _step4.value;\n        var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n        this.fields[key] = field;\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n  _createClass($61aa549f16d58b9b$export$2e2bcd8739ae039, [{\n    key: \"decodeOperands\",\n    value: function decodeOperands(type, stream, ret, operands) {\n      var _this = this;\n      if (Array.isArray(type)) return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });else if (type.decode != null) return type.decode(stream, ret, operands);else switch (type) {\n        case \"number\":\n        case \"offset\":\n        case \"sid\":\n          return operands[0];\n        case \"boolean\":\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  }, {\n    key: \"encodeOperands\",\n    value: function encodeOperands(type, stream, ctx, operands) {\n      var _this2 = this;\n      if (Array.isArray(type)) return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });else if (type.encode != null) return type.encode(stream, operands, ctx);else if (typeof operands === \"number\") return [operands];else if (typeof operands === \"boolean\") return [+operands];else if (Array.isArray(operands)) return operands;else return [operands];\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var end = stream.pos + parent.length;\n      var ret = {};\n      var operands = [];\n      // define hidden properties\n      Object.defineProperties(ret, {\n        parent: {\n          value: parent\n        },\n        _startOffset: {\n          value: stream.pos\n        }\n      });\n      // fill in defaults\n      for (var key in this.fields) {\n        var field = this.fields[key];\n        ret[field[1]] = field[3];\n      }\n      while (stream.pos < end) {\n        var b = stream.readUInt8();\n        if (b < 28) {\n          if (b === 12) b = b << 8 | stream.readUInt8();\n          var _field = this.fields[b];\n          if (!_field) throw new Error(\"Unknown operator \".concat(b));\n          var val = this.decodeOperands(_field[2], stream, ret, operands);\n          if (val != null) {\n            if (val instanceof (0, $6uUbQ$PropertyDescriptor)) Object.defineProperty(ret, _field[1], val);else ret[_field[1]] = val;\n          }\n          operands = [];\n        } else operands.push((0, $c2d28e92708f99da$export$2e2bcd8739ae039).decode(stream, b));\n      }\n      return ret;\n    }\n  }, {\n    key: \"size\",\n    value: function size(dict, parent) {\n      var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var ctx = {\n        parent: parent,\n        val: dict,\n        pointerSize: 0,\n        startOffset: parent.startOffset || 0\n      };\n      var len = 0;\n      for (var k in this.fields) {\n        var field = this.fields[k];\n        var val = dict[field[1]];\n        if (val == null || (0, $6uUbQ$fastdeepequal)(val, field[3])) continue;\n        var operands = this.encodeOperands(field[2], null, ctx, val);\n        var _iterator5 = _createForOfIteratorHelper(operands),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var op = _step5.value;\n            len += (0, $c2d28e92708f99da$export$2e2bcd8739ae039).size(op);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n        var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n        len += key.length;\n      }\n      if (includePointers) len += ctx.pointerSize;\n      return len;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, dict, parent) {\n      var ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent: parent,\n        val: dict,\n        pointerSize: 0\n      };\n      ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n      var _iterator6 = _createForOfIteratorHelper(this.ops),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var field = _step6.value;\n          var val = dict[field[1]];\n          if (val == null || (0, $6uUbQ$fastdeepequal)(val, field[3])) continue;\n          var operands = this.encodeOperands(field[2], stream, ctx, val);\n          var _iterator7 = _createForOfIteratorHelper(operands),\n            _step7;\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var op = _step7.value;\n              (0, $c2d28e92708f99da$export$2e2bcd8739ae039).encode(stream, op);\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n          var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n          var _iterator8 = _createForOfIteratorHelper(key),\n            _step8;\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var op1 = _step8.value;\n              stream.writeUInt8(op1);\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      var i = 0;\n      while (i < ctx.pointers.length) {\n        var ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n      return;\n    }\n  }]);\n  return $61aa549f16d58b9b$export$2e2bcd8739ae039;\n}();\nvar $0e34a43d05bde82c$export$2e2bcd8739ae039 = /*#__PURE__*/function (_$6uUbQ$Pointer) {\n  _inherits($0e34a43d05bde82c$export$2e2bcd8739ae039, _$6uUbQ$Pointer);\n  var _super = _createSuper($0e34a43d05bde82c$export$2e2bcd8739ae039);\n  function $0e34a43d05bde82c$export$2e2bcd8739ae039(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, $0e34a43d05bde82c$export$2e2bcd8739ae039);\n    if (options.type == null) options.type = \"global\";\n    return _super.call(this, null, type, options);\n  }\n  _createClass($0e34a43d05bde82c$export$2e2bcd8739ae039, [{\n    key: \"decode\",\n    value: function decode(stream, parent, operands) {\n      this.offsetType = {\n        decode: function decode() {\n          return operands[0];\n        }\n      };\n      return _get(_getPrototypeOf($0e34a43d05bde82c$export$2e2bcd8739ae039.prototype), \"decode\", this).call(this, stream, parent, operands);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, value, ctx) {\n      if (!stream) {\n        // compute the size (so ctx.pointerSize is correct)\n        this.offsetType = {\n          size: function size() {\n            return 0;\n          }\n        };\n        this.size(value, ctx);\n        return [new $0e34a43d05bde82c$var$Ptr(0)];\n      }\n      var ptr = null;\n      this.offsetType = {\n        encode: function encode(stream, val) {\n          return ptr = val;\n        }\n      };\n      _get(_getPrototypeOf($0e34a43d05bde82c$export$2e2bcd8739ae039.prototype), \"encode\", this).call(this, stream, value, ctx);\n      return [new $0e34a43d05bde82c$var$Ptr(ptr)];\n    }\n  }]);\n  return $0e34a43d05bde82c$export$2e2bcd8739ae039;\n}($6uUbQ$Pointer);\nvar $0e34a43d05bde82c$var$Ptr = /*#__PURE__*/function () {\n  function $0e34a43d05bde82c$var$Ptr(val) {\n    _classCallCheck(this, $0e34a43d05bde82c$var$Ptr);\n    this.val = val;\n    this.forceLarge = true;\n  }\n  _createClass($0e34a43d05bde82c$var$Ptr, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.val;\n    }\n  }]);\n  return $0e34a43d05bde82c$var$Ptr;\n}();\nvar $6d59db2e29cc77b3$var$CFFBlendOp = /*#__PURE__*/function () {\n  function $6d59db2e29cc77b3$var$CFFBlendOp() {\n    _classCallCheck(this, $6d59db2e29cc77b3$var$CFFBlendOp);\n  }\n  _createClass($6d59db2e29cc77b3$var$CFFBlendOp, null, [{\n    key: \"decode\",\n    value: function decode(stream, parent, operands) {\n      var numBlends = operands.pop();\n      // TODO: actually blend. For now just consume the deltas\n      // since we don't use any of the values anyway.\n      while (operands.length > numBlends) operands.pop();\n    }\n  }]);\n  return $6d59db2e29cc77b3$var$CFFBlendOp;\n}();\nvar $6d59db2e29cc77b3$export$2e2bcd8739ae039 = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n// key       name                    type                                          default\n[6, \"BlueValues\", \"delta\", null], [7, \"OtherBlues\", \"delta\", null], [8, \"FamilyBlues\", \"delta\", null], [9, \"FamilyOtherBlues\", \"delta\", null], [[12, 9], \"BlueScale\", \"number\", 0.039625], [[12, 10], \"BlueShift\", \"number\", 7], [[12, 11], \"BlueFuzz\", \"number\", 1], [10, \"StdHW\", \"number\", null], [11, \"StdVW\", \"number\", null], [[12, 12], \"StemSnapH\", \"delta\", null], [[12, 13], \"StemSnapV\", \"delta\", null], [[12, 14], \"ForceBold\", \"boolean\", false], [[12, 17], \"LanguageGroup\", \"number\", 0], [[12, 18], \"ExpansionFactor\", \"number\", 0.06], [[12, 19], \"initialRandomSeed\", \"number\", 0], [20, \"defaultWidthX\", \"number\", 0], [21, \"nominalWidthX\", \"number\", 0], [22, \"vsindex\", \"number\", 0], [23, \"blend\", $6d59db2e29cc77b3$var$CFFBlendOp, null], [19, \"Subrs\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(), {\n  type: \"local\"\n}), null]]);\nvar\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n$229224aec43783c5$export$2e2bcd8739ae039 = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar $bc0433d9b7e41f5f$export$dee0027060fa13bd = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"\", \"questiondown\", \"\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"\", \"ring\", \"cedilla\", \"\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"AE\", \"\", \"ordfeminine\", \"\", \"\", \"\", \"\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"\", \"\", \"\", \"\", \"\", \"ae\", \"\", \"\", \"\", \"dotlessi\", \"\", \"\", \"lslash\", \"oslash\", \"oe\", \"germandbls\"];\nvar $bc0433d9b7e41f5f$export$4f58f497e14a53c3 = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"\", \"\", \"isuperior\", \"\", \"\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"\", \"\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"\", \"\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"\", \"Dotaccentsmall\", \"\", \"\", \"Macronsmall\", \"\", \"\", \"figuredash\", \"hypheninferior\", \"\", \"\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"\", \"\", \"\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"\", \"\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"];\nvar $ef658f5c9a1488b2$export$c33b50336c234f16 = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\"];\nvar $ef658f5c9a1488b2$export$3ed0f9e1fee8d489 = [\".notdef\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"];\nvar $ef658f5c9a1488b2$export$dc28be11139d4120 = [\".notdef\", \"space\", \"dollaroldstyle\", \"dollarsuperior\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"hyphensuperior\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"centoldstyle\", \"figuredash\", \"hypheninferior\", \"onequarter\", \"onehalf\", \"threequarters\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\"];\n\n//########################\n// Scripts and Languages #\n//########################\nvar $7cbbe4e24ef3cb75$var$LangSysTable = new $6uUbQ$Struct({\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  reqFeatureIndex: $6uUbQ$uint16,\n  featureCount: $6uUbQ$uint16,\n  featureIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"featureCount\")\n});\nvar $7cbbe4e24ef3cb75$var$LangSysRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  langSys: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$LangSysTable, {\n    type: \"parent\"\n  })\n});\nvar $7cbbe4e24ef3cb75$var$Script = new $6uUbQ$Struct({\n  defaultLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$LangSysTable),\n  count: $6uUbQ$uint16,\n  langSysRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LangSysRecord, \"count\")\n});\nvar $7cbbe4e24ef3cb75$var$ScriptRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  script: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$Script, {\n    type: \"parent\"\n  })\n});\nvar $7cbbe4e24ef3cb75$export$3e15fc05ce864229 = new $6uUbQ$Array($7cbbe4e24ef3cb75$var$ScriptRecord, $6uUbQ$uint16);\n//#######################\n// Features and Lookups #\n//#######################\nvar $7cbbe4e24ef3cb75$var$FeatureParams = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  nameID: $6uUbQ$uint16\n});\nvar $7cbbe4e24ef3cb75$export$6e91cf7616333d5 = new $6uUbQ$Struct({\n  featureParams: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$FeatureParams),\n  lookupCount: $6uUbQ$uint16,\n  lookupListIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"lookupCount\")\n});\nvar $7cbbe4e24ef3cb75$var$FeatureRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  feature: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$6e91cf7616333d5, {\n    type: \"parent\"\n  })\n});\nvar $7cbbe4e24ef3cb75$export$aa18130def4b6cb4 = new $6uUbQ$Array($7cbbe4e24ef3cb75$var$FeatureRecord, $6uUbQ$uint16);\nvar $7cbbe4e24ef3cb75$var$LookupFlags = new $6uUbQ$Struct({\n  markAttachmentType: $6uUbQ$uint8,\n  flags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\"rightToLeft\", \"ignoreBaseGlyphs\", \"ignoreLigatures\", \"ignoreMarks\", \"useMarkFilteringSet\"])\n});\nfunction $7cbbe4e24ef3cb75$export$df0008c6ff2da22a(SubTable) {\n  var Lookup = new $6uUbQ$Struct({\n    lookupType: $6uUbQ$uint16,\n    flags: $7cbbe4e24ef3cb75$var$LookupFlags,\n    subTableCount: $6uUbQ$uint16,\n    subTables: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, SubTable), \"subTableCount\"),\n    markFilteringSet: new $6uUbQ$Optional($6uUbQ$uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, Lookup), $6uUbQ$uint16);\n}\n//#################\n// Coverage Table #\n//#################\nvar $7cbbe4e24ef3cb75$var$RangeRecord = new $6uUbQ$Struct({\n  start: $6uUbQ$uint16,\n  end: $6uUbQ$uint16,\n  startCoverageIndex: $6uUbQ$uint16\n});\nvar $7cbbe4e24ef3cb75$export$17608c3f81a6111 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    glyphCount: $6uUbQ$uint16,\n    glyphs: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n  },\n  2: {\n    rangeCount: $6uUbQ$uint16,\n    rangeRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$RangeRecord, \"rangeCount\")\n  }\n});\n//#########################\n// Class Definition Table #\n//#########################\nvar $7cbbe4e24ef3cb75$var$ClassRangeRecord = new $6uUbQ$Struct({\n  start: $6uUbQ$uint16,\n  end: $6uUbQ$uint16,\n  class: $6uUbQ$uint16\n});\nvar $7cbbe4e24ef3cb75$export$843d551fbbafef71 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    startGlyph: $6uUbQ$uint16,\n    glyphCount: $6uUbQ$uint16,\n    classValueArray: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n  },\n  2: {\n    classRangeCount: $6uUbQ$uint16,\n    classRangeRecord: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$ClassRangeRecord, \"classRangeCount\")\n  }\n});\nvar $7cbbe4e24ef3cb75$export$8215d14a63d9fb10 = new $6uUbQ$Struct({\n  a: $6uUbQ$uint16,\n  b: $6uUbQ$uint16,\n  deltaFormat: $6uUbQ$uint16\n});\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\nvar $7cbbe4e24ef3cb75$var$LookupRecord = new $6uUbQ$Struct({\n  sequenceIndex: $6uUbQ$uint16,\n  lookupListIndex: $6uUbQ$uint16\n});\nvar $7cbbe4e24ef3cb75$var$Rule = new $6uUbQ$Struct({\n  glyphCount: $6uUbQ$uint16,\n  lookupCount: $6uUbQ$uint16,\n  input: new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nvar $7cbbe4e24ef3cb75$var$RuleSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$Rule), $6uUbQ$uint16);\nvar $7cbbe4e24ef3cb75$var$ClassRule = new $6uUbQ$Struct({\n  glyphCount: $6uUbQ$uint16,\n  lookupCount: $6uUbQ$uint16,\n  classes: new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nvar $7cbbe4e24ef3cb75$var$ClassSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ClassRule), $6uUbQ$uint16);\nvar $7cbbe4e24ef3cb75$export$841858b892ce1f4c = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    ruleSetCount: $6uUbQ$uint16,\n    ruleSets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$RuleSet), \"ruleSetCount\")\n  },\n  2: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    classDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    classSetCnt: $6uUbQ$uint16,\n    classSet: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ClassSet), \"classSetCnt\")\n  },\n  3: {\n    glyphCount: $6uUbQ$uint16,\n    lookupCount: $6uUbQ$uint16,\n    coverages: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"glyphCount\"),\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n  }\n});\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\nvar $7cbbe4e24ef3cb75$var$ChainRule = new $6uUbQ$Struct({\n  backtrackGlyphCount: $6uUbQ$uint16,\n  backtrack: new $6uUbQ$Array($6uUbQ$uint16, \"backtrackGlyphCount\"),\n  inputGlyphCount: $6uUbQ$uint16,\n  input: new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: $6uUbQ$uint16,\n  lookahead: new $6uUbQ$Array($6uUbQ$uint16, \"lookaheadGlyphCount\"),\n  lookupCount: $6uUbQ$uint16,\n  lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nvar $7cbbe4e24ef3cb75$var$ChainRuleSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRule), $6uUbQ$uint16);\nvar $7cbbe4e24ef3cb75$export$5e6d09e6861162f6 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    chainCount: $6uUbQ$uint16,\n    chainRuleSets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRuleSet), \"chainCount\")\n  },\n  2: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    backtrackClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    inputClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    lookaheadClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    chainCount: $6uUbQ$uint16,\n    chainClassSet: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRuleSet), \"chainCount\")\n  },\n  3: {\n    backtrackGlyphCount: $6uUbQ$uint16,\n    backtrackCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n    inputGlyphCount: $6uUbQ$uint16,\n    inputCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"inputGlyphCount\"),\n    lookaheadGlyphCount: $6uUbQ$uint16,\n    lookaheadCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n    lookupCount: $6uUbQ$uint16,\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n  }\n});\n\n/*******************\n * Variation Store *\n *******************/\nvar $1a47b0c45c1c22fe$var$F2DOT14 = new $6uUbQ$Fixed(16, \"BE\", 14);\nvar $1a47b0c45c1c22fe$var$RegionAxisCoordinates = new $6uUbQ$Struct({\n  startCoord: $1a47b0c45c1c22fe$var$F2DOT14,\n  peakCoord: $1a47b0c45c1c22fe$var$F2DOT14,\n  endCoord: $1a47b0c45c1c22fe$var$F2DOT14\n});\nvar $1a47b0c45c1c22fe$var$VariationRegionList = new $6uUbQ$Struct({\n  axisCount: $6uUbQ$uint16,\n  regionCount: $6uUbQ$uint16,\n  variationRegions: new $6uUbQ$Array(new $6uUbQ$Array($1a47b0c45c1c22fe$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nvar $1a47b0c45c1c22fe$var$DeltaSet = new $6uUbQ$Struct({\n  shortDeltas: new $6uUbQ$Array($6uUbQ$int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new $6uUbQ$Array($6uUbQ$int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar $1a47b0c45c1c22fe$var$ItemVariationData = new $6uUbQ$Struct({\n  itemCount: $6uUbQ$uint16,\n  shortDeltaCount: $6uUbQ$uint16,\n  regionIndexCount: $6uUbQ$uint16,\n  regionIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"regionIndexCount\"),\n  deltaSets: new $6uUbQ$Array($1a47b0c45c1c22fe$var$DeltaSet, \"itemCount\")\n});\nvar $1a47b0c45c1c22fe$export$fe1b122a2710f241 = new $6uUbQ$Struct({\n  format: $6uUbQ$uint16,\n  variationRegionList: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$VariationRegionList),\n  variationDataCount: $6uUbQ$uint16,\n  itemVariationData: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/\nvar $1a47b0c45c1c22fe$var$ConditionTable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: (_ = {\n    axisIndex: $6uUbQ$uint16\n  }, _defineProperty(_, \"axisIndex\", $6uUbQ$uint16), _defineProperty(_, \"filterRangeMinValue\", $1a47b0c45c1c22fe$var$F2DOT14), _defineProperty(_, \"filterRangeMaxValue\", $1a47b0c45c1c22fe$var$F2DOT14), _)\n});\nvar $1a47b0c45c1c22fe$var$ConditionSet = new $6uUbQ$Struct({\n  conditionCount: $6uUbQ$uint16,\n  conditionTable: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ConditionTable), \"conditionCount\")\n});\nvar $1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord = new $6uUbQ$Struct({\n  featureIndex: $6uUbQ$uint16,\n  alternateFeatureTable: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $7cbbe4e24ef3cb75$export$6e91cf7616333d5), {\n    type: \"parent\"\n  })\n});\nvar $1a47b0c45c1c22fe$var$FeatureTableSubstitution = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  substitutionCount: $6uUbQ$uint16,\n  substitutions: new $6uUbQ$Array($1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nvar $1a47b0c45c1c22fe$var$FeatureVariationRecord = new $6uUbQ$Struct({\n  conditionSet: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ConditionSet, {\n    type: \"parent\"\n  }),\n  featureTableSubstitution: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$FeatureTableSubstitution, {\n    type: \"parent\"\n  })\n});\nvar $1a47b0c45c1c22fe$export$441b70b7971dd419 = new $6uUbQ$Struct({\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  featureVariationRecordCount: $6uUbQ$uint32,\n  featureVariationRecords: new $6uUbQ$Array($1a47b0c45c1c22fe$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n});\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nvar $b84fd3dd9d8eddb2$var$PredefinedOp = /*#__PURE__*/function () {\n  function $b84fd3dd9d8eddb2$var$PredefinedOp(predefinedOps, type) {\n    _classCallCheck(this, $b84fd3dd9d8eddb2$var$PredefinedOp);\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n  _createClass($b84fd3dd9d8eddb2$var$PredefinedOp, [{\n    key: \"decode\",\n    value: function decode(stream, parent, operands) {\n      if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n      return this.type.decode(stream, parent, operands);\n    }\n  }, {\n    key: \"size\",\n    value: function size(value, ctx) {\n      return this.type.size(value, ctx);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, value, ctx) {\n      var index = this.predefinedOps.indexOf(value);\n      if (index !== -1) return index;\n      return this.type.encode(stream, value, ctx);\n    }\n  }]);\n  return $b84fd3dd9d8eddb2$var$PredefinedOp;\n}();\nvar $b84fd3dd9d8eddb2$var$CFFEncodingVersion = /*#__PURE__*/function (_$6uUbQ$Number) {\n  _inherits($b84fd3dd9d8eddb2$var$CFFEncodingVersion, _$6uUbQ$Number);\n  var _super2 = _createSuper($b84fd3dd9d8eddb2$var$CFFEncodingVersion);\n  function $b84fd3dd9d8eddb2$var$CFFEncodingVersion() {\n    _classCallCheck(this, $b84fd3dd9d8eddb2$var$CFFEncodingVersion);\n    return _super2.call(this, \"UInt8\");\n  }\n  _createClass($b84fd3dd9d8eddb2$var$CFFEncodingVersion, [{\n    key: \"decode\",\n    value: function decode(stream) {\n      return $6uUbQ$uint8.decode(stream) & 0x7f;\n    }\n  }]);\n  return $b84fd3dd9d8eddb2$var$CFFEncodingVersion;\n}($6uUbQ$Number);\nvar $b84fd3dd9d8eddb2$var$Range1 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint16,\n  nLeft: $6uUbQ$uint8\n});\nvar $b84fd3dd9d8eddb2$var$Range2 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint16,\n  nLeft: $6uUbQ$uint16\n});\nvar $b84fd3dd9d8eddb2$var$CFFCustomEncoding = new $6uUbQ$VersionedStruct(new $b84fd3dd9d8eddb2$var$CFFEncodingVersion(), {\n  0: {\n    nCodes: $6uUbQ$uint8,\n    codes: new $6uUbQ$Array($6uUbQ$uint8, \"nCodes\")\n  },\n  1: {\n    nRanges: $6uUbQ$uint8,\n    ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$Range1, \"nRanges\")\n  }\n});\nvar $b84fd3dd9d8eddb2$var$CFFEncoding = new $b84fd3dd9d8eddb2$var$PredefinedOp([(0, $bc0433d9b7e41f5f$export$dee0027060fa13bd), (0, $bc0433d9b7e41f5f$export$4f58f497e14a53c3)], new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomEncoding, {\n  lazy: true\n}));\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nvar $b84fd3dd9d8eddb2$var$RangeArray = /*#__PURE__*/function (_$6uUbQ$Array) {\n  _inherits($b84fd3dd9d8eddb2$var$RangeArray, _$6uUbQ$Array);\n  var _super3 = _createSuper($b84fd3dd9d8eddb2$var$RangeArray);\n  function $b84fd3dd9d8eddb2$var$RangeArray() {\n    _classCallCheck(this, $b84fd3dd9d8eddb2$var$RangeArray);\n    return _super3.apply(this, arguments);\n  }\n  _createClass($b84fd3dd9d8eddb2$var$RangeArray, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var length = (0, $6uUbQ$resolveLength)(this.length, stream, parent);\n      var count = 0;\n      var res = [];\n      while (count < length) {\n        var range = this.type.decode(stream, parent);\n        range.offset = count;\n        count += range.nLeft + 1;\n        res.push(range);\n      }\n      return res;\n    }\n  }]);\n  return $b84fd3dd9d8eddb2$var$RangeArray;\n}($6uUbQ$Array);\nvar $b84fd3dd9d8eddb2$var$CFFCustomCharset = new $6uUbQ$VersionedStruct($6uUbQ$uint8, {\n  0: {\n    glyphs: new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar $b84fd3dd9d8eddb2$var$CFFCharset = new $b84fd3dd9d8eddb2$var$PredefinedOp([(0, $ef658f5c9a1488b2$export$c33b50336c234f16), (0, $ef658f5c9a1488b2$export$3ed0f9e1fee8d489), (0, $ef658f5c9a1488b2$export$dc28be11139d4120)], new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomCharset, {\n  lazy: true\n}));\nvar $b84fd3dd9d8eddb2$var$FDRange3 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint16,\n  fd: $6uUbQ$uint8\n});\nvar $b84fd3dd9d8eddb2$var$FDRange4 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint32,\n  fd: $6uUbQ$uint16\n});\nvar $b84fd3dd9d8eddb2$var$FDSelect = new $6uUbQ$VersionedStruct($6uUbQ$uint8, {\n  0: {\n    fds: new $6uUbQ$Array($6uUbQ$uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: $6uUbQ$uint16,\n    ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$FDRange3, \"nRanges\"),\n    sentinel: $6uUbQ$uint16\n  },\n  4: {\n    nRanges: $6uUbQ$uint32,\n    ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$FDRange4, \"nRanges\"),\n    sentinel: $6uUbQ$uint32\n  }\n});\nvar $b84fd3dd9d8eddb2$var$ptr = new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)((0, $6d59db2e29cc77b3$export$2e2bcd8739ae039));\nvar $b84fd3dd9d8eddb2$var$CFFPrivateOp = /*#__PURE__*/function () {\n  function $b84fd3dd9d8eddb2$var$CFFPrivateOp() {\n    _classCallCheck(this, $b84fd3dd9d8eddb2$var$CFFPrivateOp);\n  }\n  _createClass($b84fd3dd9d8eddb2$var$CFFPrivateOp, [{\n    key: \"decode\",\n    value: function decode(stream, parent, operands) {\n      parent.length = operands[0];\n      return $b84fd3dd9d8eddb2$var$ptr.decode(stream, parent, [operands[1]]);\n    }\n  }, {\n    key: \"size\",\n    value: function size(dict, ctx) {\n      return [(0, $6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict, ctx, false), $b84fd3dd9d8eddb2$var$ptr.size(dict, ctx)[0]];\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, dict, ctx) {\n      return [(0, $6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict, ctx, false), $b84fd3dd9d8eddb2$var$ptr.encode(stream, dict, ctx)[0]];\n    }\n  }]);\n  return $b84fd3dd9d8eddb2$var$CFFPrivateOp;\n}();\nvar $b84fd3dd9d8eddb2$var$FontDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n// key       name                   type(s)                                 default\n[18, \"Private\", new $b84fd3dd9d8eddb2$var$CFFPrivateOp(), null], [[12, 38], \"FontName\", \"sid\", null], [[12, 7], \"FontMatrix\", \"array\", [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], \"PaintType\", \"number\", 0]]);\nvar $b84fd3dd9d8eddb2$var$CFFTopDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n// key       name                   type(s)                                 default\n[[12, 30], \"ROS\", [\"sid\", \"sid\", \"number\"], null], [0, \"version\", \"sid\", null], [1, \"Notice\", \"sid\", null], [[12, 0], \"Copyright\", \"sid\", null], [2, \"FullName\", \"sid\", null], [3, \"FamilyName\", \"sid\", null], [4, \"Weight\", \"sid\", null], [[12, 1], \"isFixedPitch\", \"boolean\", false], [[12, 2], \"ItalicAngle\", \"number\", 0], [[12, 3], \"UnderlinePosition\", \"number\", -100], [[12, 4], \"UnderlineThickness\", \"number\", 50], [[12, 5], \"PaintType\", \"number\", 0], [[12, 6], \"CharstringType\", \"number\", 2], [[12, 7], \"FontMatrix\", \"array\", [0.001, 0, 0, 0.001, 0, 0]], [13, \"UniqueID\", \"number\", null], [5, \"FontBBox\", \"array\", [0, 0, 0, 0]], [[12, 8], \"StrokeWidth\", \"number\", 0], [14, \"XUID\", \"array\", null], [15, \"charset\", $b84fd3dd9d8eddb2$var$CFFCharset, (0, $ef658f5c9a1488b2$export$c33b50336c234f16)], [16, \"Encoding\", $b84fd3dd9d8eddb2$var$CFFEncoding, (0, $bc0433d9b7e41f5f$export$dee0027060fa13bd)], [17, \"CharStrings\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()), null], [18, \"Private\", new $b84fd3dd9d8eddb2$var$CFFPrivateOp(), null], [[12, 20], \"SyntheticBase\", \"number\", null], [[12, 21], \"PostScript\", \"sid\", null], [[12, 22], \"BaseFontName\", \"sid\", null], [[12, 23], \"BaseFontBlend\", \"delta\", null],\n// CID font specific\n[[12, 31], \"CIDFontVersion\", \"number\", 0], [[12, 32], \"CIDFontRevision\", \"number\", 0], [[12, 33], \"CIDFontType\", \"number\", 0], [[12, 34], \"CIDCount\", \"number\", 8720], [[12, 35], \"UIDBase\", \"number\", null], [[12, 37], \"FDSelect\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect), null], [[12, 36], \"FDArray\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)), null], [[12, 38], \"FontName\", \"sid\", null]]);\nvar $b84fd3dd9d8eddb2$var$VariationStore = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  itemVariationStore: (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241)\n});\nvar $b84fd3dd9d8eddb2$var$CFF2TopDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([[[12, 7], \"FontMatrix\", \"array\", [0.001, 0, 0, 0.001, 0, 0]], [17, \"CharStrings\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()), null], [[12, 37], \"FDSelect\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect), null], [[12, 36], \"FDArray\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)), null], [24, \"vstore\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$VariationStore), null], [25, \"maxstack\", \"number\", 193]]);\nvar $b84fd3dd9d8eddb2$var$CFFTop = new $6uUbQ$VersionedStruct($6uUbQ$fixed16, {\n  1: {\n    hdrSize: $6uUbQ$uint8,\n    offSize: $6uUbQ$uint8,\n    nameIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(new $6uUbQ$String(\"length\")),\n    topDictIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFTopDict),\n    stringIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(new $6uUbQ$String(\"length\")),\n    globalSubrIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()\n  },\n  2: {\n    hdrSize: $6uUbQ$uint8,\n    length: $6uUbQ$uint16,\n    topDict: $b84fd3dd9d8eddb2$var$CFF2TopDict,\n    globalSubrIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()\n  }\n});\nvar $b84fd3dd9d8eddb2$export$2e2bcd8739ae039 = $b84fd3dd9d8eddb2$var$CFFTop;\nvar $822ac0d589e4e237$var$CFFFont = /*#__PURE__*/function () {\n  function $822ac0d589e4e237$var$CFFFont(stream) {\n    _classCallCheck(this, $822ac0d589e4e237$var$CFFFont);\n    this.stream = stream;\n    this.decode();\n  }\n  _createClass($822ac0d589e4e237$var$CFFFont, [{\n    key: \"decode\",\n    value: function decode() {\n      var start = this.stream.pos;\n      var top = (0, $b84fd3dd9d8eddb2$export$2e2bcd8739ae039).decode(this.stream);\n      for (var key in top) {\n        var val = top[key];\n        this[key] = val;\n      }\n      if (this.version < 2) {\n        if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n        this.topDict = this.topDictIndex[0];\n      }\n      this.isCIDFont = this.topDict.ROS != null;\n      return this;\n    }\n  }, {\n    key: \"string\",\n    value: function string(sid) {\n      if (this.version >= 2) return null;\n      if (sid < (0, $229224aec43783c5$export$2e2bcd8739ae039).length) return (0, $229224aec43783c5$export$2e2bcd8739ae039)[sid];\n      return this.stringIndex[sid - (0, $229224aec43783c5$export$2e2bcd8739ae039).length];\n    }\n  }, {\n    key: \"postscriptName\",\n    get: function get() {\n      if (this.version < 2) return this.nameIndex[0];\n      return null;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }, {\n    key: \"getCharString\",\n    value: function getCharString(glyph) {\n      this.stream.pos = this.topDict.CharStrings[glyph].offset;\n      return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n    }\n  }, {\n    key: \"getGlyphName\",\n    value: function getGlyphName(gid) {\n      // CFF2 glyph names are in the post table.\n      if (this.version >= 2) return null;\n      // CID-keyed fonts don't have glyph names\n      if (this.isCIDFont) return null;\n      var charset = this.topDict.charset;\n      if (Array.isArray(charset)) return charset[gid];\n      if (gid === 0) return \".notdef\";\n      gid -= 1;\n      switch (charset.version) {\n        case 0:\n          return this.string(charset.glyphs[gid]);\n        case 1:\n        case 2:\n          for (var i = 0; i < charset.ranges.length; i++) {\n            var range = charset.ranges[i];\n            if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n          }\n          break;\n      }\n      return null;\n    }\n  }, {\n    key: \"fdForGlyph\",\n    value: function fdForGlyph(gid) {\n      if (!this.topDict.FDSelect) return null;\n      switch (this.topDict.FDSelect.version) {\n        case 0:\n          return this.topDict.FDSelect.fds[gid];\n        case 3:\n        case 4:\n          var ranges = this.topDict.FDSelect.ranges;\n          var low = 0;\n          var high = ranges.length - 1;\n          while (low <= high) {\n            var mid = low + high >> 1;\n            if (gid < ranges[mid].first) high = mid - 1;else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;else return ranges[mid].fd;\n          }\n        default:\n          throw new Error(\"Unknown FDSelect version: \".concat(this.topDict.FDSelect.version));\n      }\n    }\n  }, {\n    key: \"privateDictForGlyph\",\n    value: function privateDictForGlyph(gid) {\n      if (this.topDict.FDSelect) {\n        var fd = this.fdForGlyph(gid);\n        if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n        return null;\n      }\n      if (this.version < 2) return this.topDict.Private;\n      return this.topDict.FDArray[0].Private;\n    }\n  }], [{\n    key: \"decode\",\n    value: function decode(stream) {\n      return new $822ac0d589e4e237$var$CFFFont(stream);\n    }\n  }]);\n  return $822ac0d589e4e237$var$CFFFont;\n}();\nvar $822ac0d589e4e237$export$2e2bcd8739ae039 = $822ac0d589e4e237$var$CFFFont;\nvar $2bbf2bc1ce37cd8f$var$VerticalOrigin = new $6uUbQ$Struct({\n  glyphIndex: $6uUbQ$uint16,\n  vertOriginY: $6uUbQ$int16\n});\nvar $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  defaultVertOriginY: $6uUbQ$int16,\n  numVertOriginYMetrics: $6uUbQ$uint16,\n  metrics: new $6uUbQ$Array($2bbf2bc1ce37cd8f$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\nvar $0941618dc22a946d$export$16b227cb15d716a0 = new $6uUbQ$Struct({\n  height: $6uUbQ$uint8,\n  width: $6uUbQ$uint8,\n  horiBearingX: $6uUbQ$int8,\n  horiBearingY: $6uUbQ$int8,\n  horiAdvance: $6uUbQ$uint8,\n  vertBearingX: $6uUbQ$int8,\n  vertBearingY: $6uUbQ$int8,\n  vertAdvance: $6uUbQ$uint8\n});\nvar $0941618dc22a946d$export$62c53e75f69bfe12 = new $6uUbQ$Struct({\n  height: $6uUbQ$uint8,\n  width: $6uUbQ$uint8,\n  bearingX: $6uUbQ$int8,\n  bearingY: $6uUbQ$int8,\n  advance: $6uUbQ$uint8\n});\nvar $0941618dc22a946d$var$EBDTComponent = new $6uUbQ$Struct({\n  glyph: $6uUbQ$uint16,\n  xOffset: $6uUbQ$int8,\n  yOffset: $6uUbQ$int8\n});\nvar $0941618dc22a946d$var$ByteAligned = /*#__PURE__*/_createClass(function $0941618dc22a946d$var$ByteAligned() {\n  _classCallCheck(this, $0941618dc22a946d$var$ByteAligned);\n});\nvar $0941618dc22a946d$var$BitAligned = /*#__PURE__*/_createClass(function $0941618dc22a946d$var$BitAligned() {\n  _classCallCheck(this, $0941618dc22a946d$var$BitAligned);\n});\nvar $0941618dc22a946d$export$f1f5ddeb20d14f = new $6uUbQ$VersionedStruct(\"version\", {\n  1: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    data: $0941618dc22a946d$var$ByteAligned\n  },\n  2: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    data: $0941618dc22a946d$var$BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: $0941618dc22a946d$var$BitAligned\n  },\n  6: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    data: $0941618dc22a946d$var$ByteAligned\n  },\n  7: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    data: $0941618dc22a946d$var$BitAligned\n  },\n  8: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    pad: new $6uUbQ$Reserved($6uUbQ$uint8),\n    numComponents: $6uUbQ$uint16,\n    components: new $6uUbQ$Array($0941618dc22a946d$var$EBDTComponent, \"numComponents\")\n  },\n  9: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    pad: new $6uUbQ$Reserved($6uUbQ$uint8),\n    numComponents: $6uUbQ$uint16,\n    components: new $6uUbQ$Array($0941618dc22a946d$var$EBDTComponent, \"numComponents\")\n  },\n  17: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    dataLen: $6uUbQ$uint32,\n    data: new $6uUbQ$Buffer(\"dataLen\")\n  },\n  18: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    dataLen: $6uUbQ$uint32,\n    data: new $6uUbQ$Buffer(\"dataLen\")\n  },\n  19: {\n    dataLen: $6uUbQ$uint32,\n    data: new $6uUbQ$Buffer(\"dataLen\")\n  }\n});\nvar $9911c4c7201c13de$var$SBitLineMetrics = new $6uUbQ$Struct({\n  ascender: $6uUbQ$int8,\n  descender: $6uUbQ$int8,\n  widthMax: $6uUbQ$uint8,\n  caretSlopeNumerator: $6uUbQ$int8,\n  caretSlopeDenominator: $6uUbQ$int8,\n  caretOffset: $6uUbQ$int8,\n  minOriginSB: $6uUbQ$int8,\n  minAdvanceSB: $6uUbQ$int8,\n  maxBeforeBL: $6uUbQ$int8,\n  minAfterBL: $6uUbQ$int8,\n  pad: new $6uUbQ$Reserved($6uUbQ$int8, 2)\n});\nvar $9911c4c7201c13de$var$CodeOffsetPair = new $6uUbQ$Struct({\n  glyphCode: $6uUbQ$uint16,\n  offset: $6uUbQ$uint16\n});\nvar $9911c4c7201c13de$var$IndexSubtable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  header: {\n    imageFormat: $6uUbQ$uint16,\n    imageDataOffset: $6uUbQ$uint32\n  },\n  1: {\n    offsetArray: new $6uUbQ$Array($6uUbQ$uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: $6uUbQ$uint32,\n    bigMetrics: (0, $0941618dc22a946d$export$16b227cb15d716a0)\n  },\n  3: {\n    offsetArray: new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: $6uUbQ$uint32,\n    glyphArray: new $6uUbQ$Array($9911c4c7201c13de$var$CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: $6uUbQ$uint32,\n    bigMetrics: (0, $0941618dc22a946d$export$16b227cb15d716a0),\n    numGlyphs: $6uUbQ$uint32,\n    glyphCodeArray: new $6uUbQ$Array($6uUbQ$uint16, \"numGlyphs\")\n  }\n});\nvar $9911c4c7201c13de$var$IndexSubtableArray = new $6uUbQ$Struct({\n  firstGlyphIndex: $6uUbQ$uint16,\n  lastGlyphIndex: $6uUbQ$uint16,\n  subtable: new $6uUbQ$Pointer($6uUbQ$uint32, $9911c4c7201c13de$var$IndexSubtable)\n});\nvar $9911c4c7201c13de$var$BitmapSizeTable = new $6uUbQ$Struct({\n  indexSubTableArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($9911c4c7201c13de$var$IndexSubtableArray, 1), {\n    type: \"parent\"\n  }),\n  indexTablesSize: $6uUbQ$uint32,\n  numberOfIndexSubTables: $6uUbQ$uint32,\n  colorRef: $6uUbQ$uint32,\n  hori: $9911c4c7201c13de$var$SBitLineMetrics,\n  vert: $9911c4c7201c13de$var$SBitLineMetrics,\n  startGlyphIndex: $6uUbQ$uint16,\n  endGlyphIndex: $6uUbQ$uint16,\n  ppemX: $6uUbQ$uint8,\n  ppemY: $6uUbQ$uint8,\n  bitDepth: $6uUbQ$uint8,\n  flags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\"horizontal\", \"vertical\"])\n});\nvar $9911c4c7201c13de$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  numSizes: $6uUbQ$uint32,\n  sizes: new $6uUbQ$Array($9911c4c7201c13de$var$BitmapSizeTable, \"numSizes\")\n});\nvar $abb847051efd51b1$var$ImageTable = new $6uUbQ$Struct({\n  ppem: $6uUbQ$uint16,\n  resolution: $6uUbQ$uint16,\n  imageOffsets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, \"void\"), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n});\nvar\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$abb847051efd51b1$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  flags: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"renderOutlines\"]),\n  numImgTables: $6uUbQ$uint32,\n  imageTables: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $abb847051efd51b1$var$ImageTable), \"numImgTables\")\n});\nvar $eb629188f3dfefdd$var$LayerRecord = new $6uUbQ$Struct({\n  gid: $6uUbQ$uint16,\n  paletteIndex: $6uUbQ$uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\nvar $eb629188f3dfefdd$var$BaseGlyphRecord = new $6uUbQ$Struct({\n  gid: $6uUbQ$uint16,\n  // and is not rendered for color.\n  firstLayerIndex: $6uUbQ$uint16,\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: $6uUbQ$uint16\n});\nvar $eb629188f3dfefdd$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numBaseGlyphRecords: $6uUbQ$uint16,\n  baseGlyphRecord: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($eb629188f3dfefdd$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n  layerRecords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($eb629188f3dfefdd$var$LayerRecord, \"numLayerRecords\"), {\n    lazy: true\n  }),\n  numLayerRecords: $6uUbQ$uint16\n});\nvar $08734b8e7dc64587$var$ColorRecord = new $6uUbQ$Struct({\n  blue: $6uUbQ$uint8,\n  green: $6uUbQ$uint8,\n  red: $6uUbQ$uint8,\n  alpha: $6uUbQ$uint8\n});\nvar $08734b8e7dc64587$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  header: {\n    numPaletteEntries: $6uUbQ$uint16,\n    numPalettes: $6uUbQ$uint16,\n    numColorRecords: $6uUbQ$uint16,\n    colorRecords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($08734b8e7dc64587$var$ColorRecord, \"numColorRecords\")),\n    colorRecordIndices: new $6uUbQ$Array($6uUbQ$uint16, \"numPalettes\")\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint32, \"numPalettes\")),\n    offsetPaletteLabelArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint16, \"numPalettes\")),\n    offsetPaletteEntryLabelArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint16, \"numPaletteEntries\"))\n  }\n});\nvar $497cef411d884e34$var$BaseCoord = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coordinate: $6uUbQ$int16 // X or Y value, in design units\n  },\n\n  2: {\n    coordinate: $6uUbQ$int16,\n    referenceGlyph: $6uUbQ$uint16,\n    baseCoordPoint: $6uUbQ$uint16 // Index of contour point on the referenceGlyph\n  },\n\n  3: {\n    coordinate: $6uUbQ$int16,\n    deviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10)) // Device table for X or Y value\n  }\n});\n\nvar $497cef411d884e34$var$BaseValues = new $6uUbQ$Struct({\n  defaultIndex: $6uUbQ$uint16,\n  baseCoordCount: $6uUbQ$uint16,\n  baseCoords: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord), \"baseCoordCount\")\n});\nvar $497cef411d884e34$var$FeatMinMaxRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  minCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord, {\n    type: \"parent\"\n  }),\n  maxCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord, {\n    type: \"parent\"\n  }) // May be NULL\n});\n\nvar $497cef411d884e34$var$MinMax = new $6uUbQ$Struct({\n  minCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord),\n  maxCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord),\n  featMinMaxCount: $6uUbQ$uint16,\n  featMinMaxRecords: new $6uUbQ$Array($497cef411d884e34$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n});\n\nvar $497cef411d884e34$var$BaseLangSysRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  minMax: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$MinMax, {\n    type: \"parent\"\n  })\n});\nvar $497cef411d884e34$var$BaseScript = new $6uUbQ$Struct({\n  baseValues: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseValues),\n  defaultMinMax: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$MinMax),\n  baseLangSysCount: $6uUbQ$uint16,\n  baseLangSysRecords: new $6uUbQ$Array($497cef411d884e34$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n});\n\nvar $497cef411d884e34$var$BaseScriptRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  script: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseScript, {\n    type: \"parent\"\n  })\n});\nvar $497cef411d884e34$var$BaseScriptList = new $6uUbQ$Array($497cef411d884e34$var$BaseScriptRecord, $6uUbQ$uint16);\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nvar $497cef411d884e34$var$BaseTagList = new $6uUbQ$Array(new $6uUbQ$String(4), $6uUbQ$uint16);\nvar $497cef411d884e34$var$Axis = new $6uUbQ$Struct({\n  baseTagList: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseTagList),\n  baseScriptList: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseScriptList)\n});\nvar $497cef411d884e34$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    horizAxis: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$Axis),\n    vertAxis: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$Axis) // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241))\n  }\n});\nvar $cf5f33c63ef209e6$var$AttachPoint = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nvar $cf5f33c63ef209e6$var$AttachList = new $6uUbQ$Struct({\n  coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n  glyphCount: $6uUbQ$uint16,\n  attachPoints: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$AttachPoint), \"glyphCount\")\n});\nvar $cf5f33c63ef209e6$var$CaretValue = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coordinate: $6uUbQ$int16\n  },\n  2: {\n    caretValuePoint: $6uUbQ$uint16\n  },\n  3: {\n    coordinate: $6uUbQ$int16,\n    deviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10))\n  }\n});\nvar $cf5f33c63ef209e6$var$LigGlyph = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$CaretValue), $6uUbQ$uint16);\nvar $cf5f33c63ef209e6$var$LigCaretList = new $6uUbQ$Struct({\n  coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n  ligGlyphCount: $6uUbQ$uint16,\n  ligGlyphs: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$LigGlyph), \"ligGlyphCount\")\n});\nvar $cf5f33c63ef209e6$var$MarkGlyphSetsDef = new $6uUbQ$Struct({\n  markSetTableFormat: $6uUbQ$uint16,\n  markSetCount: $6uUbQ$uint16,\n  coverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"markSetCount\")\n});\nvar $cf5f33c63ef209e6$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    glyphClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n    attachList: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$AttachList),\n    ligCaretList: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$LigCaretList),\n    markAttachClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71))\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$MarkGlyphSetsDef),\n    itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241))\n  }\n});\nvar $47e0e8ef515d9903$var$ValueFormat = new $6uUbQ$Bitfield($6uUbQ$uint16, [\"xPlacement\", \"yPlacement\", \"xAdvance\", \"yAdvance\", \"xPlaDevice\", \"yPlaDevice\", \"xAdvDevice\", \"yAdvDevice\"]);\nvar $47e0e8ef515d9903$var$types = {\n  xPlacement: $6uUbQ$int16,\n  yPlacement: $6uUbQ$int16,\n  xAdvance: $6uUbQ$int16,\n  yAdvance: $6uUbQ$int16,\n  xPlaDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.rel;\n    }\n  }),\n  yPlaDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.rel;\n    }\n  }),\n  xAdvDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.rel;\n    }\n  }),\n  yAdvDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.rel;\n    }\n  })\n};\nvar $47e0e8ef515d9903$var$ValueRecord = /*#__PURE__*/function () {\n  function $47e0e8ef515d9903$var$ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"valueFormat\";\n    _classCallCheck(this, $47e0e8ef515d9903$var$ValueRecord);\n    this.key = key;\n  }\n  _createClass($47e0e8ef515d9903$var$ValueRecord, [{\n    key: \"buildStruct\",\n    value: function buildStruct(parent) {\n      var struct = parent;\n      while (!struct[this.key] && struct.parent) struct = struct.parent;\n      if (!struct[this.key]) return;\n      var fields = {};\n      fields.rel = function () {\n        return struct._startOffset;\n      };\n      var format = struct[this.key];\n      for (var key in format) if (format[key]) fields[key] = $47e0e8ef515d9903$var$types[key];\n      return new $6uUbQ$Struct(fields);\n    }\n  }, {\n    key: \"size\",\n    value: function size(val, ctx) {\n      return this.buildStruct(ctx).size(val, ctx);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var res = this.buildStruct(parent).decode(stream, parent);\n      delete res.rel;\n      return res;\n    }\n  }]);\n  return $47e0e8ef515d9903$var$ValueRecord;\n}();\nvar $47e0e8ef515d9903$var$PairValueRecord = new $6uUbQ$Struct({\n  secondGlyph: $6uUbQ$uint16,\n  value1: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat1\"),\n  value2: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat2\")\n});\nvar $47e0e8ef515d9903$var$PairSet = new $6uUbQ$Array($47e0e8ef515d9903$var$PairValueRecord, $6uUbQ$uint16);\nvar $47e0e8ef515d9903$var$Class2Record = new $6uUbQ$Struct({\n  value1: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat1\"),\n  value2: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat2\")\n});\nvar $47e0e8ef515d9903$var$Anchor = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    xCoordinate: $6uUbQ$int16,\n    yCoordinate: $6uUbQ$int16\n  },\n  2: {\n    xCoordinate: $6uUbQ$int16,\n    yCoordinate: $6uUbQ$int16,\n    anchorPoint: $6uUbQ$uint16\n  },\n  3: {\n    xCoordinate: $6uUbQ$int16,\n    yCoordinate: $6uUbQ$int16,\n    xDeviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10)),\n    yDeviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10))\n  }\n});\nvar $47e0e8ef515d9903$var$EntryExitRecord = new $6uUbQ$Struct({\n  entryAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n    type: \"parent\"\n  }),\n  exitAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n    type: \"parent\"\n  })\n});\nvar $47e0e8ef515d9903$var$MarkRecord = new $6uUbQ$Struct({\n  class: $6uUbQ$uint16,\n  markAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n    type: \"parent\"\n  })\n});\nvar $47e0e8ef515d9903$var$MarkArray = new $6uUbQ$Array($47e0e8ef515d9903$var$MarkRecord, $6uUbQ$uint16);\nvar $47e0e8ef515d9903$var$BaseRecord = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar $47e0e8ef515d9903$var$BaseArray = new $6uUbQ$Array($47e0e8ef515d9903$var$BaseRecord, $6uUbQ$uint16);\nvar $47e0e8ef515d9903$var$ComponentRecord = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar $47e0e8ef515d9903$var$LigatureAttach = new $6uUbQ$Array($47e0e8ef515d9903$var$ComponentRecord, $6uUbQ$uint16);\nvar $47e0e8ef515d9903$var$LigatureArray = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$LigatureAttach), $6uUbQ$uint16);\nvar $47e0e8ef515d9903$export$73a8cfb19cd43a0f = new $6uUbQ$VersionedStruct(\"lookupType\", {\n  1: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat: $47e0e8ef515d9903$var$ValueFormat,\n      value: new $47e0e8ef515d9903$var$ValueRecord()\n    },\n    2: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat: $47e0e8ef515d9903$var$ValueFormat,\n      valueCount: $6uUbQ$uint16,\n      values: new $6uUbQ$LazyArray(new $47e0e8ef515d9903$var$ValueRecord(), \"valueCount\")\n    }\n  }),\n  2: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat1: $47e0e8ef515d9903$var$ValueFormat,\n      valueFormat2: $47e0e8ef515d9903$var$ValueFormat,\n      pairSetCount: $6uUbQ$uint16,\n      pairSets: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$PairSet), \"pairSetCount\")\n    },\n    2: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat1: $47e0e8ef515d9903$var$ValueFormat,\n      valueFormat2: $47e0e8ef515d9903$var$ValueFormat,\n      classDef1: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n      classDef2: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n      class1Count: $6uUbQ$uint16,\n      class2Count: $6uUbQ$uint16,\n      classRecords: new $6uUbQ$LazyArray(new $6uUbQ$LazyArray($47e0e8ef515d9903$var$Class2Record, \"class2Count\"), \"class1Count\")\n    }\n  }),\n  3: {\n    format: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    entryExitCount: $6uUbQ$uint16,\n    entryExitRecords: new $6uUbQ$Array($47e0e8ef515d9903$var$EntryExitRecord, \"entryExitCount\")\n  },\n  4: {\n    format: $6uUbQ$uint16,\n    markCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    baseCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    classCount: $6uUbQ$uint16,\n    markArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n    baseArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$BaseArray)\n  },\n  5: {\n    format: $6uUbQ$uint16,\n    markCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    ligatureCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    classCount: $6uUbQ$uint16,\n    markArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n    ligatureArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$LigatureArray)\n  },\n  6: {\n    format: $6uUbQ$uint16,\n    mark1Coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    mark2Coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    classCount: $6uUbQ$uint16,\n    mark1Array: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n    mark2Array: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$BaseArray)\n  },\n  7: (0, $7cbbe4e24ef3cb75$export$841858b892ce1f4c),\n  8: (0, $7cbbe4e24ef3cb75$export$5e6d09e6861162f6),\n  9: {\n    posFormat: $6uUbQ$uint16,\n    lookupType: $6uUbQ$uint16,\n    extension: new $6uUbQ$Pointer($6uUbQ$uint32, null)\n  }\n});\n// Fix circular reference\n$47e0e8ef515d9903$export$73a8cfb19cd43a0f.versions[9].extension.type = $47e0e8ef515d9903$export$73a8cfb19cd43a0f;\nvar $47e0e8ef515d9903$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    scriptList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$3e15fc05ce864229)),\n    featureList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),\n    lookupList: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($47e0e8ef515d9903$export$73a8cfb19cd43a0f))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$441b70b7971dd419))\n  }\n});\nvar $d3f442064af66e06$var$Sequence = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nvar $d3f442064af66e06$var$AlternateSet = $d3f442064af66e06$var$Sequence;\nvar $d3f442064af66e06$var$Ligature = new $6uUbQ$Struct({\n  glyph: $6uUbQ$uint16,\n  compCount: $6uUbQ$uint16,\n  components: new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar $d3f442064af66e06$var$LigatureSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$Ligature), $6uUbQ$uint16);\nvar $d3f442064af66e06$var$GSUBLookup = new $6uUbQ$VersionedStruct(\"lookupType\", {\n  1: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      deltaGlyphID: $6uUbQ$int16\n    },\n    2: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      glyphCount: $6uUbQ$uint16,\n      substitute: new $6uUbQ$LazyArray($6uUbQ$uint16, \"glyphCount\")\n    }\n  }),\n  2: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    count: $6uUbQ$uint16,\n    sequences: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$Sequence), \"count\")\n  },\n  3: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    count: $6uUbQ$uint16,\n    alternateSet: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$AlternateSet), \"count\")\n  },\n  4: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    count: $6uUbQ$uint16,\n    ligatureSets: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$LigatureSet), \"count\")\n  },\n  5: (0, $7cbbe4e24ef3cb75$export$841858b892ce1f4c),\n  6: (0, $7cbbe4e24ef3cb75$export$5e6d09e6861162f6),\n  7: {\n    substFormat: $6uUbQ$uint16,\n    lookupType: $6uUbQ$uint16,\n    extension: new $6uUbQ$Pointer($6uUbQ$uint32, null)\n  },\n  8: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    backtrackCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"backtrackGlyphCount\"),\n    lookaheadGlyphCount: $6uUbQ$uint16,\n    lookaheadCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"lookaheadGlyphCount\"),\n    glyphCount: $6uUbQ$uint16,\n    substitutes: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n  }\n});\n// Fix circular reference\n$d3f442064af66e06$var$GSUBLookup.versions[7].extension.type = $d3f442064af66e06$var$GSUBLookup;\nvar $d3f442064af66e06$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    scriptList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$3e15fc05ce864229)),\n    featureList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),\n    lookupList: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($d3f442064af66e06$var$GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$441b70b7971dd419))\n  }\n});\nvar $71cfb3c4767fbd0c$var$JstfGSUBModList = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nvar $71cfb3c4767fbd0c$var$JstfPriority = new $6uUbQ$Struct({\n  shrinkageEnableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageDisableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageEnableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageDisableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageJstfMax: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0, $47e0e8ef515d9903$export$73a8cfb19cd43a0f))),\n  extensionEnableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionDisableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionEnableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionDisableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionJstfMax: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0, $47e0e8ef515d9903$export$73a8cfb19cd43a0f)))\n});\nvar $71cfb3c4767fbd0c$var$JstfLangSys = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfPriority), $6uUbQ$uint16);\nvar $71cfb3c4767fbd0c$var$JstfLangSysRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  jstfLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfLangSys)\n});\nvar $71cfb3c4767fbd0c$var$JstfScript = new $6uUbQ$Struct({\n  extenderGlyphs: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16)),\n  defaultLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfLangSys),\n  langSysCount: $6uUbQ$uint16,\n  langSysRecords: new $6uUbQ$Array($71cfb3c4767fbd0c$var$JstfLangSysRecord, \"langSysCount\")\n});\nvar $71cfb3c4767fbd0c$var$JstfScriptRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  script: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfScript, {\n    type: \"parent\"\n  })\n});\nvar $71cfb3c4767fbd0c$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  scriptCount: $6uUbQ$uint16,\n  scriptList: new $6uUbQ$Array($71cfb3c4767fbd0c$var$JstfScriptRecord, \"scriptCount\")\n});\n\n// TODO: add this to restructure\nvar $d059a6bd2d3b5b63$var$VariableSizeNumber = /*#__PURE__*/function () {\n  function $d059a6bd2d3b5b63$var$VariableSizeNumber(size) {\n    _classCallCheck(this, $d059a6bd2d3b5b63$var$VariableSizeNumber);\n    this._size = size;\n  }\n  _createClass($d059a6bd2d3b5b63$var$VariableSizeNumber, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      switch (this.size(0, parent)) {\n        case 1:\n          return stream.readUInt8();\n        case 2:\n          return stream.readUInt16BE();\n        case 3:\n          return stream.readUInt24BE();\n        case 4:\n          return stream.readUInt32BE();\n      }\n    }\n  }, {\n    key: \"size\",\n    value: function size(val, parent) {\n      return (0, $6uUbQ$resolveLength)(this._size, null, parent);\n    }\n  }]);\n  return $d059a6bd2d3b5b63$var$VariableSizeNumber;\n}();\nvar $d059a6bd2d3b5b63$var$MapDataEntry = new $6uUbQ$Struct({\n  entry: new $d059a6bd2d3b5b63$var$VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar $d059a6bd2d3b5b63$var$DeltaSetIndexMap = new $6uUbQ$Struct({\n  entryFormat: $6uUbQ$uint16,\n  mapCount: $6uUbQ$uint16,\n  mapData: new $6uUbQ$Array($d059a6bd2d3b5b63$var$MapDataEntry, \"mapCount\")\n});\nvar $d059a6bd2d3b5b63$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241)),\n  advanceWidthMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap),\n  LSBMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap),\n  RSBMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap)\n});\nvar $dceeca3e1977ce30$var$Signature = new $6uUbQ$Struct({\n  format: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  offset: $6uUbQ$uint32\n});\nvar $dceeca3e1977ce30$var$SignatureBlock = new $6uUbQ$Struct({\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16, 2),\n  cbSignature: $6uUbQ$uint32,\n  signature: new $6uUbQ$Buffer(\"cbSignature\")\n});\nvar $dceeca3e1977ce30$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  ulVersion: $6uUbQ$uint32,\n  usNumSigs: $6uUbQ$uint16,\n  usFlag: $6uUbQ$uint16,\n  signatures: new $6uUbQ$Array($dceeca3e1977ce30$var$Signature, \"usNumSigs\"),\n  signatureBlocks: new $6uUbQ$Array($dceeca3e1977ce30$var$SignatureBlock, \"usNumSigs\")\n});\nvar $8acd740a9435aad0$var$GaspRange = new $6uUbQ$Struct({\n  rangeMaxPPEM: $6uUbQ$uint16,\n  rangeGaspBehavior: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"grayscale\", \"gridfit\", \"symmetricSmoothing\", \"symmetricGridfit\" // only in version 1, for ClearType\n  ])\n});\n\nvar $8acd740a9435aad0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numRanges: $6uUbQ$uint16,\n  gaspRanges: new $6uUbQ$Array($8acd740a9435aad0$var$GaspRange, \"numRanges\") // Sorted by ppem\n});\n\nvar $b5f380243c34d6a0$var$DeviceRecord = new $6uUbQ$Struct({\n  pixelSize: $6uUbQ$uint8,\n  maximumWidth: $6uUbQ$uint8,\n  widths: new $6uUbQ$Array($6uUbQ$uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n});\nvar\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n$b5f380243c34d6a0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numRecords: $6uUbQ$int16,\n  sizeDeviceRecord: $6uUbQ$int32,\n  records: new $6uUbQ$Array($b5f380243c34d6a0$var$DeviceRecord, \"numRecords\")\n});\nvar $ca2df1256966e313$var$KernPair = new $6uUbQ$Struct({\n  left: $6uUbQ$uint16,\n  right: $6uUbQ$uint16,\n  value: $6uUbQ$int16\n});\nvar $ca2df1256966e313$var$ClassTable = new $6uUbQ$Struct({\n  firstGlyph: $6uUbQ$uint16,\n  nGlyphs: $6uUbQ$uint16,\n  offsets: new $6uUbQ$Array($6uUbQ$uint16, \"nGlyphs\"),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar $ca2df1256966e313$var$Kern2Array = new $6uUbQ$Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new $6uUbQ$LazyArray($6uUbQ$int16, \"len\")\n});\nvar $ca2df1256966e313$var$KernSubtable = new $6uUbQ$VersionedStruct(\"format\", {\n  0: {\n    nPairs: $6uUbQ$uint16,\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16,\n    pairs: new $6uUbQ$Array($ca2df1256966e313$var$KernPair, \"nPairs\")\n  },\n  2: {\n    rowWidth: $6uUbQ$uint16,\n    leftTable: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$ClassTable, {\n      type: \"parent\"\n    }),\n    rightTable: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$ClassTable, {\n      type: \"parent\"\n    }),\n    array: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$Kern2Array, {\n      type: \"parent\"\n    })\n  },\n  3: {\n    glyphCount: $6uUbQ$uint16,\n    kernValueCount: $6uUbQ$uint8,\n    leftClassCount: $6uUbQ$uint8,\n    rightClassCount: $6uUbQ$uint8,\n    flags: $6uUbQ$uint8,\n    kernValue: new $6uUbQ$Array($6uUbQ$int16, \"kernValueCount\"),\n    leftClass: new $6uUbQ$Array($6uUbQ$uint8, \"glyphCount\"),\n    rightClass: new $6uUbQ$Array($6uUbQ$uint8, \"glyphCount\"),\n    kernIndex: new $6uUbQ$Array($6uUbQ$uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar $ca2df1256966e313$var$KernTable = new $6uUbQ$VersionedStruct(\"version\", {\n  0: {\n    subVersion: $6uUbQ$uint16,\n    length: $6uUbQ$uint16,\n    format: $6uUbQ$uint8,\n    coverage: new $6uUbQ$Bitfield($6uUbQ$uint8, [\"horizontal\", \"minimum\", \"crossStream\", \"override\" // If set to 1 the value in this table replaces the accumulated value\n    ]),\n\n    subtable: $ca2df1256966e313$var$KernSubtable,\n    padding: new $6uUbQ$Reserved($6uUbQ$uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    length: $6uUbQ$uint32,\n    coverage: new $6uUbQ$Bitfield($6uUbQ$uint8, [null, null, null, null, null, \"variation\", \"crossStream\", \"vertical\" // Set if table has vertical kerning values\n    ]),\n\n    format: $6uUbQ$uint8,\n    tupleIndex: $6uUbQ$uint16,\n    subtable: $ca2df1256966e313$var$KernSubtable,\n    padding: new $6uUbQ$Reserved($6uUbQ$uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar $ca2df1256966e313$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  0: {\n    nTables: $6uUbQ$uint16,\n    tables: new $6uUbQ$Array($ca2df1256966e313$var$KernTable, \"nTables\")\n  },\n  1: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    nTables: $6uUbQ$uint32,\n    tables: new $6uUbQ$Array($ca2df1256966e313$var$KernTable, \"nTables\")\n  }\n});\nvar\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$7a9f92b0c46ebe33$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numGlyphs: $6uUbQ$uint16,\n  yPels: new $6uUbQ$Array($6uUbQ$uint8, \"numGlyphs\")\n});\nvar\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$2b2ccc419d152631$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  fontNumber: $6uUbQ$uint32,\n  pitch: $6uUbQ$uint16,\n  xHeight: $6uUbQ$uint16,\n  style: $6uUbQ$uint16,\n  typeFamily: $6uUbQ$uint16,\n  capHeight: $6uUbQ$uint16,\n  symbolSet: $6uUbQ$uint16,\n  typeface: new $6uUbQ$String(16),\n  characterComplement: new $6uUbQ$String(8),\n  fileName: new $6uUbQ$String(6),\n  strokeWeight: new $6uUbQ$String(1),\n  widthType: new $6uUbQ$String(1),\n  serifStyle: $6uUbQ$uint8,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint8)\n});\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\nvar $ca5b40b9bcda9c9b$var$Ratio = new $6uUbQ$Struct({\n  bCharSet: $6uUbQ$uint8,\n  xRatio: $6uUbQ$uint8,\n  yStartRatio: $6uUbQ$uint8,\n  yEndRatio: $6uUbQ$uint8 // Ending y-Ratio value\n});\n\nvar $ca5b40b9bcda9c9b$var$vTable = new $6uUbQ$Struct({\n  yPelHeight: $6uUbQ$uint16,\n  yMax: $6uUbQ$int16,\n  yMin: $6uUbQ$int16 // Minimum value (in pels) for this yPelHeight\n});\n\nvar $ca5b40b9bcda9c9b$var$VdmxGroup = new $6uUbQ$Struct({\n  recs: $6uUbQ$uint16,\n  startsz: $6uUbQ$uint8,\n  endsz: $6uUbQ$uint8,\n  entries: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$vTable, \"recs\") // The VDMX records\n});\n\nvar $ca5b40b9bcda9c9b$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numRecs: $6uUbQ$uint16,\n  numRatios: $6uUbQ$uint16,\n  ratioRanges: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$Ratio, \"numRatios\"),\n  offsets: new $6uUbQ$Array($6uUbQ$uint16, \"numRatios\"),\n  groups: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n});\n\nvar\n// Vertical Header Table\n$69530a3c40755af0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  ascent: $6uUbQ$int16,\n  descent: $6uUbQ$int16,\n  lineGap: $6uUbQ$int16,\n  advanceHeightMax: $6uUbQ$int16,\n  minTopSideBearing: $6uUbQ$int16,\n  minBottomSideBearing: $6uUbQ$int16,\n  yMaxExtent: $6uUbQ$int16,\n  caretSlopeRise: $6uUbQ$int16,\n  caretSlopeRun: $6uUbQ$int16,\n  caretOffset: $6uUbQ$int16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$int16, 4),\n  metricDataFormat: $6uUbQ$int16,\n  numberOfMetrics: $6uUbQ$uint16 // Number of advance heights in the Vertical Metrics table\n});\n\nvar $344073dd270f0e62$var$VmtxEntry = new $6uUbQ$Struct({\n  advance: $6uUbQ$uint16,\n  bearing: $6uUbQ$int16 // The top sidebearing of the glyph\n});\n\nvar\n// Vertical Metrics Table\n$344073dd270f0e62$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  metrics: new $6uUbQ$LazyArray($344073dd270f0e62$var$VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new $6uUbQ$LazyArray($6uUbQ$int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar $3793b781918cfced$var$shortFrac = new $6uUbQ$Fixed(16, \"BE\", 14);\nvar $3793b781918cfced$var$Correspondence = new $6uUbQ$Struct({\n  fromCoord: $3793b781918cfced$var$shortFrac,\n  toCoord: $3793b781918cfced$var$shortFrac\n});\nvar $3793b781918cfced$var$Segment = new $6uUbQ$Struct({\n  pairCount: $6uUbQ$uint16,\n  correspondence: new $6uUbQ$Array($3793b781918cfced$var$Correspondence, \"pairCount\")\n});\nvar $3793b781918cfced$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  axisCount: $6uUbQ$uint32,\n  segment: new $6uUbQ$Array($3793b781918cfced$var$Segment, \"axisCount\")\n});\nvar $6cb7dd5f47d82580$var$UnboundedArrayAccessor = /*#__PURE__*/function () {\n  function $6cb7dd5f47d82580$var$UnboundedArrayAccessor(type, stream, parent) {\n    _classCallCheck(this, $6cb7dd5f47d82580$var$UnboundedArrayAccessor);\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n  _createClass($6cb7dd5f47d82580$var$UnboundedArrayAccessor, [{\n    key: \"getItem\",\n    value: function getItem(index) {\n      if (this._items[index] == null) {\n        var pos = this.stream.pos;\n        this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n        this._items[index] = this.type.decode(this.stream, this.parent);\n        this.stream.pos = pos;\n      }\n      return this._items[index];\n    }\n  }, {\n    key: \"inspect\",\n    value: function inspect() {\n      return \"[UnboundedArray \".concat(this.type.constructor.name, \"]\");\n    }\n  }]);\n  return $6cb7dd5f47d82580$var$UnboundedArrayAccessor;\n}();\nvar $6cb7dd5f47d82580$export$c5af1eebc882e39a = /*#__PURE__*/function (_$6uUbQ$Array2) {\n  _inherits($6cb7dd5f47d82580$export$c5af1eebc882e39a, _$6uUbQ$Array2);\n  var _super4 = _createSuper($6cb7dd5f47d82580$export$c5af1eebc882e39a);\n  function $6cb7dd5f47d82580$export$c5af1eebc882e39a(type) {\n    _classCallCheck(this, $6cb7dd5f47d82580$export$c5af1eebc882e39a);\n    return _super4.call(this, type, 0);\n  }\n  _createClass($6cb7dd5f47d82580$export$c5af1eebc882e39a, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      return new $6cb7dd5f47d82580$var$UnboundedArrayAccessor(this.type, stream, parent);\n    }\n  }]);\n  return $6cb7dd5f47d82580$export$c5af1eebc882e39a;\n}($6uUbQ$Array);\nvar $6cb7dd5f47d82580$export$8351f8c2ae2f103c = function $6cb7dd5f47d82580$export$8351f8c2ae2f103c() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $6uUbQ$uint16;\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = /*#__PURE__*/function () {\n    function Shadow(type) {\n      _classCallCheck(this, Shadow);\n      this.type = type;\n    }\n    _createClass(Shadow, [{\n      key: \"decode\",\n      value: function decode(stream, ctx) {\n        ctx = ctx.parent.parent;\n        return this.type.decode(stream, ctx);\n      }\n    }, {\n      key: \"size\",\n      value: function size(val, ctx) {\n        ctx = ctx.parent.parent;\n        return this.type.size(val, ctx);\n      }\n    }, {\n      key: \"encode\",\n      value: function encode(stream, val, ctx) {\n        ctx = ctx.parent.parent;\n        return this.type.encode(stream, val, ctx);\n      }\n    }]);\n    return Shadow;\n  }();\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new $6uUbQ$Struct({\n    unitSize: $6uUbQ$uint16,\n    nUnits: $6uUbQ$uint16,\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16\n  });\n  var LookupSegmentSingle = new $6uUbQ$Struct({\n    lastGlyph: $6uUbQ$uint16,\n    firstGlyph: $6uUbQ$uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new $6uUbQ$Struct({\n    lastGlyph: $6uUbQ$uint16,\n    firstGlyph: $6uUbQ$uint16,\n    values: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: \"parent\"\n    })\n  });\n  var LookupSingle = new $6uUbQ$Struct({\n    glyph: $6uUbQ$uint16,\n    value: ValueType\n  });\n  return new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    0: {\n      values: new $6cb7dd5f47d82580$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n    },\n\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new $6uUbQ$Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new $6uUbQ$Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new $6uUbQ$Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: $6uUbQ$uint16,\n      count: $6uUbQ$uint16,\n      values: new $6uUbQ$Array(ValueType, \"count\")\n    }\n  });\n};\nfunction $6cb7dd5f47d82580$export$79f7d93d790934ba() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $6uUbQ$uint16;\n  var entry = Object.assign({\n    newState: $6uUbQ$uint16,\n    flags: $6uUbQ$uint16\n  }, entryData);\n  var Entry = new $6uUbQ$Struct(entry);\n  var StateArray = new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new $6uUbQ$Array($6uUbQ$uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new $6uUbQ$Struct({\n    nClasses: $6uUbQ$uint32,\n    classTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(lookupType)),\n    stateArray: new $6uUbQ$Pointer($6uUbQ$uint32, StateArray),\n    entryTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))\n  });\n  return StateHeader;\n}\nfunction $6cb7dd5f47d82580$export$105027425199cc51() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $6uUbQ$uint16;\n  var ClassLookupTable = new $6uUbQ$Struct({\n    version: function version() {\n      return 8;\n    },\n    firstGlyph: $6uUbQ$uint16,\n    values: new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: $6uUbQ$uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: $6uUbQ$uint16\n  }, entryData);\n  var Entry = new $6uUbQ$Struct(entry);\n  var StateArray = new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new $6uUbQ$Array($6uUbQ$uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new $6uUbQ$Struct({\n    nClasses: $6uUbQ$uint16,\n    classTable: new $6uUbQ$Pointer($6uUbQ$uint16, ClassLookupTable),\n    stateArray: new $6uUbQ$Pointer($6uUbQ$uint16, StateArray),\n    entryTable: new $6uUbQ$Pointer($6uUbQ$uint16, new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))\n  });\n  return StateHeader1;\n}\nvar $6a3746e8c708f5a3$var$BslnSubtable = new $6uUbQ$VersionedStruct(\"format\", {\n  0: {\n    deltas: new $6uUbQ$Array($6uUbQ$int16, 32)\n  },\n  1: {\n    deltas: new $6uUbQ$Array($6uUbQ$int16, 32),\n    mappingData: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($6uUbQ$uint16)\n  },\n  2: {\n    standardGlyph: $6uUbQ$uint16,\n    controlPoints: new $6uUbQ$Array($6uUbQ$uint16, 32)\n  },\n  3: {\n    standardGlyph: $6uUbQ$uint16,\n    controlPoints: new $6uUbQ$Array($6uUbQ$uint16, 32),\n    mappingData: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($6uUbQ$uint16)\n  }\n});\nvar $6a3746e8c708f5a3$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  format: $6uUbQ$uint16,\n  defaultBaseline: $6uUbQ$uint16,\n  subtable: $6a3746e8c708f5a3$var$BslnSubtable\n});\nvar $d0c76fac617b308a$var$Setting = new $6uUbQ$Struct({\n  setting: $6uUbQ$uint16,\n  nameIndex: $6uUbQ$int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar $d0c76fac617b308a$var$FeatureName = new $6uUbQ$Struct({\n  feature: $6uUbQ$uint16,\n  nSettings: $6uUbQ$uint16,\n  settingTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($d0c76fac617b308a$var$Setting, \"nSettings\"), {\n    type: \"parent\"\n  }),\n  featureFlags: new $6uUbQ$Bitfield($6uUbQ$uint8, [null, null, null, null, null, null, \"hasDefault\", \"exclusive\"]),\n  defaultSetting: $6uUbQ$uint8,\n  nameIndex: $6uUbQ$int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar $d0c76fac617b308a$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  featureNameCount: $6uUbQ$uint16,\n  reserved1: new $6uUbQ$Reserved($6uUbQ$uint16),\n  reserved2: new $6uUbQ$Reserved($6uUbQ$uint32),\n  featureNames: new $6uUbQ$Array($d0c76fac617b308a$var$FeatureName, \"featureNameCount\")\n});\nvar $e83fd065f00fcd01$var$Axis = new $6uUbQ$Struct({\n  axisTag: new $6uUbQ$String(4),\n  minValue: $6uUbQ$fixed32,\n  defaultValue: $6uUbQ$fixed32,\n  maxValue: $6uUbQ$fixed32,\n  flags: $6uUbQ$uint16,\n  nameID: $6uUbQ$uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar $e83fd065f00fcd01$var$Instance = new $6uUbQ$Struct({\n  nameID: $6uUbQ$uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: $6uUbQ$uint16,\n  coord: new $6uUbQ$Array($6uUbQ$fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new $6uUbQ$Optional($6uUbQ$uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar $e83fd065f00fcd01$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  offsetToData: $6uUbQ$uint16,\n  countSizePairs: $6uUbQ$uint16,\n  axisCount: $6uUbQ$uint16,\n  axisSize: $6uUbQ$uint16,\n  instanceCount: $6uUbQ$uint16,\n  instanceSize: $6uUbQ$uint16,\n  axis: new $6uUbQ$Array($e83fd065f00fcd01$var$Axis, \"axisCount\"),\n  instance: new $6uUbQ$Array($e83fd065f00fcd01$var$Instance, \"instanceCount\")\n});\nvar $dbe33c8d3a7f131c$var$shortFrac = new $6uUbQ$Fixed(16, \"BE\", 14);\nvar $dbe33c8d3a7f131c$var$Offset = /*#__PURE__*/function () {\n  function $dbe33c8d3a7f131c$var$Offset() {\n    _classCallCheck(this, $dbe33c8d3a7f131c$var$Offset);\n  }\n  _createClass($dbe33c8d3a7f131c$var$Offset, null, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      // In short format, offsets are multiplied by 2.\n      // This doesn't seem to be documented by Apple, but it\n      // is implemented this way in Freetype.\n      return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n    }\n  }]);\n  return $dbe33c8d3a7f131c$var$Offset;\n}();\nvar $dbe33c8d3a7f131c$var$gvar = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  axisCount: $6uUbQ$uint16,\n  globalCoordCount: $6uUbQ$uint16,\n  globalCoords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array(new $6uUbQ$Array($dbe33c8d3a7f131c$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n  glyphCount: $6uUbQ$uint16,\n  flags: $6uUbQ$uint16,\n  offsetToData: $6uUbQ$uint32,\n  offsets: new $6uUbQ$Array(new $6uUbQ$Pointer($dbe33c8d3a7f131c$var$Offset, \"void\", {\n    relativeTo: function relativeTo(ctx) {\n      return ctx.offsetToData;\n    },\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar $dbe33c8d3a7f131c$export$2e2bcd8739ae039 = $dbe33c8d3a7f131c$var$gvar;\nvar $05b01887df96c4ee$var$ClassTable = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  coverage: $6uUbQ$uint16,\n  subFeatureFlags: $6uUbQ$uint32,\n  stateTable: new (0, $6cb7dd5f47d82580$export$105027425199cc51)()\n});\nvar $05b01887df96c4ee$var$WidthDeltaRecord = new $6uUbQ$Struct({\n  justClass: $6uUbQ$uint32,\n  beforeGrowLimit: $6uUbQ$fixed32,\n  beforeShrinkLimit: $6uUbQ$fixed32,\n  afterGrowLimit: $6uUbQ$fixed32,\n  afterShrinkLimit: $6uUbQ$fixed32,\n  growFlags: $6uUbQ$uint16,\n  shrinkFlags: $6uUbQ$uint16\n});\nvar $05b01887df96c4ee$var$WidthDeltaCluster = new $6uUbQ$Array($05b01887df96c4ee$var$WidthDeltaRecord, $6uUbQ$uint32);\nvar $05b01887df96c4ee$var$ActionData = new $6uUbQ$VersionedStruct(\"actionType\", {\n  0: {\n    lowerLimit: $6uUbQ$fixed32,\n    upperLimit: $6uUbQ$fixed32,\n    order: $6uUbQ$uint16,\n    glyphs: new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16)\n  },\n  1: {\n    addGlyph: $6uUbQ$uint16\n  },\n  2: {\n    substThreshold: $6uUbQ$fixed32,\n    addGlyph: $6uUbQ$uint16,\n    substGlyph: $6uUbQ$uint16\n  },\n  3: {},\n  4: {\n    variationAxis: $6uUbQ$uint32,\n    minimumLimit: $6uUbQ$fixed32,\n    noStretchValue: $6uUbQ$fixed32,\n    maximumLimit: $6uUbQ$fixed32\n  },\n  5: {\n    flags: $6uUbQ$uint16,\n    glyph: $6uUbQ$uint16\n  }\n});\nvar $05b01887df96c4ee$var$Action = new $6uUbQ$Struct({\n  actionClass: $6uUbQ$uint16,\n  actionType: $6uUbQ$uint16,\n  actionLength: $6uUbQ$uint32,\n  actionData: $05b01887df96c4ee$var$ActionData,\n  padding: new $6uUbQ$Reserved($6uUbQ$uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar $05b01887df96c4ee$var$PostcompensationAction = new $6uUbQ$Array($05b01887df96c4ee$var$Action, $6uUbQ$uint32);\nvar $05b01887df96c4ee$var$PostCompensationTable = new $6uUbQ$Struct({\n  lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$PostcompensationAction))\n});\nvar $05b01887df96c4ee$var$JustificationTable = new $6uUbQ$Struct({\n  classTable: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$ClassTable, {\n    type: \"parent\"\n  }),\n  wdcOffset: $6uUbQ$uint16,\n  postCompensationTable: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$PostCompensationTable, {\n    type: \"parent\"\n  }),\n  widthDeltaClusters: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$WidthDeltaCluster, {\n    type: \"parent\",\n    relativeTo: function relativeTo(ctx) {\n      return ctx.wdcOffset;\n    }\n  }))\n});\nvar $05b01887df96c4ee$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  format: $6uUbQ$uint16,\n  horizontal: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$JustificationTable),\n  vertical: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$JustificationTable)\n});\nvar $03ee6ebd54db1053$var$LigatureData = {\n  action: $6uUbQ$uint16\n};\nvar $03ee6ebd54db1053$var$ContextualData = {\n  markIndex: $6uUbQ$uint16,\n  currentIndex: $6uUbQ$uint16\n};\nvar $03ee6ebd54db1053$var$InsertionData = {\n  currentInsertIndex: $6uUbQ$uint16,\n  markedInsertIndex: $6uUbQ$uint16\n};\nvar $03ee6ebd54db1053$var$SubstitutionTable = new $6uUbQ$Struct({\n  items: new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)(new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)()))\n});\nvar $03ee6ebd54db1053$var$SubtableData = new $6uUbQ$VersionedStruct(\"type\", {\n  0: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)()\n  },\n  1: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$ContextualData),\n    substitutionTable: new $6uUbQ$Pointer($6uUbQ$uint32, $03ee6ebd54db1053$var$SubstitutionTable)\n  },\n  2: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$LigatureData),\n    ligatureActions: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint32)),\n    components: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16)),\n    ligatureList: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16))\n  },\n  4: {\n    lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)()\n  },\n  5: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$InsertionData),\n    insertionActions: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16))\n  }\n});\nvar $03ee6ebd54db1053$var$Subtable = new $6uUbQ$Struct({\n  length: $6uUbQ$uint32,\n  coverage: $6uUbQ$uint24,\n  type: $6uUbQ$uint8,\n  subFeatureFlags: $6uUbQ$uint32,\n  table: $03ee6ebd54db1053$var$SubtableData,\n  padding: new $6uUbQ$Reserved($6uUbQ$uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar $03ee6ebd54db1053$var$FeatureEntry = new $6uUbQ$Struct({\n  featureType: $6uUbQ$uint16,\n  featureSetting: $6uUbQ$uint16,\n  enableFlags: $6uUbQ$uint32,\n  disableFlags: $6uUbQ$uint32\n});\nvar $03ee6ebd54db1053$var$MorxChain = new $6uUbQ$Struct({\n  defaultFlags: $6uUbQ$uint32,\n  chainLength: $6uUbQ$uint32,\n  nFeatureEntries: $6uUbQ$uint32,\n  nSubtables: $6uUbQ$uint32,\n  features: new $6uUbQ$Array($03ee6ebd54db1053$var$FeatureEntry, \"nFeatureEntries\"),\n  subtables: new $6uUbQ$Array($03ee6ebd54db1053$var$Subtable, \"nSubtables\")\n});\nvar $03ee6ebd54db1053$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  unused: new $6uUbQ$Reserved($6uUbQ$uint16),\n  nChains: $6uUbQ$uint32,\n  chains: new $6uUbQ$Array($03ee6ebd54db1053$var$MorxChain, \"nChains\")\n});\nvar $b7492a80b0d1a056$var$OpticalBounds = new $6uUbQ$Struct({\n  left: $6uUbQ$int16,\n  top: $6uUbQ$int16,\n  right: $6uUbQ$int16,\n  bottom: $6uUbQ$int16\n});\nvar $b7492a80b0d1a056$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  format: $6uUbQ$uint16,\n  lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($b7492a80b0d1a056$var$OpticalBounds)\n});\nvar $c3395722bea751e2$var$tables = {};\nvar $c3395722bea751e2$export$2e2bcd8739ae039 = $c3395722bea751e2$var$tables;\n$c3395722bea751e2$var$tables.cmap = (0, $26a62205ad06574e$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.head = (0, $f2612a29f92ac062$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hhea = (0, $2c179dd593583073$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hmtx = (0, $bdc9060542264b85$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.maxp = (0, $dbf51cb3d3fe409d$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.name = (0, $2bcf221753ec8e32$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"OS/2\"] = (0, $84b272aa31b70606$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.post = (0, $32d9e2eb9565d93c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.fpgm = (0, $5c0f37ca5ffb1850$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.loca = (0, $2b2b260902b1c57e$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.prep = (0, $7afb878c7bea4f66$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"cvt \"] = (0, $5202bd9d9ad8eaac$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.glyf = (0, $6c92b6371bce8bd9$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"CFF \"] = (0, $822ac0d589e4e237$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"CFF2\"] = (0, $822ac0d589e4e237$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.VORG = (0, $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.EBLC = (0, $9911c4c7201c13de$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.CBLC = $c3395722bea751e2$var$tables.EBLC;\n$c3395722bea751e2$var$tables.sbix = (0, $abb847051efd51b1$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.COLR = (0, $eb629188f3dfefdd$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.CPAL = (0, $08734b8e7dc64587$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.BASE = (0, $497cef411d884e34$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GDEF = (0, $cf5f33c63ef209e6$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GPOS = (0, $47e0e8ef515d9903$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GSUB = (0, $d3f442064af66e06$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.JSTF = (0, $71cfb3c4767fbd0c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.HVAR = (0, $d059a6bd2d3b5b63$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.DSIG = (0, $dceeca3e1977ce30$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.gasp = (0, $8acd740a9435aad0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hdmx = (0, $b5f380243c34d6a0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.kern = (0, $ca2df1256966e313$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.LTSH = (0, $7a9f92b0c46ebe33$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.PCLT = (0, $2b2ccc419d152631$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.VDMX = (0, $ca5b40b9bcda9c9b$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.vhea = (0, $69530a3c40755af0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.vmtx = (0, $344073dd270f0e62$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.avar = (0, $3793b781918cfced$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.bsln = (0, $6a3746e8c708f5a3$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.feat = (0, $d0c76fac617b308a$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.fvar = (0, $e83fd065f00fcd01$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.gvar = (0, $dbe33c8d3a7f131c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.just = (0, $05b01887df96c4ee$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.morx = (0, $03ee6ebd54db1053$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.opbd = (0, $b7492a80b0d1a056$export$2e2bcd8739ae039);\nvar $816c07a04b6dba87$var$TableEntry = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  checkSum: $6uUbQ$uint32,\n  offset: new $6uUbQ$Pointer($6uUbQ$uint32, \"void\", {\n    type: \"global\"\n  }),\n  length: $6uUbQ$uint32\n});\nvar $816c07a04b6dba87$var$Directory = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  numTables: $6uUbQ$uint16,\n  searchRange: $6uUbQ$uint16,\n  entrySelector: $6uUbQ$uint16,\n  rangeShift: $6uUbQ$uint16,\n  tables: new $6uUbQ$Array($816c07a04b6dba87$var$TableEntry, \"numTables\")\n});\n$816c07a04b6dba87$var$Directory.process = function () {\n  var tables = {};\n  var _iterator9 = _createForOfIteratorHelper(this.tables),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var table = _step9.value;\n      tables[table.tag] = table;\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  this.tables = tables;\n};\n$816c07a04b6dba87$var$Directory.preEncode = function () {\n  if (!Array.isArray(this.tables)) {\n    var tables = [];\n    for (var tag in this.tables) {\n      var table = this.tables[tag];\n      if (table) tables.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new $6uUbQ$VoidPointer((0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag], table),\n        length: (0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag].size(table)\n      });\n    }\n    this.tables = tables;\n  }\n  this.tag = \"true\";\n  this.numTables = this.tables.length;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nvar $816c07a04b6dba87$export$2e2bcd8739ae039 = $816c07a04b6dba87$var$Directory;\nfunction $12727730ddfc8bfe$export$2e0ae67339d5f1ac(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n    if (res < 0) max = mid - 1;else if (res > 0) min = mid + 1;else return mid;\n  }\n  return -1;\n}\nfunction $12727730ddfc8bfe$export$d02631cccf789723(index, end) {\n  var range1 = [];\n  while (index < end) range1.push(index++);\n  return range1;\n}\nvar $12727730ddfc8bfe$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\");\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nvar $12727730ddfc8bfe$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar $12727730ddfc8bfe$var$LOOKUP = new Uint8Array(256);\nfor (var i = 0; i < $12727730ddfc8bfe$var$CHARS.length; i++) $12727730ddfc8bfe$var$LOOKUP[$12727730ddfc8bfe$var$CHARS.charCodeAt(i)] = i;\nfunction $12727730ddfc8bfe$export$94fdf11bafc8de6b(base64) {\n  var bufferLength = base64.length * 0.75;\n  if (base64[base64.length - 1] === \"=\") {\n    bufferLength--;\n    if (base64[base64.length - 2] === \"=\") bufferLength--;\n  }\n  var bytes = new Uint8Array(bufferLength);\n  var p = 0;\n  for (var i1 = 0, len = base64.length; i1 < len; i1 += 4) {\n    var encoded1 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1)];\n    var encoded2 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n    var encoded3 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n    var encoded4 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return bytes;\n}\nvar $f08dd41ef10b694c$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $f08dd41ef10b694c$export$2e2bcd8739ae039(cmapTable) {\n    _classCallCheck(this, $f08dd41ef10b694c$export$2e2bcd8739ae039);\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n    // 32-bit subtables\n    [3, 10], [0, 6], [0, 4],\n    // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]);\n    // If not unicode cmap was found, take the first table with a supported encoding.\n    if (!this.cmap) {\n      var _iterator10 = _createForOfIteratorHelper(cmapTable.tables),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var cmap = _step10.value;\n          var encoding = (0, $e449ad78d50845fe$export$badc544e0651b6b1)(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n          var mapping = (0, $e449ad78d50845fe$export$1dceb3c14ed68bee)(encoding);\n          if (mapping) {\n            this.cmap = cmap.table;\n            this.encoding = mapping;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n    if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n  }\n  _createClass($f08dd41ef10b694c$export$2e2bcd8739ae039, [{\n    key: \"findSubtable\",\n    value: function findSubtable(cmapTable, pairs) {\n      var _iterator11 = _createForOfIteratorHelper(pairs),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var _step11$value = _slicedToArray(_step11.value, 2),\n            platformID = _step11$value[0],\n            encodingID = _step11$value[1];\n          var _iterator12 = _createForOfIteratorHelper(cmapTable.tables),\n            _step12;\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var cmap = _step12.value;\n              if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"lookup\",\n    value: function lookup(codepoint, variationSelector) {\n      // If there is no Unicode cmap in this font, we need to re-encode\n      // the codepoint in the encoding that the cmap supports.\n      if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;else if (variationSelector) {\n        var gid = this.getVariationSelector(codepoint, variationSelector);\n        if (gid) return gid;\n      }\n      var cmap = this.cmap;\n      switch (cmap.version) {\n        case 0:\n          return cmap.codeMap.get(codepoint) || 0;\n        case 4:\n          {\n            var min = 0;\n            var max = cmap.segCount - 1;\n            while (min <= max) {\n              var mid = min + max >> 1;\n              if (codepoint < cmap.startCode.get(mid)) max = mid - 1;else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;else {\n                var rangeOffset = cmap.idRangeOffset.get(mid);\n                var _gid = void 0;\n                if (rangeOffset === 0) _gid = codepoint + cmap.idDelta.get(mid);else {\n                  var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                  _gid = cmap.glyphIndexArray.get(index) || 0;\n                  if (_gid !== 0) _gid += cmap.idDelta.get(mid);\n                }\n                return _gid & 0xffff;\n              }\n            }\n            return 0;\n          }\n        case 8:\n          throw new Error(\"TODO: cmap format 8\");\n        case 6:\n        case 10:\n          return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n        case 12:\n        case 13:\n          {\n            var _min = 0;\n            var _max = cmap.nGroups - 1;\n            while (_min <= _max) {\n              var _mid = _min + _max >> 1;\n              var group = cmap.groups.get(_mid);\n              if (codepoint < group.startCharCode) _max = _mid - 1;else if (codepoint > group.endCharCode) _min = _mid + 1;else {\n                if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);else return group.glyphID;\n              }\n            }\n            return 0;\n          }\n        case 14:\n          throw new Error(\"TODO: cmap format 14\");\n        default:\n          throw new Error(\"Unknown cmap format \".concat(cmap.version));\n      }\n    }\n  }, {\n    key: \"getVariationSelector\",\n    value: function getVariationSelector(codepoint, variationSelector) {\n      if (!this.uvs) return 0;\n      var selectors = this.uvs.varSelectors.toArray();\n      var i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(selectors, function (x) {\n        return variationSelector - x.varSelector;\n      });\n      var sel = selectors[i];\n      if (i !== -1 && sel.defaultUVS) i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0;\n      });\n      if (i !== -1 && sel.nonDefaultUVS) {\n        i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS, function (x) {\n          return codepoint - x.unicodeValue;\n        });\n        if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n      }\n      return 0;\n    }\n  }, {\n    key: \"getCharacterSet\",\n    value: function getCharacterSet() {\n      var cmap = this.cmap;\n      switch (cmap.version) {\n        case 0:\n          return (0, $12727730ddfc8bfe$export$d02631cccf789723)(0, cmap.codeMap.length);\n        case 4:\n          {\n            var res = [];\n            var endCodes = cmap.endCode.toArray();\n            for (var _i3 = 0; _i3 < endCodes.length; _i3++) {\n              var tail = endCodes[_i3] + 1;\n              var start = cmap.startCode.get(_i3);\n              res.push.apply(res, _toConsumableArray((0, $12727730ddfc8bfe$export$d02631cccf789723)(start, tail)));\n            }\n            return res;\n          }\n        case 8:\n          throw new Error(\"TODO: cmap format 8\");\n        case 6:\n        case 10:\n          return (0, $12727730ddfc8bfe$export$d02631cccf789723)(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n        case 12:\n        case 13:\n          {\n            var _res2 = [];\n            var _iterator13 = _createForOfIteratorHelper(cmap.groups.toArray()),\n              _step13;\n            try {\n              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                var group = _step13.value;\n                _res2.push.apply(_res2, _toConsumableArray((0, $12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1)));\n              }\n            } catch (err) {\n              _iterator13.e(err);\n            } finally {\n              _iterator13.f();\n            }\n            return _res2;\n          }\n        case 14:\n          throw new Error(\"TODO: cmap format 14\");\n        default:\n          throw new Error(\"Unknown cmap format \".concat(cmap.version));\n      }\n    }\n  }, {\n    key: \"codePointsForGlyph\",\n    value: function codePointsForGlyph(gid) {\n      var cmap = this.cmap;\n      switch (cmap.version) {\n        case 0:\n          {\n            var res = [];\n            for (var _i4 = 0; _i4 < 256; _i4++) if (cmap.codeMap.get(_i4) === gid) res.push(_i4);\n            return res;\n          }\n        case 4:\n          {\n            var _res3 = [];\n            for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n              var end = cmap.endCode.get(_i5);\n              var start = cmap.startCode.get(_i5);\n              var rangeOffset = cmap.idRangeOffset.get(_i5);\n              var delta = cmap.idDelta.get(_i5);\n              for (var c = start; c <= end; c++) {\n                var g = 0;\n                if (rangeOffset === 0) g = c + delta;else {\n                  var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                  g = cmap.glyphIndexArray.get(index) || 0;\n                  if (g !== 0) g += delta;\n                }\n                if (g === gid) _res3.push(c);\n              }\n            }\n            return _res3;\n          }\n        case 12:\n          {\n            var _res4 = [];\n            var _iterator14 = _createForOfIteratorHelper(cmap.groups.toArray()),\n              _step14;\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var group = _step14.value;\n                if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) _res4.push(group.startCharCode + (gid - group.glyphID));\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n            return _res4;\n          }\n        case 13:\n          {\n            var _res5 = [];\n            var _iterator15 = _createForOfIteratorHelper(cmap.groups.toArray()),\n              _step15;\n            try {\n              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                var _group = _step15.value;\n                if (gid === _group.glyphID) _res5.push.apply(_res5, _toConsumableArray((0, $12727730ddfc8bfe$export$d02631cccf789723)(_group.startCharCode, _group.endCharCode + 1)));\n              }\n            } catch (err) {\n              _iterator15.e(err);\n            } finally {\n              _iterator15.f();\n            }\n            return _res5;\n          }\n        default:\n          throw new Error(\"Unknown cmap format \".concat(cmap.version));\n      }\n    }\n  }]);\n  return $f08dd41ef10b694c$export$2e2bcd8739ae039;\n}();\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f08dd41ef10b694c$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f08dd41ef10b694c$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\nvar $0bba3a9db57637f3$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $0bba3a9db57637f3$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $0bba3a9db57637f3$export$2e2bcd8739ae039);\n    this.kern = font.kern;\n  }\n  _createClass($0bba3a9db57637f3$export$2e2bcd8739ae039, [{\n    key: \"process\",\n    value: function process(glyphs, positions) {\n      for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n        var left = glyphs[glyphIndex].id;\n        var right = glyphs[glyphIndex + 1].id;\n        positions[glyphIndex].xAdvance += this.getKerning(left, right);\n      }\n    }\n  }, {\n    key: \"getKerning\",\n    value: function getKerning(left, right) {\n      var res = 0;\n      var _iterator16 = _createForOfIteratorHelper(this.kern.tables),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var table = _step16.value;\n          if (table.coverage.crossStream) continue;\n          switch (table.version) {\n            case 0:\n              if (!table.coverage.horizontal) continue;\n              break;\n            case 1:\n              if (table.coverage.vertical || table.coverage.variation) continue;\n              break;\n            default:\n              throw new Error(\"Unsupported kerning table version \".concat(table.version));\n          }\n          var val = 0;\n          var s = table.subtable;\n          switch (table.format) {\n            case 0:\n              var pairIdx = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(s.pairs, function (pair) {\n                return left - pair.left || right - pair.right;\n              });\n              if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n              break;\n            case 2:\n              var leftOffset = 0,\n                rightOffset = 0;\n              if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];else leftOffset = s.array.off;\n              if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n              var index = (leftOffset + rightOffset - s.array.off) / 2;\n              val = s.array.values.get(index);\n              break;\n            case 3:\n              if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n              val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n              break;\n            default:\n              throw new Error(\"Unsupported kerning sub-table format \".concat(table.format));\n          }\n          // Microsoft supports the override flag, which resets the result\n          // Otherwise, the sum of the results from all subtables is returned\n          if (table.coverage.override) res = val;else res += val;\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return res;\n    }\n  }]);\n  return $0bba3a9db57637f3$export$2e2bcd8739ae039;\n}();\nvar $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039);\n    this.font = font;\n  }\n  _createClass($0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039, [{\n    key: \"positionGlyphs\",\n    value: function positionGlyphs(glyphs, positions) {\n      // find each base + mark cluster, and position the marks relative to the base\n      var clusterStart = 0;\n      var clusterEnd = 0;\n      for (var index = 0; index < glyphs.length; index++) {\n        var glyph = glyphs[index];\n        if (glyph.isMark) clusterEnd = index;else {\n          if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n          clusterStart = clusterEnd = index;\n        }\n      }\n      if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n      return positions;\n    }\n  }, {\n    key: \"positionCluster\",\n    value: function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n      var base = glyphs[clusterStart];\n      var baseBox = base.cbox.copy();\n      // adjust bounding box for ligature glyphs\n      if (base.codePoints.length > 1)\n        // LTR. TODO: RTL support.\n        baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n      var xOffset = -positions[clusterStart].xAdvance;\n      var yOffset = 0;\n      var yGap = this.font.unitsPerEm / 16;\n      // position each of the mark glyphs relative to the base glyph\n      for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n        var mark = glyphs[index];\n        var markBox = mark.cbox;\n        var position = positions[index];\n        var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n        if (combiningClass !== \"Not_Reordered\") {\n          position.xOffset = position.yOffset = 0;\n          // x positioning\n          switch (combiningClass) {\n            case \"Double_Above\":\n            case \"Double_Below\":\n              // LTR. TODO: RTL support.\n              position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n              break;\n            case \"Attached_Below_Left\":\n            case \"Below_Left\":\n            case \"Above_Left\":\n              // left align\n              position.xOffset += baseBox.minX - markBox.minX;\n              break;\n            case \"Attached_Above_Right\":\n            case \"Below_Right\":\n            case \"Above_Right\":\n              // right align\n              position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n              break;\n            default:\n              // center align\n              position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n          }\n          // y positioning\n          switch (combiningClass) {\n            case \"Double_Below\":\n            case \"Below_Left\":\n            case \"Below\":\n            case \"Below_Right\":\n            case \"Attached_Below_Left\":\n            case \"Attached_Below\":\n              // add a small gap between the glyphs if they are not attached\n              if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n              position.yOffset = -baseBox.minY - markBox.maxY;\n              baseBox.minY += markBox.height;\n              break;\n            case \"Double_Above\":\n            case \"Above_Left\":\n            case \"Above\":\n            case \"Above_Right\":\n            case \"Attached_Above\":\n            case \"Attached_Above_Right\":\n              // add a small gap between the glyphs if they are not attached\n              if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n              position.yOffset = baseBox.maxY - markBox.minY;\n              baseBox.maxY += markBox.height;\n              break;\n          }\n          position.xAdvance = position.yAdvance = 0;\n          position.xOffset += xOffset;\n          position.yOffset += yOffset;\n        } else {\n          xOffset -= position.xAdvance;\n          yOffset -= position.yAdvance;\n        }\n      }\n      return;\n    }\n  }, {\n    key: \"getCombiningClass\",\n    value: function getCombiningClass(codePoint) {\n      var combiningClass = (0, $6uUbQ$getCombiningClass)(codePoint);\n      // Thai / Lao need some per-character work\n      if ((codePoint & -256) === 0x0e00) {\n        if (combiningClass === \"Not_Reordered\") switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return \"Above_Right\";\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return \"Above\";\n          case 0x0ebc:\n            return \"Below\";\n        } else if (codePoint === 0x0e3a) return \"Below_Right\";\n      }\n      switch (combiningClass) {\n        // Hebrew\n        case \"CCC10\":\n        case \"CCC11\":\n        case \"CCC12\":\n        case \"CCC13\":\n        case \"CCC14\":\n        case \"CCC15\":\n        case \"CCC16\":\n        case \"CCC17\":\n        case \"CCC18\":\n        case \"CCC20\":\n        case \"CCC22\":\n          return \"Below\";\n        case \"CCC23\":\n          return \"Attached_Above\";\n        case \"CCC24\":\n          return \"Above_Right\";\n        case \"CCC25\":\n        case \"CCC19\":\n          return \"Above_Left\";\n        case \"CCC26\":\n          return \"Above\";\n        case \"CCC21\":\n          break;\n        // Arabic and Syriac\n        case \"CCC27\":\n        case \"CCC28\":\n        case \"CCC30\":\n        case \"CCC31\":\n        case \"CCC33\":\n        case \"CCC34\":\n        case \"CCC35\":\n        case \"CCC36\":\n          return \"Above\";\n        case \"CCC29\":\n        case \"CCC32\":\n          return \"Below\";\n        // Thai\n        case \"CCC103\":\n          return \"Below_Right\";\n        case \"CCC107\":\n          return \"Above_Right\";\n        // Lao\n        case \"CCC118\":\n          return \"Below\";\n        case \"CCC122\":\n          return \"Above\";\n        // Tibetan\n        case \"CCC129\":\n        case \"CCC132\":\n          return \"Below\";\n        case \"CCC130\":\n          return \"Above\";\n      }\n      return combiningClass;\n    }\n  }]);\n  return $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039;\n}();\nvar $f34600ab9d7f70d8$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $f34600ab9d7f70d8$export$2e2bcd8739ae039() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n    _classCallCheck(this, $f34600ab9d7f70d8$export$2e2bcd8739ae039);\n    /**\n    * The minimum X position in the bounding box\n    * @type {number}\n    */\n    this.minX = minX;\n    /**\n    * The minimum Y position in the bounding box\n    * @type {number}\n    */\n    this.minY = minY;\n    /**\n    * The maxmimum X position in the bounding box\n    * @type {number}\n    */\n    this.maxX = maxX;\n    /**\n    * The maxmimum Y position in the bounding box\n    * @type {number}\n    */\n    this.maxY = maxY;\n  }\n  _createClass($f34600ab9d7f70d8$export$2e2bcd8739ae039, [{\n    key: \"width\",\n    get:\n    /**\n    * The width of the bounding box\n    * @type {number}\n    */\n    function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n    * The height of the bounding box\n    * @type {number}\n    */\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }, {\n    key: \"addPoint\",\n    value: function addPoint(x, y) {\n      if (Math.abs(x) !== Infinity) {\n        if (x < this.minX) this.minX = x;\n        if (x > this.maxX) this.maxX = x;\n      }\n      if (Math.abs(y) !== Infinity) {\n        if (y < this.minY) this.minY = y;\n        if (y > this.maxY) this.maxY = y;\n      }\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new $f34600ab9d7f70d8$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n    }\n  }]);\n  return $f34600ab9d7f70d8$export$2e2bcd8739ae039;\n}(); // This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nvar $130d1a642ebcd2b7$var$UNICODE_SCRIPTS = {\n  Caucasian_Albanian: \"aghb\",\n  Arabic: \"arab\",\n  Imperial_Aramaic: \"armi\",\n  Armenian: \"armn\",\n  Avestan: \"avst\",\n  Balinese: \"bali\",\n  Bamum: \"bamu\",\n  Bassa_Vah: \"bass\",\n  Batak: \"batk\",\n  Bengali: [\"bng2\", \"beng\"],\n  Bopomofo: \"bopo\",\n  Brahmi: \"brah\",\n  Braille: \"brai\",\n  Buginese: \"bugi\",\n  Buhid: \"buhd\",\n  Chakma: \"cakm\",\n  Canadian_Aboriginal: \"cans\",\n  Carian: \"cari\",\n  Cham: \"cham\",\n  Cherokee: \"cher\",\n  Coptic: \"copt\",\n  Cypriot: \"cprt\",\n  Cyrillic: \"cyrl\",\n  Devanagari: [\"dev2\", \"deva\"],\n  Deseret: \"dsrt\",\n  Duployan: \"dupl\",\n  Egyptian_Hieroglyphs: \"egyp\",\n  Elbasan: \"elba\",\n  Ethiopic: \"ethi\",\n  Georgian: \"geor\",\n  Glagolitic: \"glag\",\n  Gothic: \"goth\",\n  Grantha: \"gran\",\n  Greek: \"grek\",\n  Gujarati: [\"gjr2\", \"gujr\"],\n  Gurmukhi: [\"gur2\", \"guru\"],\n  Hangul: \"hang\",\n  Han: \"hani\",\n  Hanunoo: \"hano\",\n  Hebrew: \"hebr\",\n  Hiragana: \"hira\",\n  Pahawh_Hmong: \"hmng\",\n  Katakana_Or_Hiragana: \"hrkt\",\n  Old_Italic: \"ital\",\n  Javanese: \"java\",\n  Kayah_Li: \"kali\",\n  Katakana: \"kana\",\n  Kharoshthi: \"khar\",\n  Khmer: \"khmr\",\n  Khojki: \"khoj\",\n  Kannada: [\"knd2\", \"knda\"],\n  Kaithi: \"kthi\",\n  Tai_Tham: \"lana\",\n  Lao: \"lao \",\n  Latin: \"latn\",\n  Lepcha: \"lepc\",\n  Limbu: \"limb\",\n  Linear_A: \"lina\",\n  Linear_B: \"linb\",\n  Lisu: \"lisu\",\n  Lycian: \"lyci\",\n  Lydian: \"lydi\",\n  Mahajani: \"mahj\",\n  Mandaic: \"mand\",\n  Manichaean: \"mani\",\n  Mende_Kikakui: \"mend\",\n  Meroitic_Cursive: \"merc\",\n  Meroitic_Hieroglyphs: \"mero\",\n  Malayalam: [\"mlm2\", \"mlym\"],\n  Modi: \"modi\",\n  Mongolian: \"mong\",\n  Mro: \"mroo\",\n  Meetei_Mayek: \"mtei\",\n  Myanmar: [\"mym2\", \"mymr\"],\n  Old_North_Arabian: \"narb\",\n  Nabataean: \"nbat\",\n  Nko: \"nko \",\n  Ogham: \"ogam\",\n  Ol_Chiki: \"olck\",\n  Old_Turkic: \"orkh\",\n  Oriya: [\"ory2\", \"orya\"],\n  Osmanya: \"osma\",\n  Palmyrene: \"palm\",\n  Pau_Cin_Hau: \"pauc\",\n  Old_Permic: \"perm\",\n  Phags_Pa: \"phag\",\n  Inscriptional_Pahlavi: \"phli\",\n  Psalter_Pahlavi: \"phlp\",\n  Phoenician: \"phnx\",\n  Miao: \"plrd\",\n  Inscriptional_Parthian: \"prti\",\n  Rejang: \"rjng\",\n  Runic: \"runr\",\n  Samaritan: \"samr\",\n  Old_South_Arabian: \"sarb\",\n  Saurashtra: \"saur\",\n  Shavian: \"shaw\",\n  Sharada: \"shrd\",\n  Siddham: \"sidd\",\n  Khudawadi: \"sind\",\n  Sinhala: \"sinh\",\n  Sora_Sompeng: \"sora\",\n  Sundanese: \"sund\",\n  Syloti_Nagri: \"sylo\",\n  Syriac: \"syrc\",\n  Tagbanwa: \"tagb\",\n  Takri: \"takr\",\n  Tai_Le: \"tale\",\n  New_Tai_Lue: \"talu\",\n  Tamil: [\"tml2\", \"taml\"],\n  Tai_Viet: \"tavt\",\n  Telugu: [\"tel2\", \"telu\"],\n  Tifinagh: \"tfng\",\n  Tagalog: \"tglg\",\n  Thaana: \"thaa\",\n  Thai: \"thai\",\n  Tibetan: \"tibt\",\n  Tirhuta: \"tirh\",\n  Ugaritic: \"ugar\",\n  Vai: \"vai \",\n  Warang_Citi: \"wara\",\n  Old_Persian: \"xpeo\",\n  Cuneiform: \"xsux\",\n  Yi: \"yi  \",\n  Inherited: \"zinh\",\n  Common: \"zyyy\",\n  Unknown: \"zzzz\"\n};\nvar $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS = {};\nfor (var script in $130d1a642ebcd2b7$var$UNICODE_SCRIPTS) {\n  var tag = $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    var _iterator17 = _createForOfIteratorHelper(tag),\n      _step17;\n    try {\n      for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n        var t = _step17.value;\n        $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[t] = script;\n      }\n    } catch (err) {\n      _iterator17.e(err);\n    } finally {\n      _iterator17.f();\n    }\n  } else $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag] = script;\n}\nfunction $130d1a642ebcd2b7$export$b32f0b5f69d65e51(script1) {\n  return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script1];\n}\nfunction $130d1a642ebcd2b7$export$ce50e82f12a827a4(tag) {\n  return $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag];\n}\nfunction $130d1a642ebcd2b7$export$e5cb25e204fb8450(string) {\n  var len = string.length;\n  var idx = 0;\n  while (idx < len) {\n    var code = string.charCodeAt(idx++);\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx);\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n    var script2 = (0, $6uUbQ$getScript)(code);\n    if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script2];\n  }\n  return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;\n}\nfunction $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints) {\n  for (var _i6 = 0; _i6 < codePoints.length; _i6++) {\n    var codePoint = codePoints[_i6];\n    var script3 = (0, $6uUbQ$getScript)(codePoint);\n    if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script3];\n  }\n  return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;\n}\n// The scripts in this map are written from right to left\nvar $130d1a642ebcd2b7$var$RTL = {\n  arab: true,\n  hebr: true,\n  syrc: true,\n  thaa: true,\n  cprt: true,\n  khar: true,\n  phnx: true,\n  \"nko \": true,\n  lydi: true,\n  avst: true,\n  armi: true,\n  phli: true,\n  prti: true,\n  sarb: true,\n  orkh: true,\n  samr: true,\n  mand: true,\n  merc: true,\n  mero: true,\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  mend: true,\n  nbat: true,\n  narb: true,\n  palm: true,\n  phlp: true // Psalter Pahlavi\n};\n\nfunction $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script4) {\n  if ($130d1a642ebcd2b7$var$RTL[script4]) return \"rtl\";\n  return \"ltr\";\n}\nvar $be07b3e97a42687a$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $be07b3e97a42687a$export$2e2bcd8739ae039(glyphs, features, script, language, direction) {\n    _classCallCheck(this, $be07b3e97a42687a$export$2e2bcd8739ae039);\n    /**\n    * An array of Glyph objects in the run\n    * @type {Glyph[]}\n    */\n    this.glyphs = glyphs;\n    /**\n    * An array of GlyphPosition objects for each glyph in the run\n    * @type {GlyphPosition[]}\n    */\n    this.positions = null;\n    /**\n    * The script that was requested for shaping. This was either passed in or detected automatically.\n    * @type {string}\n    */\n    this.script = script;\n    /**\n    * The language requested for shaping, as passed in. If `null`, the default language for the\n    * script was used.\n    * @type {string}\n    */\n    this.language = language || null;\n    /**\n    * The direction requested for shaping, as passed in (either ltr or rtl).\n    * If `null`, the default direction of the script is used.\n    * @type {string}\n    */\n    this.direction = direction || $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);\n    /**\n    * The features requested during shaping. This is a combination of user\n    * specified features and features chosen by the shaper.\n    * @type {object}\n    */\n    this.features = {};\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      var _iterator18 = _createForOfIteratorHelper(features),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var _tag = _step18.value;\n          this.features[_tag] = true;\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    } else if (typeof features === \"object\") this.features = features;\n  }\n  _createClass($be07b3e97a42687a$export$2e2bcd8739ae039, [{\n    key: \"advanceWidth\",\n    get:\n    /**\n    * The total advance width of the run.\n    * @type {number}\n    */\n    function get() {\n      var width = 0;\n      var _iterator19 = _createForOfIteratorHelper(this.positions),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var position = _step19.value;\n          width += position.xAdvance;\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      return width;\n    }\n    /**\n    * The total advance height of the run.\n    * @type {number}\n    */\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      var height = 0;\n      var _iterator20 = _createForOfIteratorHelper(this.positions),\n        _step20;\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var position = _step20.value;\n          height += position.yAdvance;\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n      return height;\n    }\n    /**\n    * The bounding box containing all glyphs in the run.\n    * @type {BBox}\n    */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      var bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n      var x = 0;\n      var y = 0;\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n      return bbox;\n    }\n  }]);\n  return $be07b3e97a42687a$export$2e2bcd8739ae039;\n}();\nvar $1ac75d9a55b67f01$export$2e2bcd8739ae039 = /*#__PURE__*/_createClass(function $1ac75d9a55b67f01$export$2e2bcd8739ae039() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  _classCallCheck(this, $1ac75d9a55b67f01$export$2e2bcd8739ae039);\n  /**\n  * The amount to move the virtual pen in the X direction after rendering this glyph.\n  * @type {number}\n  */\n  this.xAdvance = xAdvance;\n  /**\n  * The amount to move the virtual pen in the Y direction after rendering this glyph.\n  * @type {number}\n  */\n  this.yAdvance = yAdvance;\n  /**\n  * The offset from the pen position in the X direction at which to render this glyph.\n  * @type {number}\n  */\n  this.xOffset = xOffset;\n  /**\n  * The offset from the pen position in the Y direction at which to render this glyph.\n  * @type {number}\n  */\n  this.yOffset = yOffset;\n}); // see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar $3b6302b64eccc32c$var$features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\nvar $3b6302b64eccc32c$var$feature = function $3b6302b64eccc32c$var$feature(name, selector) {\n  return [$3b6302b64eccc32c$var$features[name].code, $3b6302b64eccc32c$var$features[name][selector]];\n};\nvar $3b6302b64eccc32c$var$OTMapping = {\n  rlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"requiredLigatures\"),\n  clig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"contextualLigatures\"),\n  dlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"rareLigatures\"),\n  hlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"historicalLigatures\"),\n  liga: $3b6302b64eccc32c$var$feature(\"ligatures\", \"commonLigatures\"),\n  hist: $3b6302b64eccc32c$var$feature(\"ligatures\", \"historicalLigatures\"),\n  smcp: $3b6302b64eccc32c$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n  pcap: $3b6302b64eccc32c$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n  frac: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n  dnom: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n  numr: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n  afrc: $3b6302b64eccc32c$var$feature(\"fractions\", \"verticalFractions\"),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: $3b6302b64eccc32c$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n  ccmp: $3b6302b64eccc32c$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n  cpct: $3b6302b64eccc32c$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n  valt: $3b6302b64eccc32c$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n  swsh: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n  cswh: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n  curs: $3b6302b64eccc32c$var$feature(\"cursiveConnection\", \"cursive\"),\n  c2pc: $3b6302b64eccc32c$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n  c2sc: $3b6302b64eccc32c$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n  init: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n  fin2: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n  medi: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n  med2: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n  fin3: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n  fina: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n  pkna: $3b6302b64eccc32c$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n  half: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"halfWidthText\"),\n  halt: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n  hkna: $3b6302b64eccc32c$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n  vkna: $3b6302b64eccc32c$var$feature(\"alternateKana\", \"alternateVertKana\"),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: $3b6302b64eccc32c$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n  lnum: $3b6302b64eccc32c$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n  onum: $3b6302b64eccc32c$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n  mgrk: $3b6302b64eccc32c$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n  vrt2: $3b6302b64eccc32c$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n  vert: $3b6302b64eccc32c$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n  tnum: $3b6302b64eccc32c$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n  pnum: $3b6302b64eccc32c$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n  sups: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"superiors\"),\n  subs: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"inferiors\"),\n  ordn: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"ordinals\"),\n  pwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"proportionalText\"),\n  hwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"halfWidthText\"),\n  qwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"quarterWidthText\"),\n  twid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"thirdWidthText\"),\n  fwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"proportionalText\"),\n  palt: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"altProportionalText\"),\n  trad: $3b6302b64eccc32c$var$feature(\"characterShape\", \"traditionalCharacters\"),\n  smpl: $3b6302b64eccc32c$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n  jp78: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1978Characters\"),\n  jp83: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1983Characters\"),\n  jp90: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1990Characters\"),\n  jp04: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS2004Characters\"),\n  expt: $3b6302b64eccc32c$var$feature(\"characterShape\", \"expertCharacters\"),\n  hojo: $3b6302b64eccc32c$var$feature(\"characterShape\", \"hojoCharacters\"),\n  nlck: $3b6302b64eccc32c$var$feature(\"characterShape\", \"NLCCharacters\"),\n  tnam: $3b6302b64eccc32c$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n  ruby: $3b6302b64eccc32c$var$feature(\"rubyKana\", \"rubyKana\"),\n  titl: $3b6302b64eccc32c$var$feature(\"styleOptions\", \"titlingCaps\"),\n  zero: $3b6302b64eccc32c$var$feature(\"typographicExtras\", \"slashedZero\"),\n  ss01: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n  ss02: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n  ss03: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n  ss04: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n  ss05: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n  ss06: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n  ss07: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n  ss08: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n  ss09: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n  ss10: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n  ss11: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n  ss12: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n  ss13: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n  ss14: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n  ss15: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n  ss16: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n  ss17: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n  ss18: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n  ss19: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n  ss20: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n};\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\nfor (var _i7 = 1; _i7 <= 99; _i7++) $3b6302b64eccc32c$var$OTMapping[\"cv\".concat(\"00\".concat(_i7).slice(-2))] = [$3b6302b64eccc32c$var$features.characterAlternatives.code, _i7];\n// create inverse mapping\nvar $3b6302b64eccc32c$var$AATMapping = {};\nfor (var ot in $3b6302b64eccc32c$var$OTMapping) {\n  var aat = $3b6302b64eccc32c$var$OTMapping[ot];\n  if ($3b6302b64eccc32c$var$AATMapping[aat[0]] == null) $3b6302b64eccc32c$var$AATMapping[aat[0]] = {};\n  $3b6302b64eccc32c$var$AATMapping[aat[0]][aat[1]] = ot;\n}\nfunction $3b6302b64eccc32c$export$b813f7d2a1677c16(features1) {\n  var res = {};\n  for (var k in features1) {\n    var r = void 0;\n    if (r = $3b6302b64eccc32c$var$OTMapping[k]) {\n      if (res[r[0]] == null) res[r[0]] = {};\n      res[r[0]][r[1]] = features1[k];\n    }\n  }\n  return res;\n}\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction $3b6302b64eccc32c$var$mapFeatureStrings(f) {\n  var _f = _slicedToArray(f, 2),\n    type = _f[0],\n    setting = _f[1];\n  if (isNaN(type)) var typeCode = $3b6302b64eccc32c$var$features[type] && $3b6302b64eccc32c$var$features[type].code;else var typeCode = type;\n  if (isNaN(setting)) var settingCode = $3b6302b64eccc32c$var$features[type] && $3b6302b64eccc32c$var$features[type][setting];else var settingCode = setting;\n  return [typeCode, settingCode];\n}\nfunction $3b6302b64eccc32c$export$bd6df347a4f391c4(features2) {\n  var res = {};\n  if (Array.isArray(features2)) for (var k = 0; k < features2.length; k++) {\n    var r = void 0;\n    var f = $3b6302b64eccc32c$var$mapFeatureStrings(features2[k]);\n    if (r = $3b6302b64eccc32c$var$AATMapping[f[0]] && $3b6302b64eccc32c$var$AATMapping[f[0]][f[1]]) res[r] = true;\n  } else if (typeof features2 === \"object\") for (var type in features2) {\n    var feature1 = features2[type];\n    for (var setting in feature1) {\n      var _r = void 0;\n      var _f2 = $3b6302b64eccc32c$var$mapFeatureStrings([type, setting]);\n      if (feature1[setting] && (_r = $3b6302b64eccc32c$var$AATMapping[_f2[0]] && $3b6302b64eccc32c$var$AATMapping[_f2[0]][_f2[1]])) res[_r] = true;\n    }\n  }\n  return Object.keys(res);\n}\nvar $ff5ce077dae0f144$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $ff5ce077dae0f144$export$2e2bcd8739ae039(table) {\n    _classCallCheck(this, $ff5ce077dae0f144$export$2e2bcd8739ae039);\n    this.table = table;\n  }\n  _createClass($ff5ce077dae0f144$export$2e2bcd8739ae039, [{\n    key: \"lookup\",\n    value: function lookup(glyph) {\n      switch (this.table.version) {\n        case 0:\n          return this.table.values.getItem(glyph);\n        case 2:\n        case 4:\n          {\n            var min = 0;\n            var max = this.table.binarySearchHeader.nUnits - 1;\n            while (min <= max) {\n              var mid = min + max >> 1;\n              var seg = this.table.segments[mid];\n              // special end of search value\n              if (seg.firstGlyph === 0xffff) return null;\n              if (glyph < seg.firstGlyph) max = mid - 1;else if (glyph > seg.lastGlyph) min = mid + 1;else {\n                if (this.table.version === 2) return seg.value;else return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n            return null;\n          }\n        case 6:\n          {\n            var _min2 = 0;\n            var _max2 = this.table.binarySearchHeader.nUnits - 1;\n            while (_min2 <= _max2) {\n              var mid = _min2 + _max2 >> 1;\n              var seg = this.table.segments[mid];\n              // special end of search value\n              if (seg.glyph === 0xffff) return null;\n              if (glyph < seg.glyph) _max2 = mid - 1;else if (glyph > seg.glyph) _min2 = mid + 1;else return seg.value;\n            }\n            return null;\n          }\n        case 8:\n          return this.table.values[glyph - this.table.firstGlyph];\n        default:\n          throw new Error(\"Unknown lookup table format: \".concat(this.table.version));\n      }\n    }\n  }, {\n    key: \"glyphsForValue\",\n    value: function glyphsForValue(classValue) {\n      var res = [];\n      switch (this.table.version) {\n        case 2:\n        case 4:\n          var _iterator21 = _createForOfIteratorHelper(this.table.segments),\n            _step21;\n          try {\n            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n              var segment = _step21.value;\n              if (this.table.version === 2 && segment.value === classValue) res.push.apply(res, _toConsumableArray((0, $12727730ddfc8bfe$export$d02631cccf789723)(segment.firstGlyph, segment.lastGlyph + 1)));else {\n                for (var index = 0; index < segment.values.length; index++) if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n              }\n            }\n          } catch (err) {\n            _iterator21.e(err);\n          } finally {\n            _iterator21.f();\n          }\n          break;\n        case 6:\n          var _iterator22 = _createForOfIteratorHelper(this.table.segments),\n            _step22;\n          try {\n            for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n              var segment1 = _step22.value;\n              if (segment1.value === classValue) res.push(segment1.glyph);\n            }\n          } catch (err) {\n            _iterator22.e(err);\n          } finally {\n            _iterator22.f();\n          }\n          break;\n        case 8:\n          for (var _i8 = 0; _i8 < this.table.values.length; _i8++) if (this.table.values[_i8] === classValue) res.push(this.table.firstGlyph + _i8);\n          break;\n        default:\n          throw new Error(\"Unknown lookup table format: \".concat(this.table.version));\n      }\n      return res;\n    }\n  }]);\n  return $ff5ce077dae0f144$export$2e2bcd8739ae039;\n}();\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $ff5ce077dae0f144$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\nvar $50c7aac9316f2948$var$START_OF_TEXT_STATE = 0;\nvar $50c7aac9316f2948$var$START_OF_LINE_STATE = 1;\nvar $50c7aac9316f2948$var$END_OF_TEXT_CLASS = 0;\nvar $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS = 1;\nvar $50c7aac9316f2948$var$DELETED_GLYPH_CLASS = 2;\nvar $50c7aac9316f2948$var$END_OF_LINE_CLASS = 3;\nvar $50c7aac9316f2948$var$DONT_ADVANCE = 0x4000;\nvar $50c7aac9316f2948$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $50c7aac9316f2948$export$2e2bcd8739ae039(stateTable) {\n    _classCallCheck(this, $50c7aac9316f2948$export$2e2bcd8739ae039);\n    this.stateTable = stateTable;\n    this.lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(stateTable.classTable);\n  }\n  _createClass($50c7aac9316f2948$export$2e2bcd8739ae039, [{\n    key: \"process\",\n    value: function process(glyphs, reverse, processEntry) {\n      var currentState = $50c7aac9316f2948$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n      var index = reverse ? glyphs.length - 1 : 0;\n      var dir = reverse ? -1 : 1;\n      while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n        var glyph = null;\n        var classCode = $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;\n        var shouldAdvance = true;\n        if (index === glyphs.length || index === -1) classCode = $50c7aac9316f2948$var$END_OF_TEXT_CLASS;else {\n          glyph = glyphs[index];\n          if (glyph.id === 0xffff) classCode = $50c7aac9316f2948$var$DELETED_GLYPH_CLASS;else {\n            classCode = this.lookupTable.lookup(glyph.id);\n            if (classCode == null) classCode = $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;\n          }\n        }\n        var row = this.stateTable.stateArray.getItem(currentState);\n        var entryIndex = row[classCode];\n        var entry = this.stateTable.entryTable.getItem(entryIndex);\n        if (classCode !== $50c7aac9316f2948$var$END_OF_TEXT_CLASS && classCode !== $50c7aac9316f2948$var$DELETED_GLYPH_CLASS) {\n          processEntry(glyph, entry, index);\n          shouldAdvance = !(entry.flags & $50c7aac9316f2948$var$DONT_ADVANCE);\n        }\n        currentState = entry.newState;\n        if (shouldAdvance) index += dir;\n      }\n      return glyphs;\n    }\n    /**\n    * Performs a depth-first traversal of the glyph strings\n    * represented by the state machine.\n    */\n  }, {\n    key: \"traverse\",\n    value: function traverse(opts) {\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n      if (visited.has(state)) return;\n      visited.add(state);\n      var _this$stateTable = this.stateTable,\n        nClasses = _this$stateTable.nClasses,\n        stateArray = _this$stateTable.stateArray,\n        entryTable = _this$stateTable.entryTable;\n      var row = stateArray.getItem(state);\n      // Skip predefined classes\n      for (var classCode = 4; classCode < nClasses; classCode++) {\n        var entryIndex = row[classCode];\n        var entry = entryTable.getItem(entryIndex);\n        // Try all glyphs in the class\n        var _iterator23 = _createForOfIteratorHelper(this.lookupTable.glyphsForValue(classCode)),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var glyph = _step23.value;\n            if (opts.enter) opts.enter(glyph, entry);\n            if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n            if (opts.exit) opts.exit(glyph, entry);\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      }\n    }\n  }]);\n  return $50c7aac9316f2948$export$2e2bcd8739ae039;\n}(); // indic replacement flags\nvar $55f71433a605c87d$var$MARK_FIRST = 0x8000;\nvar $55f71433a605c87d$var$MARK_LAST = 0x2000;\nvar $55f71433a605c87d$var$VERB = 0x000F;\n// contextual substitution and glyph insertion flag\nvar $55f71433a605c87d$var$SET_MARK = 0x8000;\n// ligature entry flags\nvar $55f71433a605c87d$var$SET_COMPONENT = 0x8000;\nvar $55f71433a605c87d$var$PERFORM_ACTION = 0x2000;\n// ligature action masks\nvar $55f71433a605c87d$var$LAST_MASK = 0x80000000;\nvar $55f71433a605c87d$var$STORE_MASK = 0x40000000;\nvar $55f71433a605c87d$var$OFFSET_MASK = 0x3FFFFFFF;\nvar $55f71433a605c87d$var$VERTICAL_ONLY = 0x800000;\nvar $55f71433a605c87d$var$REVERSE_DIRECTION = 0x400000;\nvar $55f71433a605c87d$var$HORIZONTAL_AND_VERTICAL = 0x200000;\n// glyph insertion flags\nvar $55f71433a605c87d$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nvar $55f71433a605c87d$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nvar $55f71433a605c87d$var$CURRENT_INSERT_BEFORE = 0x0800;\nvar $55f71433a605c87d$var$MARKED_INSERT_BEFORE = 0x0400;\nvar $55f71433a605c87d$var$CURRENT_INSERT_COUNT = 0x03E0;\nvar $55f71433a605c87d$var$MARKED_INSERT_COUNT = 0x001F;\nvar $55f71433a605c87d$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $55f71433a605c87d$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $55f71433a605c87d$export$2e2bcd8739ae039);\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n  _createClass($55f71433a605c87d$export$2e2bcd8739ae039, [{\n    key: \"process\",\n    value:\n    // Processes an array of glyphs and applies the specified features\n    // Features should be in the form of {featureType:{featureSetting:boolean}}\n    function process(glyphs) {\n      var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _iterator24 = _createForOfIteratorHelper(this.morx.chains),\n        _step24;\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var chain = _step24.value;\n          var flags = chain.defaultFlags;\n          // enable/disable the requested features\n          var _iterator25 = _createForOfIteratorHelper(chain.features),\n            _step25;\n          try {\n            for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n              var feature = _step25.value;\n              var f = void 0;\n              if (f = features[feature.featureType]) {\n                if (f[feature.featureSetting]) {\n                  flags &= feature.disableFlags;\n                  flags |= feature.enableFlags;\n                } else if (f[feature.featureSetting] === false) {\n                  flags |= ~feature.disableFlags;\n                  flags &= ~feature.enableFlags;\n                }\n              }\n            }\n          } catch (err) {\n            _iterator25.e(err);\n          } finally {\n            _iterator25.f();\n          }\n          var _iterator26 = _createForOfIteratorHelper(chain.subtables),\n            _step26;\n          try {\n            for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n              var subtable = _step26.value;\n              if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n            }\n          } catch (err) {\n            _iterator26.e(err);\n          } finally {\n            _iterator26.f();\n          }\n        }\n        // remove deleted glyphs\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n      var index = glyphs.length - 1;\n      while (index >= 0) {\n        if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n        index--;\n      }\n      return glyphs;\n    }\n  }, {\n    key: \"processSubtable\",\n    value: function processSubtable(subtable, glyphs) {\n      this.subtable = subtable;\n      this.glyphs = glyphs;\n      if (this.subtable.type === 4) {\n        this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n        return;\n      }\n      this.ligatureStack = [];\n      this.markedGlyph = null;\n      this.firstGlyph = null;\n      this.lastGlyph = null;\n      this.markedIndex = null;\n      var stateMachine = this.getStateMachine(subtable);\n      var process = this.getProcessor();\n      var reverse = !!(this.subtable.coverage & $55f71433a605c87d$var$REVERSE_DIRECTION);\n      return stateMachine.process(this.glyphs, reverse, process);\n    }\n  }, {\n    key: \"getStateMachine\",\n    value: function getStateMachine(subtable) {\n      return new (0, $50c7aac9316f2948$export$2e2bcd8739ae039)(subtable.table.stateTable);\n    }\n  }, {\n    key: \"getProcessor\",\n    value: function getProcessor() {\n      switch (this.subtable.type) {\n        case 0:\n          return this.processIndicRearragement;\n        case 1:\n          return this.processContextualSubstitution;\n        case 2:\n          return this.processLigature;\n        case 4:\n          return this.processNoncontextualSubstitutions;\n        case 5:\n          return this.processGlyphInsertion;\n        default:\n          throw new Error(\"Invalid morx subtable type: \".concat(this.subtable.type));\n      }\n    }\n  }, {\n    key: \"processIndicRearragement\",\n    value: function processIndicRearragement(glyph, entry, index) {\n      if (entry.flags & $55f71433a605c87d$var$MARK_FIRST) this.firstGlyph = index;\n      if (entry.flags & $55f71433a605c87d$var$MARK_LAST) this.lastGlyph = index;\n      $55f71433a605c87d$var$reorderGlyphs(this.glyphs, entry.flags & $55f71433a605c87d$var$VERB, this.firstGlyph, this.lastGlyph);\n    }\n  }, {\n    key: \"processContextualSubstitution\",\n    value: function processContextualSubstitution(glyph, entry, index) {\n      var subsitutions = this.subtable.table.substitutionTable.items;\n      if (entry.markIndex !== 0xffff) {\n        var lookup = subsitutions.getItem(entry.markIndex);\n        var lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);\n        glyph = this.glyphs[this.markedGlyph];\n        var gid = lookupTable.lookup(glyph.id);\n        if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n      if (entry.currentIndex !== 0xffff) {\n        var _lookup = subsitutions.getItem(entry.currentIndex);\n        var _lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(_lookup);\n        glyph = this.glyphs[index];\n        var gid = _lookupTable.lookup(glyph.id);\n        if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n      if (entry.flags & $55f71433a605c87d$var$SET_MARK) this.markedGlyph = index;\n    }\n  }, {\n    key: \"processLigature\",\n    value: function processLigature(glyph, entry, index) {\n      if (entry.flags & $55f71433a605c87d$var$SET_COMPONENT) this.ligatureStack.push(index);\n      if (entry.flags & $55f71433a605c87d$var$PERFORM_ACTION) {\n        var _this$ligatureStack;\n        var actions = this.subtable.table.ligatureActions;\n        var components = this.subtable.table.components;\n        var ligatureList = this.subtable.table.ligatureList;\n        var actionIndex = entry.action;\n        var last = false;\n        var ligatureIndex = 0;\n        var codePoints = [];\n        var ligatureGlyphs = [];\n        while (!last) {\n          var _codePoints;\n          var componentGlyph = this.ligatureStack.pop();\n          (_codePoints = codePoints).unshift.apply(_codePoints, _toConsumableArray(this.glyphs[componentGlyph].codePoints));\n          var action = actions.getItem(actionIndex++);\n          last = !!(action & $55f71433a605c87d$var$LAST_MASK);\n          var store = !!(action & $55f71433a605c87d$var$STORE_MASK);\n          var offset = (action & $55f71433a605c87d$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n          offset += this.glyphs[componentGlyph].id;\n          var component = components.getItem(offset);\n          ligatureIndex += component;\n          if (last || store) {\n            var ligatureEntry = ligatureList.getItem(ligatureIndex);\n            this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n            ligatureGlyphs.push(componentGlyph);\n            ligatureIndex = 0;\n            codePoints = [];\n          } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n        // Put ligature glyph indexes back on the stack\n        (_this$ligatureStack = this.ligatureStack).push.apply(_this$ligatureStack, ligatureGlyphs);\n      }\n    }\n  }, {\n    key: \"processNoncontextualSubstitutions\",\n    value: function processNoncontextualSubstitutions(subtable, glyphs, index) {\n      var lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(subtable.table.lookupTable);\n      for (index = 0; index < glyphs.length; index++) {\n        var glyph = glyphs[index];\n        if (glyph.id !== 0xffff) {\n          var gid = lookupTable.lookup(glyph.id);\n          if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  }, {\n    key: \"_insertGlyphs\",\n    value: function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n      var _this$glyphs;\n      var insertions = [];\n      while (count--) {\n        var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n        insertions.push(this.font.getGlyph(gid));\n      }\n      if (!isBefore) glyphIndex++;\n      (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [glyphIndex, 0].concat(insertions));\n    }\n  }, {\n    key: \"processGlyphInsertion\",\n    value: function processGlyphInsertion(glyph, entry, index) {\n      if (entry.flags & $55f71433a605c87d$var$SET_MARK) this.markedIndex = index;\n      if (entry.markedInsertIndex !== 0xffff) {\n        var count = (entry.flags & $55f71433a605c87d$var$MARKED_INSERT_COUNT) >>> 5;\n        var isBefore = !!(entry.flags & $55f71433a605c87d$var$MARKED_INSERT_BEFORE);\n        this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n      }\n      if (entry.currentInsertIndex !== 0xffff) {\n        var _count = (entry.flags & $55f71433a605c87d$var$CURRENT_INSERT_COUNT) >>> 5;\n        var _isBefore = !!(entry.flags & $55f71433a605c87d$var$CURRENT_INSERT_BEFORE);\n        this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n      }\n    }\n  }, {\n    key: \"getSupportedFeatures\",\n    value: function getSupportedFeatures() {\n      var features = [];\n      var _iterator27 = _createForOfIteratorHelper(this.morx.chains),\n        _step27;\n      try {\n        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n          var chain = _step27.value;\n          var _iterator28 = _createForOfIteratorHelper(chain.features),\n            _step28;\n          try {\n            for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n              var feature = _step28.value;\n              features.push([feature.featureType, feature.featureSetting]);\n            }\n          } catch (err) {\n            _iterator28.e(err);\n          } finally {\n            _iterator28.f();\n          }\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n      return features;\n    }\n  }, {\n    key: \"generateInputs\",\n    value: function generateInputs(gid) {\n      if (!this.inputCache) this.generateInputCache();\n      return this.inputCache[gid] || [];\n    }\n  }, {\n    key: \"generateInputCache\",\n    value: function generateInputCache() {\n      this.inputCache = {};\n      var _iterator29 = _createForOfIteratorHelper(this.morx.chains),\n        _step29;\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var chain = _step29.value;\n          var flags = chain.defaultFlags;\n          var _iterator30 = _createForOfIteratorHelper(chain.subtables),\n            _step30;\n          try {\n            for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n              var subtable = _step30.value;\n              if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n            }\n          } catch (err) {\n            _iterator30.e(err);\n          } finally {\n            _iterator30.f();\n          }\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n    }\n  }, {\n    key: \"generateInputsForSubtable\",\n    value: function generateInputsForSubtable(subtable) {\n      var _this3 = this;\n      // Currently, only supporting ligature subtables.\n      if (subtable.type !== 2) return;\n      var reverse = !!(subtable.coverage & $55f71433a605c87d$var$REVERSE_DIRECTION);\n      if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n      this.subtable = subtable;\n      this.ligatureStack = [];\n      var stateMachine = this.getStateMachine(subtable);\n      var process = this.getProcessor();\n      var input = [];\n      var stack = [];\n      this.glyphs = [];\n      stateMachine.traverse({\n        enter: function enter(glyph, entry) {\n          var glyphs = _this3.glyphs;\n          stack.push({\n            glyphs: glyphs.slice(),\n            ligatureStack: _this3.ligatureStack.slice()\n          });\n          // Add glyph to input and glyphs to process.\n          var g1 = _this3.font.getGlyph(glyph);\n          input.push(g1);\n          glyphs.push(input[input.length - 1]);\n          // Process ligature substitution\n          process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n          // Add input to result if only one matching (non-deleted) glyph remains.\n          var count = 0;\n          var found = 0;\n          for (var _i9 = 0; _i9 < glyphs.length && count <= 1; _i9++) if (glyphs[_i9].id !== 0xffff) {\n            count++;\n            found = glyphs[_i9].id;\n          }\n          if (count === 1) {\n            var result = input.map(function (g) {\n              return g.id;\n            });\n            var cache1 = _this3.inputCache[found];\n            if (cache1) cache1.push(result);else _this3.inputCache[found] = [result];\n          }\n        },\n        exit: function exit() {\n          var _stack$pop = stack.pop();\n          _this3.glyphs = _stack$pop.glyphs;\n          _this3.ligatureStack = _stack$pop.ligatureStack;\n          input.pop();\n        }\n      });\n    }\n  }]);\n  return $55f71433a605c87d$export$2e2bcd8739ae039;\n}();\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $55f71433a605c87d$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null);\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction $55f71433a605c87d$var$swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) end.reverse();\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(_toConsumableArray(end)));\n  if (reverseA) start.reverse();\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(_toConsumableArray(start)));\n  return glyphs;\n}\nfunction $55f71433a605c87d$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  var length = lastGlyph - firstGlyph + 1;\n  switch (verb) {\n    case 0:\n      return glyphs;\n    case 1:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n    case 2:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n    case 3:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n    case 4:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n    case 5:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n    case 6:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n    case 7:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n    case 8:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n    case 9:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n    case 10:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n    case 11:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n    case 12:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n    case 13:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n    case 14:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n    case 15:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n    default:\n      throw new Error(\"Unknown verb: \".concat(verb));\n  }\n}\nvar $ba6dd74203be8728$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $ba6dd74203be8728$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $ba6dd74203be8728$export$2e2bcd8739ae039);\n    this.font = font;\n    this.morxProcessor = new (0, $55f71433a605c87d$export$2e2bcd8739ae039)(font);\n    this.fallbackPosition = false;\n  }\n  _createClass($ba6dd74203be8728$export$2e2bcd8739ae039, [{\n    key: \"substitute\",\n    value: function substitute(glyphRun) {\n      // AAT expects the glyphs to be in visual order prior to morx processing,\n      // so reverse the glyphs if the script is right-to-left.\n      if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n      this.morxProcessor.process(glyphRun.glyphs, $3b6302b64eccc32c$export$b813f7d2a1677c16(glyphRun.features));\n    }\n  }, {\n    key: \"getAvailableFeatures\",\n    value: function getAvailableFeatures(script, language) {\n      return $3b6302b64eccc32c$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n    }\n  }, {\n    key: \"stringsForGlyph\",\n    value: function stringsForGlyph(gid) {\n      var glyphStrings = this.morxProcessor.generateInputs(gid);\n      var result = new Set();\n      var _iterator31 = _createForOfIteratorHelper(glyphStrings),\n        _step31;\n      try {\n        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n          var glyphs = _step31.value;\n          this._addStrings(glyphs, 0, result, \"\");\n        }\n      } catch (err) {\n        _iterator31.e(err);\n      } finally {\n        _iterator31.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"_addStrings\",\n    value: function _addStrings(glyphs, index, strings, string) {\n      var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n      var _iterator32 = _createForOfIteratorHelper(codePoints),\n        _step32;\n      try {\n        for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n          var codePoint = _step32.value;\n          var s = string + String.fromCodePoint(codePoint);\n          if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);else strings.add(s);\n        }\n      } catch (err) {\n        _iterator32.e(err);\n      } finally {\n        _iterator32.f();\n      }\n    }\n  }]);\n  return $ba6dd74203be8728$export$2e2bcd8739ae039;\n}();\nvar $94d7a73bd2edfc9a$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $94d7a73bd2edfc9a$export$2e2bcd8739ae039(font, script, direction) {\n    _classCallCheck(this, $94d7a73bd2edfc9a$export$2e2bcd8739ae039);\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  _createClass($94d7a73bd2edfc9a$export$2e2bcd8739ae039, [{\n    key: \"_addFeatures\",\n    value:\n    /**\n    * Adds the given features to the last stage.\n    * Ignores features that have already been applied.\n    */\n    function _addFeatures(features, global) {\n      var stageIndex = this.stages.length - 1;\n      var stage = this.stages[stageIndex];\n      var _iterator33 = _createForOfIteratorHelper(features),\n        _step33;\n      try {\n        for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n          var feature = _step33.value;\n          if (this.allFeatures[feature] == null) {\n            stage.push(feature);\n            this.allFeatures[feature] = stageIndex;\n            if (global) this.globalFeatures[feature] = true;\n          }\n        }\n      } catch (err) {\n        _iterator33.e(err);\n      } finally {\n        _iterator33.f();\n      }\n    }\n    /**\n    * Add features to the last stage\n    */\n  }, {\n    key: \"add\",\n    value: function add(arg) {\n      var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (this.stages.length === 0) this.stages.push([]);\n      if (typeof arg === \"string\") arg = [arg];\n      if (Array.isArray(arg)) this._addFeatures(arg, global);else if (typeof arg === \"object\") {\n        this._addFeatures(arg.global || [], true);\n        this._addFeatures(arg.local || [], false);\n      } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n    /**\n    * Add a new stage\n    */\n  }, {\n    key: \"addStage\",\n    value: function addStage(arg, global) {\n      if (typeof arg === \"function\") this.stages.push(arg, []);else {\n        this.stages.push([]);\n        this.add(arg, global);\n      }\n    }\n  }, {\n    key: \"setFeatureOverrides\",\n    value: function setFeatureOverrides(features) {\n      if (Array.isArray(features)) this.add(features);else if (typeof features === \"object\") for (var _tag2 in features) {\n        if (features[_tag2]) this.add(_tag2);else if (this.allFeatures[_tag2] != null) {\n          var stage = this.stages[this.allFeatures[_tag2]];\n          stage.splice(stage.indexOf(_tag2), 1);\n          delete this.allFeatures[_tag2];\n          delete this.globalFeatures[_tag2];\n        }\n      }\n    }\n    /**\n    * Assigns the global features to the given glyphs\n    */\n  }, {\n    key: \"assignGlobalFeatures\",\n    value: function assignGlobalFeatures(glyphs) {\n      var _iterator34 = _createForOfIteratorHelper(glyphs),\n        _step34;\n      try {\n        for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n          var glyph = _step34.value;\n          for (var feature in this.globalFeatures) glyph.features[feature] = true;\n        }\n      } catch (err) {\n        _iterator34.e(err);\n      } finally {\n        _iterator34.f();\n      }\n    }\n    /**\n    * Executes the planned stages using the given OTProcessor\n    */\n  }, {\n    key: \"process\",\n    value: function process(processor, glyphs, positions) {\n      var _iterator35 = _createForOfIteratorHelper(this.stages),\n        _step35;\n      try {\n        for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n          var stage = _step35.value;\n          if (typeof stage === \"function\") {\n            if (!positions) stage(this.font, glyphs, this);\n          } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n        }\n      } catch (err) {\n        _iterator35.e(err);\n      } finally {\n        _iterator35.f();\n      }\n    }\n  }]);\n  return $94d7a73bd2edfc9a$export$2e2bcd8739ae039;\n}();\nvar $649970d87335b30f$var$VARIATION_FEATURES = [\"rvrn\"];\nvar $649970d87335b30f$var$COMMON_FEATURES = [\"ccmp\", \"locl\", \"rlig\", \"mark\", \"mkmk\"];\nvar $649970d87335b30f$var$FRACTIONAL_FEATURES = [\"frac\", \"numr\", \"dnom\"];\nvar $649970d87335b30f$var$HORIZONTAL_FEATURES = [\"calt\", \"clig\", \"liga\", \"rclt\", \"curs\", \"kern\"];\nvar $649970d87335b30f$var$VERTICAL_FEATURES = [\"vert\"];\nvar $649970d87335b30f$var$DIRECTIONAL_FEATURES = {\n  ltr: [\"ltra\", \"ltrm\"],\n  rtl: [\"rtla\", \"rtlm\"]\n};\nvar $649970d87335b30f$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $649970d87335b30f$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $649970d87335b30f$export$2e2bcd8739ae039);\n  }\n  _createClass($649970d87335b30f$export$2e2bcd8739ae039, null, [{\n    key: \"plan\",\n    value: function plan(_plan, glyphs, features) {\n      // Plan the features we want to apply\n      this.planPreprocessing(_plan);\n      this.planFeatures(_plan);\n      this.planPostprocessing(_plan, features);\n      // Assign the global features to all the glyphs\n      _plan.assignGlobalFeatures(glyphs);\n      // Assign local features to glyphs\n      this.assignFeatures(_plan, glyphs);\n    }\n  }, {\n    key: \"planPreprocessing\",\n    value: function planPreprocessing(plan) {\n      plan.add({\n        global: [].concat($649970d87335b30f$var$VARIATION_FEATURES, _toConsumableArray($649970d87335b30f$var$DIRECTIONAL_FEATURES[plan.direction])),\n        local: $649970d87335b30f$var$FRACTIONAL_FEATURES\n      });\n    }\n  }, {\n    key: \"planFeatures\",\n    value: function planFeatures(plan) {\n      // Do nothing by default. Let subclasses override this.\n    }\n  }, {\n    key: \"planPostprocessing\",\n    value: function planPostprocessing(plan, userFeatures) {\n      plan.add([].concat($649970d87335b30f$var$COMMON_FEATURES, $649970d87335b30f$var$HORIZONTAL_FEATURES));\n      plan.setFeatureOverrides(userFeatures);\n    }\n  }, {\n    key: \"assignFeatures\",\n    value: function assignFeatures(plan, glyphs) {\n      // Enable contextual fractions\n      for (var _i10 = 0; _i10 < glyphs.length; _i10++) {\n        var glyph = glyphs[_i10];\n        if (glyph.codePoints[0] === 0x2044) {\n          var start = _i10;\n          var end = _i10 + 1;\n          // Apply numerator\n          while (start > 0 && (0, $6uUbQ$isDigit)(glyphs[start - 1].codePoints[0])) {\n            glyphs[start - 1].features.numr = true;\n            glyphs[start - 1].features.frac = true;\n            start--;\n          }\n          // Apply denominator\n          while (end < glyphs.length && (0, $6uUbQ$isDigit)(glyphs[end].codePoints[0])) {\n            glyphs[end].features.dnom = true;\n            glyphs[end].features.frac = true;\n            end++;\n          }\n          // Apply fraction slash\n          glyph.features.frac = true;\n          _i10 = end - 1;\n        }\n      }\n    }\n  }]);\n  return $649970d87335b30f$export$2e2bcd8739ae039;\n}();\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($649970d87335b30f$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\nvar $764eb544bbe1ccf0$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nvar $764eb544bbe1ccf0$var$FEATURES = [\"isol\", \"fina\", \"fin2\", \"fin3\", \"medi\", \"med2\", \"init\"];\nvar $764eb544bbe1ccf0$var$ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  \"DALATH RISH\": 5,\n  Transparent: 6\n};\nvar $764eb544bbe1ccf0$var$ISOL = \"isol\";\nvar $764eb544bbe1ccf0$var$FINA = \"fina\";\nvar $764eb544bbe1ccf0$var$FIN2 = \"fin2\";\nvar $764eb544bbe1ccf0$var$FIN3 = \"fin3\";\nvar $764eb544bbe1ccf0$var$MEDI = \"medi\";\nvar $764eb544bbe1ccf0$var$MED2 = \"med2\";\nvar $764eb544bbe1ccf0$var$INIT = \"init\";\nvar $764eb544bbe1ccf0$var$NONE = null;\n// Each entry is [prevAction, curAction, nextState]\nvar $764eb544bbe1ccf0$var$STATE_TABLE = [\n//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 6]],\n// State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$FIN2, 5], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 6]],\n// State 2: prev was D/L in ISOL form,  willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 1], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 3], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 4], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 6]],\n// State 3: prev was D in FINA form,  willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 1], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 3], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 4], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 6]],\n// State 4: prev was FINA ALAPH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$FIN2, 5], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$ISOL, 6]],\n// State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$FIN2, 5], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$ISOL, 6]],\n// State 6: prev was DALATH/RISH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$FIN3, 5], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 6]]];\nvar $764eb544bbe1ccf0$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref) {\n  _inherits($764eb544bbe1ccf0$export$2e2bcd8739ae039, _ref);\n  var _super5 = _createSuper($764eb544bbe1ccf0$export$2e2bcd8739ae039);\n  function $764eb544bbe1ccf0$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $764eb544bbe1ccf0$export$2e2bcd8739ae039);\n    return _super5.apply(this, arguments);\n  }\n  _createClass($764eb544bbe1ccf0$export$2e2bcd8739ae039, null, [{\n    key: \"planFeatures\",\n    value: function planFeatures(plan) {\n      plan.add([\"ccmp\", \"locl\"]);\n      for (var _i11 = 0; _i11 < $764eb544bbe1ccf0$var$FEATURES.length; _i11++) {\n        var feature = $764eb544bbe1ccf0$var$FEATURES[_i11];\n        plan.addStage(feature, false);\n      }\n      plan.addStage(\"mset\");\n    }\n  }, {\n    key: \"assignFeatures\",\n    value: function assignFeatures(plan, glyphs) {\n      _get(_getPrototypeOf($764eb544bbe1ccf0$export$2e2bcd8739ae039), \"assignFeatures\", this).call(this, plan, glyphs);\n      var prev = -1;\n      var state = 0;\n      var actions = [];\n      // Apply the state machine to map glyphs to features\n      for (var _i12 = 0; _i12 < glyphs.length; _i12++) {\n        var curAction = void 0,\n          prevAction = void 0;\n        var glyph = glyphs[_i12];\n        var type = $764eb544bbe1ccf0$var$getShapingClass(glyph.codePoints[0]);\n        if (type === $764eb544bbe1ccf0$var$ShapingClasses.Transparent) {\n          actions[_i12] = $764eb544bbe1ccf0$var$NONE;\n          continue;\n        }\n        var _$764eb544bbe1ccf0$va = _slicedToArray($764eb544bbe1ccf0$var$STATE_TABLE[state][type], 3);\n        prevAction = _$764eb544bbe1ccf0$va[0];\n        curAction = _$764eb544bbe1ccf0$va[1];\n        state = _$764eb544bbe1ccf0$va[2];\n        if (prevAction !== $764eb544bbe1ccf0$var$NONE && prev !== -1) actions[prev] = prevAction;\n        actions[_i12] = curAction;\n        prev = _i12;\n      }\n      // Apply the chosen features to their respective glyphs\n      for (var index = 0; index < glyphs.length; index++) {\n        var feature = void 0;\n        var glyph = glyphs[index];\n        if (feature = actions[index]) glyph.features[feature] = true;\n      }\n    }\n  }]);\n  return $764eb544bbe1ccf0$export$2e2bcd8739ae039;\n}((0, $649970d87335b30f$export$2e2bcd8739ae039));\nfunction $764eb544bbe1ccf0$var$getShapingClass(codePoint) {\n  var res = $764eb544bbe1ccf0$var$trie.get(codePoint);\n  if (res) return res - 1;\n  var category = (0, $6uUbQ$getCategory)(codePoint);\n  if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $764eb544bbe1ccf0$var$ShapingClasses.Transparent;\n  return $764eb544bbe1ccf0$var$ShapingClasses.Non_Joining;\n}\nvar $85d408632270248b$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $85d408632270248b$export$2e2bcd8739ae039(glyphs, options) {\n    _classCallCheck(this, $85d408632270248b$export$2e2bcd8739ae039);\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n  _createClass($85d408632270248b$export$2e2bcd8739ae039, [{\n    key: \"reset\",\n    value: function reset() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.options = options;\n      this.flags = options.flags || {};\n      this.markAttachmentType = options.markAttachmentType || 0;\n      this.index = index;\n    }\n  }, {\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }, {\n    key: \"shouldIgnore\",\n    value: function shouldIgnore(glyph) {\n      return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n    }\n  }, {\n    key: \"move\",\n    value: function move(dir) {\n      this.index += dir;\n      while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) this.index += dir;\n      if (0 > this.index || this.index >= this.glyphs.length) return null;\n      return this.glyphs[this.index];\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      return this.move(1);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      return this.move(-1);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var idx = this.index;\n      var res = this.increment(count);\n      this.index = idx;\n      return res;\n    }\n  }, {\n    key: \"peekIndex\",\n    value: function peekIndex() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var idx = this.index;\n      this.increment(count);\n      var res = this.index;\n      this.index = idx;\n      return res;\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var dir = count < 0 ? -1 : 1;\n      count = Math.abs(count);\n      while (count--) this.move(dir);\n      return this.glyphs[this.index];\n    }\n  }]);\n  return $85d408632270248b$export$2e2bcd8739ae039;\n}();\nvar $a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS = [\"DFLT\", \"dflt\", \"latn\"];\nvar $a83b9c36aaa94fd3$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $a83b9c36aaa94fd3$export$2e2bcd8739ae039(font, table) {\n    _classCallCheck(this, $a83b9c36aaa94fd3$export$2e2bcd8739ae039);\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {};\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n    // initialize to default script + language\n    this.selectScript();\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n  _createClass($a83b9c36aaa94fd3$export$2e2bcd8739ae039, [{\n    key: \"findScript\",\n    value: function findScript(script) {\n      if (this.table.scriptList == null) return null;\n      if (!Array.isArray(script)) script = [script];\n      var _iterator36 = _createForOfIteratorHelper(script),\n        _step36;\n      try {\n        for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n          var s = _step36.value;\n          var _iterator37 = _createForOfIteratorHelper(this.table.scriptList),\n            _step37;\n          try {\n            for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n              var entry = _step37.value;\n              if (entry.tag === s) return entry;\n            }\n          } catch (err) {\n            _iterator37.e(err);\n          } finally {\n            _iterator37.f();\n          }\n        }\n      } catch (err) {\n        _iterator36.e(err);\n      } finally {\n        _iterator36.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"selectScript\",\n    value: function selectScript(script, language, direction) {\n      var changed = false;\n      var entry;\n      if (!this.script || script !== this.scriptTag) {\n        entry = this.findScript(script);\n        if (!entry) entry = this.findScript($a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS);\n        if (!entry) return this.scriptTag;\n        this.scriptTag = entry.tag;\n        this.script = entry.script;\n        this.language = null;\n        this.languageTag = null;\n        changed = true;\n      }\n      if (!direction || direction !== this.direction) this.direction = direction || $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);\n      if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n      if (!language || language !== this.languageTag) {\n        this.language = null;\n        var _iterator38 = _createForOfIteratorHelper(this.script.langSysRecords),\n          _step38;\n        try {\n          for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n            var lang = _step38.value;\n            if (lang.tag === language) {\n              this.language = lang.langSys;\n              this.languageTag = lang.tag;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator38.e(err);\n        } finally {\n          _iterator38.f();\n        }\n        if (!this.language) {\n          this.language = this.script.defaultLangSys;\n          this.languageTag = null;\n        }\n        changed = true;\n      }\n      // Build a feature lookup table\n      if (changed) {\n        this.features = {};\n        if (this.language) {\n          var _iterator39 = _createForOfIteratorHelper(this.language.featureIndexes),\n            _step39;\n          try {\n            for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n              var featureIndex = _step39.value;\n              var record = this.table.featureList[featureIndex];\n              var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n              this.features[record.tag] = substituteFeature || record.feature;\n            }\n          } catch (err) {\n            _iterator39.e(err);\n          } finally {\n            _iterator39.f();\n          }\n        }\n      }\n      return this.scriptTag;\n    }\n  }, {\n    key: \"lookupsForFeatures\",\n    value: function lookupsForFeatures() {\n      var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var exclude = arguments.length > 1 ? arguments[1] : undefined;\n      var lookups = [];\n      var _iterator40 = _createForOfIteratorHelper(userFeatures),\n        _step40;\n      try {\n        for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n          var _tag3 = _step40.value;\n          var feature = this.features[_tag3];\n          if (!feature) continue;\n          var _iterator41 = _createForOfIteratorHelper(feature.lookupListIndexes),\n            _step41;\n          try {\n            for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n              var lookupIndex = _step41.value;\n              if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n              lookups.push({\n                feature: _tag3,\n                index: lookupIndex,\n                lookup: this.table.lookupList.get(lookupIndex)\n              });\n            }\n          } catch (err) {\n            _iterator41.e(err);\n          } finally {\n            _iterator41.f();\n          }\n        }\n      } catch (err) {\n        _iterator40.e(err);\n      } finally {\n        _iterator40.f();\n      }\n      lookups.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      return lookups;\n    }\n  }, {\n    key: \"substituteFeatureForVariations\",\n    value: function substituteFeatureForVariations(featureIndex) {\n      if (this.variationsIndex === -1) return null;\n      var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n      var substitutions = record.featureTableSubstitution.substitutions;\n      var _iterator42 = _createForOfIteratorHelper(substitutions),\n        _step42;\n      try {\n        for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n          var substitution = _step42.value;\n          if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n        }\n      } catch (err) {\n        _iterator42.e(err);\n      } finally {\n        _iterator42.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"findVariationsIndex\",\n    value: function findVariationsIndex(coords) {\n      var variations = this.table.featureVariations;\n      if (!variations) return -1;\n      var records = variations.featureVariationRecords;\n      for (var _i13 = 0; _i13 < records.length; _i13++) {\n        var conditions = records[_i13].conditionSet.conditionTable;\n        if (this.variationConditionsMatch(conditions, coords)) return _i13;\n      }\n      return -1;\n    }\n  }, {\n    key: \"variationConditionsMatch\",\n    value: function variationConditionsMatch(conditions, coords) {\n      return conditions.every(function (condition) {\n        var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n        return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n      });\n    }\n  }, {\n    key: \"applyFeatures\",\n    value: function applyFeatures(userFeatures, glyphs, advances) {\n      var lookups = this.lookupsForFeatures(userFeatures);\n      this.applyLookups(lookups, glyphs, advances);\n    }\n  }, {\n    key: \"applyLookups\",\n    value: function applyLookups(lookups, glyphs, positions) {\n      this.glyphs = glyphs;\n      this.positions = positions;\n      this.glyphIterator = new (0, $85d408632270248b$export$2e2bcd8739ae039)(glyphs);\n      var _iterator43 = _createForOfIteratorHelper(lookups),\n        _step43;\n      try {\n        for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n          var _step43$value = _step43.value,\n            feature = _step43$value.feature,\n            lookup = _step43$value.lookup;\n          this.currentFeature = feature;\n          this.glyphIterator.reset(lookup.flags);\n          while (this.glyphIterator.index < glyphs.length) {\n            if (!(feature in this.glyphIterator.cur.features)) {\n              this.glyphIterator.next();\n              continue;\n            }\n            var _iterator44 = _createForOfIteratorHelper(lookup.subTables),\n              _step44;\n            try {\n              for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n                var table = _step44.value;\n                var res = this.applyLookup(lookup.lookupType, table);\n                if (res) break;\n              }\n            } catch (err) {\n              _iterator44.e(err);\n            } finally {\n              _iterator44.f();\n            }\n            this.glyphIterator.next();\n          }\n        }\n      } catch (err) {\n        _iterator43.e(err);\n      } finally {\n        _iterator43.f();\n      }\n    }\n  }, {\n    key: \"applyLookup\",\n    value: function applyLookup(lookup, table) {\n      throw new Error(\"applyLookup must be implemented by subclasses\");\n    }\n  }, {\n    key: \"applyLookupList\",\n    value: function applyLookupList(lookupRecords) {\n      var options = this.glyphIterator.options;\n      var glyphIndex = this.glyphIterator.index;\n      var _iterator45 = _createForOfIteratorHelper(lookupRecords),\n        _step45;\n      try {\n        for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n          var lookupRecord = _step45.value;\n          // Reset flags and find glyph index for this lookup record\n          this.glyphIterator.reset(options, glyphIndex);\n          this.glyphIterator.increment(lookupRecord.sequenceIndex);\n          // Get the lookup and setup flags for subtables\n          var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n          this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n          // Apply lookup subtables until one matches\n          var _iterator46 = _createForOfIteratorHelper(lookup.subTables),\n            _step46;\n          try {\n            for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n              var table = _step46.value;\n              if (this.applyLookup(lookup.lookupType, table)) break;\n            }\n          } catch (err) {\n            _iterator46.e(err);\n          } finally {\n            _iterator46.f();\n          }\n        }\n      } catch (err) {\n        _iterator45.e(err);\n      } finally {\n        _iterator45.f();\n      }\n      this.glyphIterator.reset(options, glyphIndex);\n      return true;\n    }\n  }, {\n    key: \"coverageIndex\",\n    value: function coverageIndex(coverage, glyph) {\n      if (glyph == null) glyph = this.glyphIterator.cur.id;\n      switch (coverage.version) {\n        case 1:\n          return coverage.glyphs.indexOf(glyph);\n        case 2:\n          var _iterator47 = _createForOfIteratorHelper(coverage.rangeRecords),\n            _step47;\n          try {\n            for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n              var range = _step47.value;\n              if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n            }\n          } catch (err) {\n            _iterator47.e(err);\n          } finally {\n            _iterator47.f();\n          }\n          break;\n      }\n      return -1;\n    }\n  }, {\n    key: \"match\",\n    value: function match(sequenceIndex, sequence, fn, matched) {\n      var pos = this.glyphIterator.index;\n      var glyph = this.glyphIterator.increment(sequenceIndex);\n      var idx = 0;\n      while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n        if (matched) matched.push(this.glyphIterator.index);\n        idx++;\n        glyph = this.glyphIterator.next();\n      }\n      this.glyphIterator.index = pos;\n      if (idx < sequence.length) return false;\n      return matched || true;\n    }\n  }, {\n    key: \"sequenceMatches\",\n    value: function sequenceMatches(sequenceIndex, sequence) {\n      return this.match(sequenceIndex, sequence, function (component, glyph) {\n        return component === glyph.id;\n      });\n    }\n  }, {\n    key: \"sequenceMatchIndices\",\n    value: function sequenceMatchIndices(sequenceIndex, sequence) {\n      var _this4 = this;\n      return this.match(sequenceIndex, sequence, function (component, glyph) {\n        // If the current feature doesn't apply to this glyph,\n        if (!(_this4.currentFeature in glyph.features)) return false;\n        return component === glyph.id;\n      }, []);\n    }\n  }, {\n    key: \"coverageSequenceMatches\",\n    value: function coverageSequenceMatches(sequenceIndex, sequence) {\n      var _this5 = this;\n      return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n        return _this5.coverageIndex(coverage, glyph.id) >= 0;\n      });\n    }\n  }, {\n    key: \"getClassID\",\n    value: function getClassID(glyph, classDef) {\n      switch (classDef.version) {\n        case 1:\n          var _i14 = glyph - classDef.startGlyph;\n          if (_i14 >= 0 && _i14 < classDef.classValueArray.length) return classDef.classValueArray[_i14];\n          break;\n        case 2:\n          var _iterator48 = _createForOfIteratorHelper(classDef.classRangeRecord),\n            _step48;\n          try {\n            for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n              var range = _step48.value;\n              if (range.start <= glyph && glyph <= range.end) return range.class;\n            }\n          } catch (err) {\n            _iterator48.e(err);\n          } finally {\n            _iterator48.f();\n          }\n          break;\n      }\n      return 0;\n    }\n  }, {\n    key: \"classSequenceMatches\",\n    value: function classSequenceMatches(sequenceIndex, sequence, classDef) {\n      var _this6 = this;\n      return this.match(sequenceIndex, sequence, function (classID, glyph) {\n        return classID === _this6.getClassID(glyph.id, classDef);\n      });\n    }\n  }, {\n    key: \"applyContext\",\n    value: function applyContext(table) {\n      var index, set;\n      switch (table.version) {\n        case 1:\n          index = this.coverageIndex(table.coverage);\n          if (index === -1) return false;\n          set = table.ruleSets[index];\n          var _iterator49 = _createForOfIteratorHelper(set),\n            _step49;\n          try {\n            for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n              var rule = _step49.value;\n              if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n            }\n          } catch (err) {\n            _iterator49.e(err);\n          } finally {\n            _iterator49.f();\n          }\n          break;\n        case 2:\n          if (this.coverageIndex(table.coverage) === -1) return false;\n          index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n          if (index === -1) return false;\n          set = table.classSet[index];\n          var _iterator50 = _createForOfIteratorHelper(set),\n            _step50;\n          try {\n            for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n              var rule1 = _step50.value;\n              if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n            }\n          } catch (err) {\n            _iterator50.e(err);\n          } finally {\n            _iterator50.f();\n          }\n          break;\n        case 3:\n          if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n          break;\n      }\n      return false;\n    }\n  }, {\n    key: \"applyChainingContext\",\n    value: function applyChainingContext(table) {\n      var index;\n      switch (table.version) {\n        case 1:\n          index = this.coverageIndex(table.coverage);\n          if (index === -1) return false;\n          var set = table.chainRuleSets[index];\n          var _iterator51 = _createForOfIteratorHelper(set),\n            _step51;\n          try {\n            for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n              var rule = _step51.value;\n              if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n            }\n          } catch (err) {\n            _iterator51.e(err);\n          } finally {\n            _iterator51.f();\n          }\n          break;\n        case 2:\n          if (this.coverageIndex(table.coverage) === -1) return false;\n          index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n          var rules = table.chainClassSet[index];\n          if (!rules) return false;\n          var _iterator52 = _createForOfIteratorHelper(rules),\n            _step52;\n          try {\n            for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n              var rule2 = _step52.value;\n              if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n            }\n          } catch (err) {\n            _iterator52.e(err);\n          } finally {\n            _iterator52.f();\n          }\n          break;\n        case 3:\n          if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n          break;\n      }\n      return false;\n    }\n  }]);\n  return $a83b9c36aaa94fd3$export$2e2bcd8739ae039;\n}();\nvar $10e7b257e1a9a756$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $10e7b257e1a9a756$export$2e2bcd8739ae039(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments.length > 3 ? arguments[3] : undefined;\n    _classCallCheck(this, $10e7b257e1a9a756$export$2e2bcd8739ae039);\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n    if (Array.isArray(features)) for (var _i15 = 0; _i15 < features.length; _i15++) {\n      var feature = features[_i15];\n      this.features[feature] = true;\n    } else if (typeof features === \"object\") Object.assign(this.features, features);\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n  _createClass($10e7b257e1a9a756$export$2e2bcd8739ae039, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $6uUbQ$isMark));\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new $10e7b257e1a9a756$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n    }\n  }]);\n  return $10e7b257e1a9a756$export$2e2bcd8739ae039;\n}();\nvar $e1c6bbc8cb416f8c$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref2) {\n  _inherits($e1c6bbc8cb416f8c$export$2e2bcd8739ae039, _ref2);\n  var _super6 = _createSuper($e1c6bbc8cb416f8c$export$2e2bcd8739ae039);\n  function $e1c6bbc8cb416f8c$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $e1c6bbc8cb416f8c$export$2e2bcd8739ae039);\n    return _super6.apply(this, arguments);\n  }\n  _createClass($e1c6bbc8cb416f8c$export$2e2bcd8739ae039, null, [{\n    key: \"planFeatures\",\n    value: function planFeatures(plan) {\n      plan.add([\"ljmo\", \"vjmo\", \"tjmo\"], false);\n    }\n  }, {\n    key: \"assignFeatures\",\n    value: function assignFeatures(plan, glyphs) {\n      var state = 0;\n      var i = 0;\n      while (i < glyphs.length) {\n        var action = void 0;\n        var glyph = glyphs[i];\n        var code = glyph.codePoints[0];\n        var type = $e1c6bbc8cb416f8c$var$getType(code);\n        var _$e1c6bbc8cb416f8c$va = _slicedToArray($e1c6bbc8cb416f8c$var$STATE_TABLE[state][type], 2);\n        action = _$e1c6bbc8cb416f8c$va[0];\n        state = _$e1c6bbc8cb416f8c$va[1];\n        switch (action) {\n          case $e1c6bbc8cb416f8c$var$DECOMPOSE:\n            // Decompose the composed syllable if it is not supported by the font.\n            if (!plan.font.hasGlyphForCodePoint(code)) i = $e1c6bbc8cb416f8c$var$decompose(glyphs, i, plan.font);\n            break;\n          case $e1c6bbc8cb416f8c$var$COMPOSE:\n            // Found a decomposed syllable. Try to compose if supported by the font.\n            i = $e1c6bbc8cb416f8c$var$compose(glyphs, i, plan.font);\n            break;\n          case $e1c6bbc8cb416f8c$var$TONE_MARK:\n            // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n            $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs, i, plan.font);\n            break;\n          case $e1c6bbc8cb416f8c$var$INVALID:\n            // Tone mark has no valid syllable to attach to, so insert a dotted circle\n            i = $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs, i, plan.font);\n            break;\n        }\n        i++;\n      }\n    }\n  }]);\n  return $e1c6bbc8cb416f8c$export$2e2bcd8739ae039;\n}((0, $649970d87335b30f$export$2e2bcd8739ae039));\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($e1c6bbc8cb416f8c$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nvar $e1c6bbc8cb416f8c$var$HANGUL_BASE = 0xac00;\nvar $e1c6bbc8cb416f8c$var$HANGUL_END = 0xd7a4;\nvar $e1c6bbc8cb416f8c$var$HANGUL_COUNT = $e1c6bbc8cb416f8c$var$HANGUL_END - $e1c6bbc8cb416f8c$var$HANGUL_BASE + 1;\nvar $e1c6bbc8cb416f8c$var$L_BASE = 0x1100; // lead\nvar $e1c6bbc8cb416f8c$var$V_BASE = 0x1161; // vowel\nvar $e1c6bbc8cb416f8c$var$T_BASE = 0x11a7; // trail\nvar $e1c6bbc8cb416f8c$var$L_COUNT = 19;\nvar $e1c6bbc8cb416f8c$var$V_COUNT = 21;\nvar $e1c6bbc8cb416f8c$var$T_COUNT = 28;\nvar $e1c6bbc8cb416f8c$var$L_END = $e1c6bbc8cb416f8c$var$L_BASE + $e1c6bbc8cb416f8c$var$L_COUNT - 1;\nvar $e1c6bbc8cb416f8c$var$V_END = $e1c6bbc8cb416f8c$var$V_BASE + $e1c6bbc8cb416f8c$var$V_COUNT - 1;\nvar $e1c6bbc8cb416f8c$var$T_END = $e1c6bbc8cb416f8c$var$T_BASE + $e1c6bbc8cb416f8c$var$T_COUNT - 1;\nvar $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE = 0x25cc;\nvar $e1c6bbc8cb416f8c$var$isL = function $e1c6bbc8cb416f8c$var$isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\nvar $e1c6bbc8cb416f8c$var$isV = function $e1c6bbc8cb416f8c$var$isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\nvar $e1c6bbc8cb416f8c$var$isT = function $e1c6bbc8cb416f8c$var$isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\nvar $e1c6bbc8cb416f8c$var$isTone = function $e1c6bbc8cb416f8c$var$isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\nvar $e1c6bbc8cb416f8c$var$isLVT = function $e1c6bbc8cb416f8c$var$isLVT(code) {\n  return $e1c6bbc8cb416f8c$var$HANGUL_BASE <= code && code <= $e1c6bbc8cb416f8c$var$HANGUL_END;\n};\nvar $e1c6bbc8cb416f8c$var$isLV = function $e1c6bbc8cb416f8c$var$isLV(code) {\n  return code - $e1c6bbc8cb416f8c$var$HANGUL_BASE < $e1c6bbc8cb416f8c$var$HANGUL_COUNT && (code - $e1c6bbc8cb416f8c$var$HANGUL_BASE) % $e1c6bbc8cb416f8c$var$T_COUNT === 0;\n};\nvar $e1c6bbc8cb416f8c$var$isCombiningL = function $e1c6bbc8cb416f8c$var$isCombiningL(code) {\n  return $e1c6bbc8cb416f8c$var$L_BASE <= code && code <= $e1c6bbc8cb416f8c$var$L_END;\n};\nvar $e1c6bbc8cb416f8c$var$isCombiningV = function $e1c6bbc8cb416f8c$var$isCombiningV(code) {\n  return $e1c6bbc8cb416f8c$var$V_BASE <= code && code <= $e1c6bbc8cb416f8c$var$V_END;\n};\nvar $e1c6bbc8cb416f8c$var$isCombiningT = function $e1c6bbc8cb416f8c$var$isCombiningT(code) {\n  return $e1c6bbc8cb416f8c$var$T_BASE + 1 && 1 <= code && code <= $e1c6bbc8cb416f8c$var$T_END;\n};\n// Character categories\nvar $e1c6bbc8cb416f8c$var$X = 0; // Other character\nvar $e1c6bbc8cb416f8c$var$L = 1; // Leading consonant\nvar $e1c6bbc8cb416f8c$var$V = 2; // Medial vowel\nvar $e1c6bbc8cb416f8c$var$T = 3; // Trailing consonant\nvar $e1c6bbc8cb416f8c$var$LV = 4; // Composed <LV> syllable\nvar $e1c6bbc8cb416f8c$var$LVT = 5; // Composed <LVT> syllable\nvar $e1c6bbc8cb416f8c$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\nfunction $e1c6bbc8cb416f8c$var$getType(code) {\n  if ($e1c6bbc8cb416f8c$var$isL(code)) return $e1c6bbc8cb416f8c$var$L;\n  if ($e1c6bbc8cb416f8c$var$isV(code)) return $e1c6bbc8cb416f8c$var$V;\n  if ($e1c6bbc8cb416f8c$var$isT(code)) return $e1c6bbc8cb416f8c$var$T;\n  if ($e1c6bbc8cb416f8c$var$isLV(code)) return $e1c6bbc8cb416f8c$var$LV;\n  if ($e1c6bbc8cb416f8c$var$isLVT(code)) return $e1c6bbc8cb416f8c$var$LVT;\n  if ($e1c6bbc8cb416f8c$var$isTone(code)) return $e1c6bbc8cb416f8c$var$M;\n  return $e1c6bbc8cb416f8c$var$X;\n}\n// State machine actions\nvar $e1c6bbc8cb416f8c$var$NO_ACTION = 0;\nvar $e1c6bbc8cb416f8c$var$DECOMPOSE = 1;\nvar $e1c6bbc8cb416f8c$var$COMPOSE = 2;\nvar $e1c6bbc8cb416f8c$var$TONE_MARK = 4;\nvar $e1c6bbc8cb416f8c$var$INVALID = 5;\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nvar $e1c6bbc8cb416f8c$var$STATE_TABLE = [\n//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$INVALID, 0]],\n// State 1: <L>\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$COMPOSE, 2], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$INVALID, 0]],\n// State 2: <L,V> or <LV>\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$COMPOSE, 3], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$TONE_MARK, 0]],\n// State 3: <L,V,T> or <LVT>\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$TONE_MARK, 0]]];\nfunction $e1c6bbc8cb416f8c$var$getGlyph(font, code, features) {\n  return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, font.glyphForCodePoint(code).id, [code], features);\n}\nfunction $e1c6bbc8cb416f8c$var$decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - $e1c6bbc8cb416f8c$var$HANGUL_BASE;\n  var t = $e1c6bbc8cb416f8c$var$T_BASE + s % $e1c6bbc8cb416f8c$var$T_COUNT;\n  s = s / $e1c6bbc8cb416f8c$var$T_COUNT | 0;\n  var l = $e1c6bbc8cb416f8c$var$L_BASE + s / $e1c6bbc8cb416f8c$var$V_COUNT | 0;\n  var v = $e1c6bbc8cb416f8c$var$V_BASE + s % $e1c6bbc8cb416f8c$var$V_COUNT;\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $e1c6bbc8cb416f8c$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  var ljmo = $e1c6bbc8cb416f8c$var$getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = $e1c6bbc8cb416f8c$var$getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n  if (t > $e1c6bbc8cb416f8c$var$T_BASE) {\n    var tjmo = $e1c6bbc8cb416f8c$var$getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\nfunction $e1c6bbc8cb416f8c$var$compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = $e1c6bbc8cb416f8c$var$getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = $e1c6bbc8cb416f8c$var$getType(prev);\n  // Figure out what type of syllable we're dealing with\n  var lv, ljmo, vjmo, tjmo;\n  if (prevType === $e1c6bbc8cb416f8c$var$LV && type === $e1c6bbc8cb416f8c$var$T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === $e1c6bbc8cb416f8c$var$V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0];\n    // Make sure L and V are combining characters\n    if ($e1c6bbc8cb416f8c$var$isCombiningL(l) && $e1c6bbc8cb416f8c$var$isCombiningV(v)) lv = $e1c6bbc8cb416f8c$var$HANGUL_BASE + ((l - $e1c6bbc8cb416f8c$var$L_BASE) * $e1c6bbc8cb416f8c$var$V_COUNT + (v - $e1c6bbc8cb416f8c$var$V_BASE)) * $e1c6bbc8cb416f8c$var$T_COUNT;\n  }\n  var t = tjmo && tjmo.codePoints[0] || $e1c6bbc8cb416f8c$var$T_BASE;\n  if (lv != null && (t === $e1c6bbc8cb416f8c$var$T_BASE || $e1c6bbc8cb416f8c$var$isCombiningT(t))) {\n    var s = lv + (t - $e1c6bbc8cb416f8c$var$T_BASE);\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === $e1c6bbc8cb416f8c$var$V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, $e1c6bbc8cb416f8c$var$getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) ljmo.features.ljmo = true;\n  if (vjmo) vjmo.features.vjmo = true;\n  if (tjmo) tjmo.features.tjmo = true;\n  if (prevType === $e1c6bbc8cb416f8c$var$LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    $e1c6bbc8cb416f8c$var$decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n  return i;\n}\nfunction $e1c6bbc8cb416f8c$var$getLength(code) {\n  switch ($e1c6bbc8cb416f8c$var$getType(code)) {\n    case $e1c6bbc8cb416f8c$var$LV:\n    case $e1c6bbc8cb416f8c$var$LVT:\n      return 1;\n    case $e1c6bbc8cb416f8c$var$V:\n      return 2;\n    case $e1c6bbc8cb416f8c$var$T:\n      return 3;\n  }\n}\nfunction $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = $e1c6bbc8cb416f8c$var$getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\nfunction $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  if (font.hasGlyphForCodePoint($e1c6bbc8cb416f8c$var$DOTTED_CIRCLE)) {\n    var dottedCircle = $e1c6bbc8cb416f8c$var$getGlyph(font, $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE, glyph.features);\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n  return i;\n}\nvar $4b0735ca6c692ea5$exports = {};\n$4b0735ca6c692ea5$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\nvar $aa333a9607471296$exports = {};\n$aa333a9607471296$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\nvar $90a9d3398ee54fe5$export$a513ea61a7bee91c = {\n  X: 1,\n  C: 2,\n  V: 4,\n  N: 8,\n  H: 16,\n  ZWNJ: 32,\n  ZWJ: 64,\n  M: 128,\n  SM: 256,\n  VD: 512,\n  A: 1024,\n  Placeholder: 2048,\n  Dotted_Circle: 4096,\n  RS: 8192,\n  Coeng: 16384,\n  Repha: 32768,\n  Ra: 65536,\n  CM: 131072,\n  Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n};\n\nvar $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0 = {\n  Start: 1,\n  Ra_To_Become_Reph: 2,\n  Pre_M: 4,\n  Pre_C: 8,\n  Base_C: 16,\n  After_Main: 32,\n  Above_C: 64,\n  Before_Sub: 128,\n  Below_C: 256,\n  After_Sub: 512,\n  Before_Post: 1024,\n  Post_C: 2048,\n  After_Post: 4096,\n  Final_C: 8192,\n  SMVD: 16384,\n  End: 32768\n};\nvar $90a9d3398ee54fe5$export$8519deaa7de2b07 = $90a9d3398ee54fe5$export$a513ea61a7bee91c.C | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Ra | $90a9d3398ee54fe5$export$a513ea61a7bee91c.CM | $90a9d3398ee54fe5$export$a513ea61a7bee91c.V | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Placeholder | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Dotted_Circle;\nvar $90a9d3398ee54fe5$export$bbcd928767338e0d = $90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ | $90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWNJ;\nvar $90a9d3398ee54fe5$export$ca9599b2a300afc = $90a9d3398ee54fe5$export$a513ea61a7bee91c.H | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Coeng;\nvar $90a9d3398ee54fe5$export$e99d119da76a0fc5 = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Sub,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Sub,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n    rephMode: \"Explicit\",\n    blwfMode: \"Post_Only\"\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Post_Only\"\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,\n    rephMode: \"Log_Repha\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: \"First\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n    rephMode: \"Vis_Repha\",\n    blwfMode: \"Pre_And_Post\"\n  }\n};\nvar $90a9d3398ee54fe5$export$f647c9cfdd77d95a = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nvar _ref3 = (0, /*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports)),\n  $7826f90f6f0cecc9$var$decompositions = _ref3.decompositions;\nvar $7826f90f6f0cecc9$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"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\"));\nvar $7826f90f6f0cecc9$var$stateMachine = new (0, $6uUbQ$dfa)((0, /*@__PURE__*/$parcel$interopDefault($4b0735ca6c692ea5$exports)));\nvar $7826f90f6f0cecc9$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref4) {\n  _inherits($7826f90f6f0cecc9$export$2e2bcd8739ae039, _ref4);\n  var _super7 = _createSuper($7826f90f6f0cecc9$export$2e2bcd8739ae039);\n  function $7826f90f6f0cecc9$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $7826f90f6f0cecc9$export$2e2bcd8739ae039);\n    return _super7.apply(this, arguments);\n  }\n  _createClass($7826f90f6f0cecc9$export$2e2bcd8739ae039, null, [{\n    key: \"planFeatures\",\n    value: function planFeatures(plan) {\n      plan.addStage($7826f90f6f0cecc9$var$setupSyllables);\n      plan.addStage([\"locl\", \"ccmp\"]);\n      plan.addStage($7826f90f6f0cecc9$var$initialReordering);\n      plan.addStage(\"nukt\");\n      plan.addStage(\"akhn\");\n      plan.addStage(\"rphf\", false);\n      plan.addStage(\"rkrf\");\n      plan.addStage(\"pref\", false);\n      plan.addStage(\"blwf\", false);\n      plan.addStage(\"abvf\", false);\n      plan.addStage(\"half\", false);\n      plan.addStage(\"pstf\", false);\n      plan.addStage(\"vatu\");\n      plan.addStage(\"cjct\");\n      plan.addStage(\"cfar\", false);\n      plan.addStage($7826f90f6f0cecc9$var$finalReordering);\n      plan.addStage({\n        local: [\"init\"],\n        global: [\"pres\", \"abvs\", \"blws\", \"psts\", \"haln\", \"dist\", \"abvm\", \"blwm\", \"calt\", \"clig\"]\n      });\n      // Setup the indic config for the selected script\n      plan.unicodeScript = $130d1a642ebcd2b7$export$ce50e82f12a827a4(plan.script);\n      plan.indicConfig = (0, $90a9d3398ee54fe5$export$e99d119da76a0fc5)[plan.unicodeScript] || (0, $90a9d3398ee54fe5$export$e99d119da76a0fc5).Default;\n      plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\";\n      // TODO: turn off kern (Khmer) and liga features.\n    }\n  }, {\n    key: \"assignFeatures\",\n    value: function assignFeatures(plan, glyphs) {\n      var _loop = function _loop(_i16) {\n        var codepoint = glyphs[_i16].codePoints[0];\n        var d = (0, $90a9d3398ee54fe5$export$f647c9cfdd77d95a)[codepoint] || $7826f90f6f0cecc9$var$decompositions[codepoint];\n        if (d) {\n          var decomposed = d.map(function (c) {\n            var g = plan.font.glyphForCodePoint(c);\n            return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font, g.id, [c], glyphs[_i16].features);\n          });\n          glyphs.splice.apply(glyphs, [_i16, 1].concat(_toConsumableArray(decomposed)));\n        }\n      };\n      // Decompose split matras\n      // TODO: do this in a more general unicode normalizer\n      for (var _i16 = glyphs.length - 1; _i16 >= 0; _i16--) {\n        _loop(_i16);\n      }\n    }\n  }]);\n  return $7826f90f6f0cecc9$export$2e2bcd8739ae039;\n}((0, $649970d87335b30f$export$2e2bcd8739ae039));\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($7826f90f6f0cecc9$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nfunction $7826f90f6f0cecc9$var$indicCategory(glyph) {\n  return $7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0]) >> 8;\n}\nfunction $7826f90f6f0cecc9$var$indicPosition(glyph) {\n  return 1 << ($7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\nvar $7826f90f6f0cecc9$var$IndicInfo = /*#__PURE__*/_createClass(function $7826f90f6f0cecc9$var$IndicInfo(category, position, syllableType, syllable) {\n  _classCallCheck(this, $7826f90f6f0cecc9$var$IndicInfo);\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n});\nfunction $7826f90f6f0cecc9$var$setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n  var _iterator53 = _createForOfIteratorHelper($7826f90f6f0cecc9$var$stateMachine.match(glyphs.map($7826f90f6f0cecc9$var$indicCategory))),\n    _step53;\n  try {\n    for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n      var _step53$value = _slicedToArray(_step53.value, 3),\n        start = _step53$value[0],\n        end = _step53$value[1],\n        tags = _step53$value[2];\n      if (start > last) {\n        ++syllable;\n        for (var _i18 = last; _i18 < start; _i18++) glyphs[_i18].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).X, (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n      }\n      ++syllable;\n      // Create shaper info\n      for (var _i19 = start; _i19 <= end; _i19++) glyphs[_i19].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo(1 << $7826f90f6f0cecc9$var$indicCategory(glyphs[_i19]), $7826f90f6f0cecc9$var$indicPosition(glyphs[_i19]), tags[0], syllable);\n      last = end + 1;\n    }\n  } catch (err) {\n    _iterator53.e(err);\n  } finally {\n    _iterator53.f();\n  }\n  if (last < glyphs.length) {\n    ++syllable;\n    for (var _i17 = last; _i17 < glyphs.length; _i17++) glyphs[_i17].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).X, (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n  }\n}\nfunction $7826f90f6f0cecc9$var$isConsonant(glyph) {\n  return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$8519deaa7de2b07);\n}\nfunction $7826f90f6f0cecc9$var$isJoiner(glyph) {\n  return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$bbcd928767338e0d);\n}\nfunction $7826f90f6f0cecc9$var$isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$ca9599b2a300afc);\n}\nfunction $7826f90f6f0cecc9$var$wouldSubstitute(glyphs, feature) {\n  var _iterator54 = _createForOfIteratorHelper(glyphs),\n    _step54;\n  try {\n    for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n      var glyph = _step54.value;\n      glyph.features = _defineProperty({}, feature, true);\n    }\n  } catch (err) {\n    _iterator54.e(err);\n  } finally {\n    _iterator54.f();\n  }\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\nfunction $7826f90f6f0cecc9$var$consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n  if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;else if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;else if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;\n  return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n}\nfunction $7826f90f6f0cecc9$var$initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    var info = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, virama, [indicConfig.virama]);\n    for (var _i20 = 0; _i20 < glyphs.length; _i20++) if (glyphs[_i20].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) glyphs[_i20].shaperInfo.position = $7826f90f6f0cecc9$var$consonantPosition(font, glyphs[_i20].copy(), info);\n  }\n  for (var start = 0, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n      category = _glyphs$start$shaperI.category,\n      syllableType = _glyphs$start$shaperI.syllableType;\n    if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n    if (syllableType === \"broken_cluster\" && dottedCircle) {\n      var g = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo(1 << $7826f90f6f0cecc9$var$indicCategory(g), $7826f90f6f0cecc9$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n      // Insert after possible Repha.\n      var _i21 = start;\n      while (_i21 < end && glyphs[_i21].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha) _i21++;\n      glyphs.splice(_i21++, 0, g);\n      end++;\n    }\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n    var base = end;\n    var limit = start;\n    var hasReph = false;\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$7826f90f6f0cecc9$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if ($7826f90f6f0cecc9$var$wouldSubstitute(_g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $7826f90f6f0cecc9$var$wouldSubstitute(_g, \"rphf\")) {\n        limit += 2;\n        while (limit < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[limit])) limit++;\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha) {\n      limit++;\n      while (limit < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[limit])) limit++;\n      base = start;\n      hasReph = true;\n    }\n    switch (indicConfig.basePos) {\n      case \"Last\":\n        {\n          // starting from the end of the syllable, move backwards\n          var _i22 = end;\n          var seenBelow = false;\n          do {\n            var _info = glyphs[--_i22].shaperInfo;\n            // until a consonant is found\n            if ($7826f90f6f0cecc9$var$isConsonant(glyphs[_i22])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C && (_info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C || seenBelow)) {\n                base = _i22;\n                break;\n              }\n              // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n              if (_info.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C) seenBelow = true;\n              base = _i22;\n            } else if (start < _i22 && _info.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ && glyphs[_i22 - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) break;\n          } while (_i22 > limit);\n          break;\n        }\n      case \"First\":\n        // The first consonant is always the base.\n        base = start;\n        // Mark all subsequent consonants as below.\n        for (var _i23 = base + 1; _i23 < end; _i23++) if ($7826f90f6f0cecc9$var$isConsonant(glyphs[_i23])) glyphs[_i23].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;\n    }\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) hasReph = false;\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n    for (var i1 = start; i1 < base; i1++) {\n      var _info2 = glyphs[i1].shaperInfo;\n      _info2.position = Math.min((0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_C, _info2.position);\n    }\n    if (base < end) glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (var i2 = base + 1; i2 < end; i2++) if (glyphs[i2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n      for (var j = i2 + 1; j < end; j++) if ($7826f90f6f0cecc9$var$isConsonant(glyphs[j])) {\n        glyphs[j].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Final_C;\n        break;\n      }\n      break;\n    }\n    // Handle beginning Ra\n    if (hasReph) glyphs[start].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n      for (var _i24 = base + 1; _i24 < end; _i24++) if (glyphs[_i24].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) {\n        var _j = void 0;\n        for (_j = end - 1; _j > _i24; _j--) {\n          if ($7826f90f6f0cecc9$var$isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) break;\n        }\n        if (glyphs[_j].shaperInfo.category !== (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && _j > _i24) {\n          // Move Halant to after last consonant.\n          var _t = glyphs[_i24];\n          glyphs.splice.apply(glyphs, [_i24, 0].concat(_toConsumableArray(glyphs.splice(_i24 + 1, _j - _i24))));\n          glyphs[_j] = _t;\n        }\n        break;\n      }\n    }\n    // Attach misc marks to previous char to move with them.\n    var lastPos = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Start;\n    for (var i3 = start; i3 < end; i3++) {\n      var _info3 = glyphs[i3].shaperInfo;\n      if (_info3.category & ((0, $90a9d3398ee54fe5$export$bbcd928767338e0d) | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).N | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).RS | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).CM | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc) & _info3.category)) {\n        _info3.position = lastPos;\n        if (_info3.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && _info3.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = i3; _j2 > start; _j2--) if (glyphs[_j2 - 1].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n            _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n            break;\n          }\n        }\n      } else if (_info3.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) lastPos = _info3.position;\n    }\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    var last = base;\n    for (var i4 = base + 1; i4 < end; i4++) {\n      if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i4])) {\n        for (var _j3 = last + 1; _j3 < i4; _j3++) if (glyphs[_j3].shaperInfo.position < (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) glyphs[_j3].shaperInfo.position = glyphs[i4].shaperInfo.position;\n        last = i4;\n      } else if (glyphs[i4].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) last = i4;\n    }\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(_toConsumableArray(arr)));\n    // Find base again\n    for (var i5 = start; i5 < end; i5++) if (glyphs[i5].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) {\n      base = i5;\n      break;\n    }\n    // Setup features now\n    // Reph\n    for (var i6 = start; i6 < end && glyphs[i6].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; i6++) glyphs[i6].features.rphf = true;\n    // Pre-base\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n    for (var i7 = start; i7 < base; i7++) {\n      glyphs[i7].features.half = true;\n      if (blwf) glyphs[i7].features.blwf = true;\n    }\n    // Post-base\n    for (var i8 = base + 1; i8 < end; i8++) {\n      glyphs[i8].features.abvf = true;\n      glyphs[i8].features.pstf = true;\n      glyphs[i8].features.blwf = true;\n    }\n    if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i25 = start; _i25 + 1 < base; _i25++) if (glyphs[_i25].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Ra && glyphs[_i25 + 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && (_i25 + 1 === base || glyphs[_i25 + 2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)) {\n        glyphs[_i25].features.blwf = true;\n        glyphs[_i25 + 1].features.blwf = true;\n      }\n    }\n    var prefLen = 2;\n    if (features.pref && base + prefLen < end)\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var i9 = base + 1; i9 + prefLen - 1 < end; i9++) {\n        var _g2 = [glyphs[i9].copy(), glyphs[i9 + 1].copy()];\n        if ($7826f90f6f0cecc9$var$wouldSubstitute(_g2, \"pref\")) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) glyphs[i9++].features.pref = true;\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) for (; i9 < end; i9++) glyphs[i9].features.cfar = true;\n          break;\n        }\n      }\n    // Apply ZWJ/ZWNJ effects\n    for (var i10 = start + 1; i10 < end; i10++) if ($7826f90f6f0cecc9$var$isJoiner(glyphs[i10])) {\n      var nonJoiner = glyphs[i10].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWNJ;\n      var _j5 = i10;\n      do {\n        _j5--;\n        // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n        // being there, since we don't skip them for the CJCT\n        // feature (ie. F_MANUAL_ZWJ)\n        // A ZWNJ disables HALF.\n        if (nonJoiner) delete glyphs[_j5].features.half;\n      } while (_j5 > start && !$7826f90f6f0cecc9$var$isConsonant(glyphs[_j5]));\n    }\n  }\n}\nfunction $7826f90f6f0cecc9$var$finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  for (var start = 0, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref;\n    // Find base again\n    var base = start;\n    for (; base < end; base++) if (glyphs[base].shaperInfo.position >= (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) {\n      if (tryPref && base + 1 < end) {\n        for (var _i26 = base + 1; _i26 < end; _i26++) if (glyphs[_i26].features.pref) {\n          if (!(glyphs[_i26].substituted && glyphs[_i26].isLigated && !glyphs[_i26].isMultiplied)) {\n            // Ok, this was a 'pref' candidate but didn't form any.\n            // Base is around here...\n            base = _i26;\n            while (base < end && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[base])) base++;\n            glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).BASE_C;\n            tryPref = false;\n          }\n          break;\n        }\n      }\n      // For Malayalam, skip over unformed below- (but NOT post-) forms.\n      if (plan.unicodeScript === \"Malayalam\") for (var _i27 = base + 1; _i27 < end; _i27++) {\n        while (_i27 < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[_i27])) _i27++;\n        if (_i27 === end || !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[_i27])) break;\n        _i27++; // Skip halant.\n        while (_i27 < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[_i27])) _i27++;\n        if (_i27 < end && $7826f90f6f0cecc9$var$isConsonant(glyphs[_i27]) && glyphs[_i27].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C) {\n          base = _i27;\n          glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n        }\n      }\n      if (start < base && glyphs[base].shaperInfo.position > (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) base--;\n      break;\n    }\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ) base--;\n    if (base < end) while (start < base && glyphs[base].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).N | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc))) base--;\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n    if (start + 1 < end && start < base) {\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1;\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc)))) newPos--;\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if ($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M)\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          {\n            if (newPos + 1 < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[newPos + 1])) newPos++;\n          } else newPos = start; // No move.\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i28 = newPos; _i28 > start; _i28--) if (glyphs[_i28 - 1].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n          var oldPos = _i28 - 1;\n          if (oldPos < base && base <= newPos) base--;\n          var tmp = glyphs[oldPos];\n          glyphs.splice.apply(glyphs, [oldPos, 0].concat(_toConsumableArray(glyphs.splice(oldPos + 1, newPos - oldPos))));\n          glyphs[newPos] = tmp;\n          newPos--;\n        }\n      }\n    }\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end && glyphs[start].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && glyphs[start].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false;\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) newRephPos++;\n        if (newRephPos < base && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && $7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n          found = true;\n        }\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main) newRephPos++;\n          found = newRephPos < end;\n        }\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ((0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C | (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post | (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD))) newRephPos++;\n          found = newRephPos < end;\n        }\n      }\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) newRephPos++;\n        if (newRephPos < base && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && $7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n          found = true;\n        }\n      }\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) newRephPos--;\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if ($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i29 = base + 1; _i29 < newRephPos; _i29++) if (glyphs[_i29].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) newRephPos--;\n        }\n      }\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(_toConsumableArray(glyphs.splice(start + 1, newRephPos - start))));\n      glyphs[newRephPos] = reph;\n      if (start < base && base <= newRephPos) base--;\n    }\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (var _i30 = base + 1; _i30 < end; _i30++) if (glyphs[_i30].features.pref) {\n        // 1. Only reorder a glyph produced by substitution during application\n        //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n        //    the feature generally but block it in certain contexts.)\n        // Note: We just check that something got substituted.  We don't check that\n        // the <pref> feature actually did it...\n        //\n        // Reorder pref only if it ligated.\n        if (glyphs[_i30].isLigated && !glyphs[_i30].isMultiplied) {\n          // 2. Try to find a target position the same way as for pre-base matra.\n          //    If it is found, reorder pre-base consonant glyph.\n          //\n          // 3. If position is not found, reorder immediately before main\n          //    consonant.\n          var _newPos = base;\n          // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n          // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n          // We want to position matra after them.\n          if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n            while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc)))) _newPos--;\n            // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n            // split matra, it should be reordered to *before* the left part of such matra.\n            if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n              var _oldPos = _i30;\n              for (var j = base + 1; j < _oldPos; j++) if (glyphs[j].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n                _newPos--;\n                break;\n              }\n            }\n          }\n          if (_newPos > start && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[_newPos - 1]))\n            // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n            {\n              if (_newPos < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[_newPos])) _newPos++;\n            }\n          var _oldPos2 = _i30;\n          var _tmp = glyphs[_oldPos2];\n          glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(_toConsumableArray(glyphs.splice(_newPos, _oldPos2 - _newPos))));\n          glyphs[_newPos] = _tmp;\n          if (_newPos <= base && base < _oldPos2) base++;\n        }\n        break;\n      }\n    }\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M && (!start || !/Cf|Mn/.test((0, $6uUbQ$getCategory)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n  }\n}\nfunction $7826f90f6f0cecc9$var$nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\nvar _ref5 = (0, /*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports)),\n  $7ab494fe977143c6$var$categories = _ref5.categories,\n  $7ab494fe977143c6$var$decompositions = _ref5.decompositions;\nvar $7ab494fe977143c6$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"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\"));\nvar $7ab494fe977143c6$var$stateMachine = new (0, $6uUbQ$dfa)((0, /*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports)));\nvar $7ab494fe977143c6$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref6) {\n  _inherits($7ab494fe977143c6$export$2e2bcd8739ae039, _ref6);\n  var _super8 = _createSuper($7ab494fe977143c6$export$2e2bcd8739ae039);\n  function $7ab494fe977143c6$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $7ab494fe977143c6$export$2e2bcd8739ae039);\n    return _super8.apply(this, arguments);\n  }\n  _createClass($7ab494fe977143c6$export$2e2bcd8739ae039, null, [{\n    key: \"planFeatures\",\n    value: function planFeatures(plan) {\n      plan.addStage($7ab494fe977143c6$var$setupSyllables);\n      // Default glyph pre-processing group\n      plan.addStage([\"locl\", \"ccmp\", \"nukt\", \"akhn\"]);\n      // Reordering group\n      plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);\n      plan.addStage([\"rphf\"], false);\n      plan.addStage($7ab494fe977143c6$var$recordRphf);\n      plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);\n      plan.addStage([\"pref\"]);\n      plan.addStage($7ab494fe977143c6$var$recordPref);\n      // Orthographic unit shaping group\n      plan.addStage([\"rkrf\", \"abvf\", \"blwf\", \"half\", \"pstf\", \"vatu\", \"cjct\"]);\n      plan.addStage($7ab494fe977143c6$var$reorder);\n      // Topographical features\n      // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n      // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n      // Standard topographic presentation and positional feature application\n      plan.addStage([\"abvs\", \"blws\", \"pres\", \"psts\", \"dist\", \"abvm\", \"blwm\"]);\n    }\n  }, {\n    key: \"assignFeatures\",\n    value: function assignFeatures(plan, glyphs) {\n      var _loop2 = function _loop2(_i31) {\n        var codepoint = glyphs[_i31].codePoints[0];\n        if ($7ab494fe977143c6$var$decompositions[codepoint]) {\n          var decomposed = $7ab494fe977143c6$var$decompositions[codepoint].map(function (c) {\n            var g = plan.font.glyphForCodePoint(c);\n            return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font, g.id, [c], glyphs[_i31].features);\n          });\n          glyphs.splice.apply(glyphs, [_i31, 1].concat(_toConsumableArray(decomposed)));\n        }\n      };\n      // Decompose split vowels\n      // TODO: do this in a more general unicode normalizer\n      for (var _i31 = glyphs.length - 1; _i31 >= 0; _i31--) {\n        _loop2(_i31);\n      }\n    }\n  }]);\n  return $7ab494fe977143c6$export$2e2bcd8739ae039;\n}((0, $649970d87335b30f$export$2e2bcd8739ae039));\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($7ab494fe977143c6$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\nfunction $7ab494fe977143c6$var$useCategory(glyph) {\n  return $7ab494fe977143c6$var$trie.get(glyph.codePoints[0]);\n}\nvar $7ab494fe977143c6$var$USEInfo = /*#__PURE__*/_createClass(function $7ab494fe977143c6$var$USEInfo(category, syllableType, syllable) {\n  _classCallCheck(this, $7ab494fe977143c6$var$USEInfo);\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n});\nfunction $7ab494fe977143c6$var$setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var _iterator55 = _createForOfIteratorHelper($7ab494fe977143c6$var$stateMachine.match(glyphs.map($7ab494fe977143c6$var$useCategory))),\n    _step55;\n  try {\n    for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n      var _step55$value = _slicedToArray(_step55.value, 3),\n        start = _step55$value[0],\n        end = _step55$value[1],\n        tags = _step55$value[2];\n      ++syllable;\n      // Create shaper info\n      for (var _i32 = start; _i32 <= end; _i32++) glyphs[_i32].shaperInfo = new $7ab494fe977143c6$var$USEInfo($7ab494fe977143c6$var$categories[$7ab494fe977143c6$var$useCategory(glyphs[_i32])], tags[0], syllable);\n      // Assign rphf feature\n      var limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n      for (var i1 = start; i1 < start + limit; i1++) glyphs[i1].features.rphf = true;\n    }\n  } catch (err) {\n    _iterator55.e(err);\n  } finally {\n    _iterator55.f();\n  }\n}\nfunction $7ab494fe977143c6$var$clearSubstitutionFlags(font, glyphs) {\n  var _iterator56 = _createForOfIteratorHelper(glyphs),\n    _step56;\n  try {\n    for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n      var glyph = _step56.value;\n      glyph.substituted = false;\n    }\n  } catch (err) {\n    _iterator56.e(err);\n  } finally {\n    _iterator56.f();\n  }\n}\nfunction $7ab494fe977143c6$var$recordRphf(font, glyphs) {\n  var _iterator57 = _createForOfIteratorHelper(glyphs),\n    _step57;\n  try {\n    for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n      var glyph = _step57.value;\n      if (glyph.substituted && glyph.features.rphf)\n        // Mark a substituted repha.\n        glyph.shaperInfo.category = \"R\";\n    }\n  } catch (err) {\n    _iterator57.e(err);\n  } finally {\n    _iterator57.f();\n  }\n}\nfunction $7ab494fe977143c6$var$recordPref(font, glyphs) {\n  var _iterator58 = _createForOfIteratorHelper(glyphs),\n    _step58;\n  try {\n    for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n      var glyph = _step58.value;\n      if (glyph.substituted)\n        // Mark a substituted pref as VPre, as they behave the same way.\n        glyph.shaperInfo.category = \"VPre\";\n    }\n  } catch (err) {\n    _iterator58.e(err);\n  } finally {\n    _iterator58.f();\n  }\n}\nfunction $7ab494fe977143c6$var$reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  for (var start = 0, end = $7ab494fe977143c6$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7ab494fe977143c6$var$nextSyllable(glyphs, start)) {\n    var _i33 = void 0,\n      j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType;\n    // Only a few syllable types need reordering.\n    if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue;\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === \"broken_cluster\" && dottedCircle) {\n      var g = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n      // Insert after possible Repha.\n      for (_i33 = start; _i33 < end && glyphs[_i33].shaperInfo.category === \"R\"; _i33++);\n      glyphs.splice(++_i33, 0, g);\n      end++;\n    }\n    // Move things forward.\n    if (info.category === \"R\" && end - start > 1)\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (_i33 = start + 1; _i33 < end; _i33++) {\n        info = glyphs[_i33].shaperInfo;\n        if ($7ab494fe977143c6$var$isBase(info) || $7ab494fe977143c6$var$isHalant(glyphs[_i33])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if ($7ab494fe977143c6$var$isHalant(glyphs[_i33])) _i33--;\n          glyphs.splice.apply(glyphs, [start, 0].concat(_toConsumableArray(glyphs.splice(start + 1, _i33 - start)), [glyphs[_i33]]));\n          break;\n        }\n      }\n    // Move things back.\n    for (_i33 = start, j = end; _i33 < end; _i33++) {\n      info = glyphs[_i33].shaperInfo;\n      if ($7ab494fe977143c6$var$isBase(info) || $7ab494fe977143c6$var$isHalant(glyphs[_i33]))\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = $7ab494fe977143c6$var$isHalant(glyphs[_i33]) ? _i33 + 1 : _i33;else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < _i33) glyphs.splice.apply(glyphs, [j, 1, glyphs[_i33]].concat(_toConsumableArray(glyphs.splice(j, _i33 - j))));\n    }\n  }\n}\nfunction $7ab494fe977143c6$var$nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\nfunction $7ab494fe977143c6$var$isHalant(glyph) {\n  return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\nfunction $7ab494fe977143c6$var$isBase(info) {\n  return info.category === \"B\" || info.category === \"GB\";\n}\nvar $102b6fe50f1d50b4$var$SHAPERS = {\n  arab: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  mong: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  syrc: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  \"nko \": (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  phag: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  mand: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  mani: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  phlp: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  hang: (0, $e1c6bbc8cb416f8c$export$2e2bcd8739ae039),\n  bng2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  beng: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  dev2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  deva: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  gjr2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  gujr: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  guru: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  gur2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  knda: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  knd2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  mlm2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  mlym: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  ory2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  orya: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  taml: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  tml2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  telu: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  tel2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  khmr: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  bali: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  batk: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  brah: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  bugi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  buhd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  cakm: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  cham: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  dupl: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  egyp: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  gran: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  hano: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  java: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  kthi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  kali: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  khar: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  khoj: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sind: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  lepc: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  limb: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  mahj: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  modi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  saur: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  shrd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sidd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sinh: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  sund: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sylo: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tglg: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tagb: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tale: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  lana: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tavt: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  takr: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tibt: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tfng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tirh: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  latn: (0, $649970d87335b30f$export$2e2bcd8739ae039),\n  DFLT: (0, $649970d87335b30f$export$2e2bcd8739ae039 // Default\n  )\n};\n\nfunction $102b6fe50f1d50b4$export$7877a478dd30fd3d(script) {\n  if (!Array.isArray(script)) script = [script];\n  var _iterator59 = _createForOfIteratorHelper(script),\n    _step59;\n  try {\n    for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n      var s = _step59.value;\n      var shaper = $102b6fe50f1d50b4$var$SHAPERS[s];\n      if (shaper) return shaper;\n    }\n  } catch (err) {\n    _iterator59.e(err);\n  } finally {\n    _iterator59.f();\n  }\n  return 0, $649970d87335b30f$export$2e2bcd8739ae039;\n}\nvar $0a876c45f1f7c41c$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref7) {\n  _inherits($0a876c45f1f7c41c$export$2e2bcd8739ae039, _ref7);\n  var _super9 = _createSuper($0a876c45f1f7c41c$export$2e2bcd8739ae039);\n  function $0a876c45f1f7c41c$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $0a876c45f1f7c41c$export$2e2bcd8739ae039);\n    return _super9.apply(this, arguments);\n  }\n  _createClass($0a876c45f1f7c41c$export$2e2bcd8739ae039, [{\n    key: \"applyLookup\",\n    value: function applyLookup(lookupType, table) {\n      var _this7 = this;\n      switch (lookupType) {\n        case 1:\n          {\n            var index = this.coverageIndex(table.coverage);\n            if (index === -1) return false;\n            var glyph = this.glyphIterator.cur;\n            switch (table.version) {\n              case 1:\n                glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n                break;\n              case 2:\n                glyph.id = table.substitute.get(index);\n                break;\n            }\n            return true;\n          }\n        case 2:\n          {\n            var _index = this.coverageIndex(table.coverage);\n            if (_index !== -1) {\n              var _this$glyphs2;\n              var sequence = table.sequences.get(_index);\n              if (sequence.length === 0) {\n                // If the sequence length is zero, delete the glyph.\n                // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n                this.glyphs.splice(this.glyphIterator.index, 1);\n                return true;\n              }\n              this.glyphIterator.cur.id = sequence[0];\n              this.glyphIterator.cur.ligatureComponent = 0;\n              var features = this.glyphIterator.cur.features;\n              var curGlyph = this.glyphIterator.cur;\n              var replacement = sequence.slice(1).map(function (gid, i) {\n                var glyph = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(_this7.font, gid, undefined, features);\n                glyph.shaperInfo = curGlyph.shaperInfo;\n                glyph.isLigated = curGlyph.isLigated;\n                glyph.ligatureComponent = i + 1;\n                glyph.substituted = true;\n                glyph.isMultiplied = true;\n                return glyph;\n              });\n              (_this$glyphs2 = this.glyphs).splice.apply(_this$glyphs2, [this.glyphIterator.index + 1, 0].concat(_toConsumableArray(replacement)));\n              return true;\n            }\n            return false;\n          }\n        case 3:\n          {\n            var _index2 = this.coverageIndex(table.coverage);\n            if (_index2 !== -1) {\n              var USER_INDEX = 0; // TODO\n              this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n              return true;\n            }\n            return false;\n          }\n        case 4:\n          {\n            var _index3 = this.coverageIndex(table.coverage);\n            if (_index3 === -1) return false;\n            var _iterator60 = _createForOfIteratorHelper(table.ligatureSets.get(_index3)),\n              _step60;\n            try {\n              for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n                var ligature = _step60.value;\n                var matched = this.sequenceMatchIndices(1, ligature.components);\n                if (!matched) continue;\n                var _curGlyph = this.glyphIterator.cur;\n                // Concatenate all of the characters the new ligature will represent\n                var characters = _curGlyph.codePoints.slice();\n                var _iterator61 = _createForOfIteratorHelper(matched),\n                  _step61;\n                try {\n                  for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n                    var _index4 = _step61.value;\n                    characters.push.apply(characters, _toConsumableArray(this.glyphs[_index4].codePoints));\n                  }\n                  // Create the replacement ligature glyph\n                } catch (err) {\n                  _iterator61.e(err);\n                } finally {\n                  _iterator61.f();\n                }\n                var ligatureGlyph = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, ligature.glyph, characters, _curGlyph.features);\n                ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n                ligatureGlyph.isLigated = true;\n                ligatureGlyph.substituted = true;\n                // From Harfbuzz:\n                // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n                //   the ligature to keep its old ligature id.  This will allow it to attach to\n                //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n                //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n                //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n                //   later, we don't want them to lose their ligature id/component, otherwise\n                //   GPOS will fail to correctly position the mark ligature on top of the\n                //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n                //\n                // - If a ligature is formed of components that some of which are also ligatures\n                //   themselves, and those ligature components had marks attached to *their*\n                //   components, we have to attach the marks to the new ligature component\n                //   positions!  Now *that*'s tricky!  And these marks may be following the\n                //   last component of the whole sequence, so we should loop forward looking\n                //   for them and update them.\n                //\n                //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n                //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n                //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n                //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n                //   the new ligature with a component value of 2.\n                //\n                //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n                var isMarkLigature = _curGlyph.isMark;\n                for (var _i34 = 0; _i34 < matched.length && isMarkLigature; _i34++) isMarkLigature = this.glyphs[matched[_i34]].isMark;\n                ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n                var lastLigID = _curGlyph.ligatureID;\n                var lastNumComps = _curGlyph.codePoints.length;\n                var curComps = lastNumComps;\n                var idx = this.glyphIterator.index + 1;\n                // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n                // This allows GPOS to attach marks to the correct ligature components.\n                var _iterator62 = _createForOfIteratorHelper(matched),\n                  _step62;\n                try {\n                  for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n                    var matchIndex = _step62.value;\n                    // Don't assign new ligature components for mark ligatures (see above)\n                    if (isMarkLigature) idx = matchIndex;else while (idx < matchIndex) {\n                      var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                      this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                      this.glyphs[idx].ligatureComponent = ligatureComponent;\n                      idx++;\n                    }\n                    lastLigID = this.glyphs[idx].ligatureID;\n                    lastNumComps = this.glyphs[idx].codePoints.length;\n                    curComps += lastNumComps;\n                    idx++; // skip base glyph\n                  }\n                  // Adjust ligature components for any marks following\n                } catch (err) {\n                  _iterator62.e(err);\n                } finally {\n                  _iterator62.f();\n                }\n                if (lastLigID && !isMarkLigature) for (var i1 = idx; i1 < this.glyphs.length; i1++) {\n                  if (this.glyphs[i1].ligatureID === lastLigID) {\n                    var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                    this.glyphs[i1].ligatureComponent = ligatureComponent;\n                  } else break;\n                }\n                // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n                for (var i2 = matched.length - 1; i2 >= 0; i2--) this.glyphs.splice(matched[i2], 1);\n                this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n                return true;\n              }\n            } catch (err) {\n              _iterator60.e(err);\n            } finally {\n              _iterator60.f();\n            }\n            return false;\n          }\n        case 5:\n          return this.applyContext(table);\n        case 6:\n          return this.applyChainingContext(table);\n        case 7:\n          return this.applyLookup(table.lookupType, table.extension);\n        default:\n          throw new Error(\"GSUB lookupType \".concat(lookupType, \" is not supported\"));\n      }\n    }\n  }]);\n  return $0a876c45f1f7c41c$export$2e2bcd8739ae039;\n}((0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039));\nvar $c96c93587d49c14d$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref8) {\n  _inherits($c96c93587d49c14d$export$2e2bcd8739ae039, _ref8);\n  var _super10 = _createSuper($c96c93587d49c14d$export$2e2bcd8739ae039);\n  function $c96c93587d49c14d$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $c96c93587d49c14d$export$2e2bcd8739ae039);\n    return _super10.apply(this, arguments);\n  }\n  _createClass($c96c93587d49c14d$export$2e2bcd8739ae039, [{\n    key: \"applyPositionValue\",\n    value: function applyPositionValue(sequenceIndex, value) {\n      var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n      if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n      if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n      if (value.xPlacement != null) position.xOffset += value.xPlacement;\n      if (value.yPlacement != null) position.yOffset += value.yPlacement;\n      // Adjustments for font variations\n      var variationProcessor = this.font._variationProcessor;\n      var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n      if (variationProcessor && variationStore) {\n        if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n        if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n        if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n        if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n      // TODO: device tables\n    }\n  }, {\n    key: \"applyLookup\",\n    value: function applyLookup(lookupType, table) {\n      switch (lookupType) {\n        case 1:\n          {\n            var index = this.coverageIndex(table.coverage);\n            if (index === -1) return false;\n            switch (table.version) {\n              case 1:\n                this.applyPositionValue(0, table.value);\n                break;\n              case 2:\n                this.applyPositionValue(0, table.values.get(index));\n                break;\n            }\n            return true;\n          }\n        case 2:\n          {\n            var nextGlyph = this.glyphIterator.peek();\n            if (!nextGlyph) return false;\n            var _index5 = this.coverageIndex(table.coverage);\n            if (_index5 === -1) return false;\n            switch (table.version) {\n              case 1:\n                var set = table.pairSets.get(_index5);\n                var _iterator63 = _createForOfIteratorHelper(set),\n                  _step63;\n                try {\n                  for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n                    var pair = _step63.value;\n                    if (pair.secondGlyph === nextGlyph.id) {\n                      this.applyPositionValue(0, pair.value1);\n                      this.applyPositionValue(1, pair.value2);\n                      return true;\n                    }\n                  }\n                } catch (err) {\n                  _iterator63.e(err);\n                } finally {\n                  _iterator63.f();\n                }\n                return false;\n              case 2:\n                var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n                var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n                if (class1 === -1 || class2 === -1) return false;\n                var pair1 = table.classRecords.get(class1).get(class2);\n                this.applyPositionValue(0, pair1.value1);\n                this.applyPositionValue(1, pair1.value2);\n                return true;\n            }\n          }\n        case 3:\n          {\n            var nextIndex = this.glyphIterator.peekIndex();\n            var _nextGlyph = this.glyphs[nextIndex];\n            if (!_nextGlyph) return false;\n            var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n            if (!curRecord || !curRecord.exitAnchor) return false;\n            var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n            if (!nextRecord || !nextRecord.entryAnchor) return false;\n            var entry = this.getAnchor(nextRecord.entryAnchor);\n            var exit = this.getAnchor(curRecord.exitAnchor);\n            var cur = this.positions[this.glyphIterator.index];\n            var next = this.positions[nextIndex];\n            var d;\n            switch (this.direction) {\n              case \"ltr\":\n                cur.xAdvance = exit.x + cur.xOffset;\n                d = entry.x + next.xOffset;\n                next.xAdvance -= d;\n                next.xOffset -= d;\n                break;\n              case \"rtl\":\n                d = exit.x + cur.xOffset;\n                cur.xAdvance -= d;\n                cur.xOffset -= d;\n                next.xAdvance = entry.x + next.xOffset;\n                break;\n            }\n            if (this.glyphIterator.flags.rightToLeft) {\n              this.glyphIterator.cur.cursiveAttachment = nextIndex;\n              cur.yOffset = entry.y - exit.y;\n            } else {\n              _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n              cur.yOffset = exit.y - entry.y;\n            }\n            return true;\n          }\n        case 4:\n          {\n            var markIndex = this.coverageIndex(table.markCoverage);\n            if (markIndex === -1) return false;\n            // search backward for a base glyph\n            var baseGlyphIndex = this.glyphIterator.index;\n            while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n            if (baseGlyphIndex < 0) return false;\n            var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n            if (baseIndex === -1) return false;\n            var markRecord = table.markArray[markIndex];\n            var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n            this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n            return true;\n          }\n        case 5:\n          {\n            var _markIndex = this.coverageIndex(table.markCoverage);\n            if (_markIndex === -1) return false;\n            // search backward for a base glyph\n            var _baseGlyphIndex = this.glyphIterator.index;\n            while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark);\n            if (_baseGlyphIndex < 0) return false;\n            var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n            if (ligIndex === -1) return false;\n            var ligAttach = table.ligatureArray[ligIndex];\n            var markGlyph = this.glyphIterator.cur;\n            var ligGlyph = this.glyphs[_baseGlyphIndex];\n            var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n            var _markRecord = table.markArray[_markIndex];\n            var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n            this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n            return true;\n          }\n        case 6:\n          {\n            var mark1Index = this.coverageIndex(table.mark1Coverage);\n            if (mark1Index === -1) return false;\n            // get the previous mark to attach to\n            var prevIndex = this.glyphIterator.peekIndex(-1);\n            var prev = this.glyphs[prevIndex];\n            if (!prev || !prev.isMark) return false;\n            var _cur = this.glyphIterator.cur;\n            // The following logic was borrowed from Harfbuzz\n            var good = false;\n            if (_cur.ligatureID === prev.ligatureID) {\n              if (!_cur.ligatureID) good = true;else if (_cur.ligatureComponent === prev.ligatureComponent) good = true;\n            } else\n              // If ligature ids don't match, it may be the case that one of the marks\n              // itself is a ligature, in which case match.\n              if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n            if (!good) return false;\n            var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n            if (mark2Index === -1) return false;\n            var _markRecord2 = table.mark1Array[mark1Index];\n            var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n            this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n            return true;\n          }\n        case 7:\n          return this.applyContext(table);\n        case 8:\n          return this.applyChainingContext(table);\n        case 9:\n          return this.applyLookup(table.lookupType, table.extension);\n        default:\n          throw new Error(\"Unsupported GPOS table: \".concat(lookupType));\n      }\n    }\n  }, {\n    key: \"applyAnchor\",\n    value: function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n      var baseCoords = this.getAnchor(baseAnchor);\n      var markCoords = this.getAnchor(markRecord.markAnchor);\n      var basePos = this.positions[baseGlyphIndex];\n      var markPos = this.positions[this.glyphIterator.index];\n      markPos.xOffset = baseCoords.x - markCoords.x;\n      markPos.yOffset = baseCoords.y - markCoords.y;\n      this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n    }\n  }, {\n    key: \"getAnchor\",\n    value: function getAnchor(anchor) {\n      // TODO: contour point, device tables\n      var x = anchor.xCoordinate;\n      var y = anchor.yCoordinate;\n      // Adjustments for font variations\n      var variationProcessor = this.font._variationProcessor;\n      var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n      if (variationProcessor && variationStore) {\n        if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n        if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"applyFeatures\",\n    value: function applyFeatures(userFeatures, glyphs, advances) {\n      _get(_getPrototypeOf($c96c93587d49c14d$export$2e2bcd8739ae039.prototype), \"applyFeatures\", this).call(this, userFeatures, glyphs, advances);\n      for (var i = 0; i < this.glyphs.length; i++) this.fixCursiveAttachment(i);\n      this.fixMarkAttachment();\n    }\n  }, {\n    key: \"fixCursiveAttachment\",\n    value: function fixCursiveAttachment(i) {\n      var glyph = this.glyphs[i];\n      if (glyph.cursiveAttachment != null) {\n        var j = glyph.cursiveAttachment;\n        glyph.cursiveAttachment = null;\n        this.fixCursiveAttachment(j);\n        this.positions[i].yOffset += this.positions[j].yOffset;\n      }\n    }\n  }, {\n    key: \"fixMarkAttachment\",\n    value: function fixMarkAttachment() {\n      for (var _i35 = 0; _i35 < this.glyphs.length; _i35++) {\n        var glyph = this.glyphs[_i35];\n        if (glyph.markAttachment != null) {\n          var j = glyph.markAttachment;\n          this.positions[_i35].xOffset += this.positions[j].xOffset;\n          this.positions[_i35].yOffset += this.positions[j].yOffset;\n          if (this.direction === \"ltr\") for (var k = j; k < _i35; k++) {\n            this.positions[_i35].xOffset -= this.positions[k].xAdvance;\n            this.positions[_i35].yOffset -= this.positions[k].yAdvance;\n          } else for (var k1 = j + 1; k1 < _i35 + 1; k1++) {\n            this.positions[_i35].xOffset += this.positions[k1].xAdvance;\n            this.positions[_i35].yOffset += this.positions[k1].yAdvance;\n          }\n        }\n      }\n    }\n  }]);\n  return $c96c93587d49c14d$export$2e2bcd8739ae039;\n}((0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039));\nvar $a62492810de27e3d$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $a62492810de27e3d$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $a62492810de27e3d$export$2e2bcd8739ae039);\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n    if (font.GSUB) this.GSUBProcessor = new (0, $0a876c45f1f7c41c$export$2e2bcd8739ae039)(font, font.GSUB);\n    if (font.GPOS) this.GPOSProcessor = new (0, $c96c93587d49c14d$export$2e2bcd8739ae039)(font, font.GPOS);\n  }\n  _createClass($a62492810de27e3d$export$2e2bcd8739ae039, [{\n    key: \"setup\",\n    value: function setup(glyphRun) {\n      var _this8 = this;\n      // Map glyphs to GlyphInfo objects so data can be passed between\n      // GSUB and GPOS without mutating the real (shared) Glyph objects.\n      this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n        return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(_this8.font, glyph.id, _toConsumableArray(glyph.codePoints));\n      });\n      // Select a script based on what is available in GSUB/GPOS.\n      var script = null;\n      if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n      if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n      // Choose a shaper based on the script, and setup a shaping plan.\n      // This determines which features to apply to which glyphs.\n      this.shaper = $102b6fe50f1d50b4$export$7877a478dd30fd3d(script);\n      this.plan = new (0, $94d7a73bd2edfc9a$export$2e2bcd8739ae039)(this.font, script, glyphRun.direction);\n      this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n      // Assign chosen features to output glyph run\n      for (var key in this.plan.allFeatures) glyphRun.features[key] = true;\n    }\n  }, {\n    key: \"substitute\",\n    value: function substitute(glyphRun) {\n      var _this9 = this;\n      if (this.GSUBProcessor) {\n        this.plan.process(this.GSUBProcessor, this.glyphInfos);\n        // Map glyph infos back to normal Glyph objects\n        glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n          return _this9.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n        });\n      }\n    }\n  }, {\n    key: \"position\",\n    value: function position(glyphRun) {\n      if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n      if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n      if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n      // Reverse the glyphs and positions if the script is right-to-left\n      if (glyphRun.direction === \"rtl\") {\n        glyphRun.glyphs.reverse();\n        glyphRun.positions.reverse();\n      }\n      return this.GPOSProcessor && this.GPOSProcessor.features;\n    }\n  }, {\n    key: \"zeroMarkAdvances\",\n    value: function zeroMarkAdvances(positions) {\n      for (var _i36 = 0; _i36 < this.glyphInfos.length; _i36++) if (this.glyphInfos[_i36].isMark) {\n        positions[_i36].xAdvance = 0;\n        positions[_i36].yAdvance = 0;\n      }\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      this.glyphInfos = null;\n      this.plan = null;\n      this.shaper = null;\n    }\n  }, {\n    key: \"getAvailableFeatures\",\n    value: function getAvailableFeatures(script, language) {\n      var features = [];\n      if (this.GSUBProcessor) {\n        this.GSUBProcessor.selectScript(script, language);\n        features.push.apply(features, _toConsumableArray(Object.keys(this.GSUBProcessor.features)));\n      }\n      if (this.GPOSProcessor) {\n        this.GPOSProcessor.selectScript(script, language);\n        features.push.apply(features, _toConsumableArray(Object.keys(this.GPOSProcessor.features)));\n      }\n      return features;\n    }\n  }]);\n  return $a62492810de27e3d$export$2e2bcd8739ae039;\n}();\nvar $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039);\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) this.engine = new (0, $ba6dd74203be8728$export$2e2bcd8739ae039)(this.font);else if (this.font.GSUB || this.font.GPOS) this.engine = new (0, $a62492810de27e3d$export$2e2bcd8739ae039)(this.font);\n  }\n  _createClass($4c0a7fa5df7a9ab1$export$2e2bcd8739ae039, [{\n    key: \"layout\",\n    value: function layout(string, features, script, language, direction) {\n      // Make the features parameter optional\n      if (typeof features === \"string\") {\n        direction = language;\n        language = script;\n        script = features;\n        features = [];\n      }\n      // Map string to glyphs if needed\n      if (typeof string === \"string\") {\n        // Attempt to detect the script from the string if not provided.\n        if (script == null) script = $130d1a642ebcd2b7$export$e5cb25e204fb8450(string);\n        var glyphs = this.font.glyphsForString(string);\n      } else {\n        // Attempt to detect the script from the glyph code points if not provided.\n        if (script == null) {\n          var codePoints = [];\n          var _iterator64 = _createForOfIteratorHelper(string),\n            _step64;\n          try {\n            for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n              var glyph = _step64.value;\n              codePoints.push.apply(codePoints, _toConsumableArray(glyph.codePoints));\n            }\n          } catch (err) {\n            _iterator64.e(err);\n          } finally {\n            _iterator64.f();\n          }\n          script = $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints);\n        }\n        var glyphs = string;\n      }\n      var glyphRun = new (0, $be07b3e97a42687a$export$2e2bcd8739ae039)(glyphs, features, script, language, direction);\n      // Return early if there are no glyphs\n      if (glyphs.length === 0) {\n        glyphRun.positions = [];\n        return glyphRun;\n      }\n      // Setup the advanced layout engine\n      if (this.engine && this.engine.setup) this.engine.setup(glyphRun);\n      // Substitute and position the glyphs\n      this.substitute(glyphRun);\n      this.position(glyphRun);\n      this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n      // Let the layout engine clean up any state it might have\n      if (this.engine && this.engine.cleanup) this.engine.cleanup();\n      return glyphRun;\n    }\n  }, {\n    key: \"substitute\",\n    value: function substitute(glyphRun) {\n      // Call the advanced layout engine to make substitutions\n      if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n    }\n  }, {\n    key: \"position\",\n    value: function position(glyphRun) {\n      // Get initial glyph positions\n      glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n        return new (0, $1ac75d9a55b67f01$export$2e2bcd8739ae039)(glyph.advanceWidth);\n      });\n      var positioned = null;\n      // Call the advanced layout engine. Returns the features applied.\n      if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);\n      // if there is no GPOS table, use unicode properties to position marks.\n      if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n        if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new (0, $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039)(this.font);\n        this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n      }\n      // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n      if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n        if (!this.kernProcessor) this.kernProcessor = new (0, $0bba3a9db57637f3$export$2e2bcd8739ae039)(this.font);\n        this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n        glyphRun.features.kern = true;\n      }\n    }\n  }, {\n    key: \"hideDefaultIgnorables\",\n    value: function hideDefaultIgnorables(glyphs, positions) {\n      var space = this.font.glyphForCodePoint(0x20);\n      for (var _i37 = 0; _i37 < glyphs.length; _i37++) if (this.isDefaultIgnorable(glyphs[_i37].codePoints[0])) {\n        glyphs[_i37] = space;\n        positions[_i37].xAdvance = 0;\n        positions[_i37].yAdvance = 0;\n      }\n    }\n  }, {\n    key: \"isDefaultIgnorable\",\n    value: function isDefaultIgnorable(ch) {\n      // From DerivedCoreProperties.txt in the Unicode database,\n      // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n      // Harfbuzz and Uniscribe do.\n      var plane = ch >> 16;\n      if (plane === 0)\n        // BMP\n        switch (ch >> 8) {\n          case 0x00:\n            return ch === 0x00AD;\n          case 0x03:\n            return ch === 0x034F;\n          case 0x06:\n            return ch === 0x061C;\n          case 0x17:\n            return 0x17B4 <= ch && ch <= 0x17B5;\n          case 0x18:\n            return 0x180B <= ch && ch <= 0x180E;\n          case 0x20:\n            return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n          case 0xFE:\n            return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n          case 0xFF:\n            return 0xFFF0 <= ch && ch <= 0xFFF8;\n          default:\n            return false;\n        } else\n        // Other planes\n        switch (plane) {\n          case 0x01:\n            return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n          case 0x0E:\n            return 0xE0000 <= ch && ch <= 0xE0FFF;\n          default:\n            return false;\n        }\n    }\n  }, {\n    key: \"getAvailableFeatures\",\n    value: function getAvailableFeatures(script, language) {\n      var features = [];\n      if (this.engine) features.push.apply(features, _toConsumableArray(this.engine.getAvailableFeatures(script, language)));\n      if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n      return features;\n    }\n  }, {\n    key: \"stringsForGlyph\",\n    value: function stringsForGlyph(gid) {\n      var result = new Set();\n      var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n      var _iterator65 = _createForOfIteratorHelper(codePoints),\n        _step65;\n      try {\n        for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n          var codePoint = _step65.value;\n          result.add(String.fromCodePoint(codePoint));\n        }\n      } catch (err) {\n        _iterator65.e(err);\n      } finally {\n        _iterator65.f();\n      }\n      if (this.engine && this.engine.stringsForGlyph) {\n        var _iterator66 = _createForOfIteratorHelper(this.engine.stringsForGlyph(gid)),\n          _step66;\n        try {\n          for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n            var string = _step66.value;\n            result.add(string);\n          }\n        } catch (err) {\n          _iterator66.e(err);\n        } finally {\n          _iterator66.f();\n        }\n      }\n      return Array.from(result);\n    }\n  }]);\n  return $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039;\n}();\nvar $f43aec954cdfdf21$var$SVG_COMMANDS = {\n  moveTo: \"M\",\n  lineTo: \"L\",\n  quadraticCurveTo: \"Q\",\n  bezierCurveTo: \"C\",\n  closePath: \"Z\"\n};\nvar $f43aec954cdfdf21$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $f43aec954cdfdf21$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $f43aec954cdfdf21$export$2e2bcd8739ae039);\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  _createClass($f43aec954cdfdf21$export$2e2bcd8739ae039, [{\n    key: \"toFunction\",\n    value:\n    /**\n    * Compiles the path to a JavaScript function that can be applied with\n    * a graphics context in order to render the path.\n    * @return {string}\n    */\n    function toFunction() {\n      var _this10 = this;\n      return function (ctx) {\n        _this10.commands.forEach(function (c) {\n          return ctx[c.command].apply(ctx, c.args);\n        });\n      };\n    }\n    /**\n    * Converts the path to an SVG path data string\n    * @return {string}\n    */\n  }, {\n    key: \"toSVG\",\n    value: function toSVG() {\n      var cmds = this.commands.map(function (c) {\n        var args = c.args.map(function (arg) {\n          return Math.round(arg * 100) / 100;\n        });\n        return \"\".concat($f43aec954cdfdf21$var$SVG_COMMANDS[c.command]).concat(args.join(\" \"));\n      });\n      return cmds.join(\"\");\n    }\n    /**\n    * Gets the \"control box\" of a path.\n    * This is like the bounding box, but it includes all points including\n    * control points of bezier segments and is much faster to compute than\n    * the real bounding box.\n    * @type {BBox}\n    */\n  }, {\n    key: \"cbox\",\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n        var _iterator67 = _createForOfIteratorHelper(this.commands),\n          _step67;\n        try {\n          for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n            var command1 = _step67.value;\n            for (var _i38 = 0; _i38 < command1.args.length; _i38 += 2) cbox.addPoint(command1.args[_i38], command1.args[_i38 + 1]);\n          }\n        } catch (err) {\n          _iterator67.e(err);\n        } finally {\n          _iterator67.f();\n        }\n        this._cbox = Object.freeze(cbox);\n      }\n      return this._cbox;\n    }\n    /**\n    * Gets the exact bounding box of the path by evaluating curve segments.\n    * Slower to compute than the control box, but more accurate.\n    * @type {BBox}\n    */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      if (this._bbox) return this._bbox;\n      var bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n      var cx = 0,\n        cy = 0;\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n      var _iterator68 = _createForOfIteratorHelper(this.commands),\n        _step68;\n      try {\n        for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n          var c = _step68.value;\n          switch (c.command) {\n            case \"moveTo\":\n            case \"lineTo\":\n              var _c$args = _slicedToArray(c.args, 2),\n                x = _c$args[0],\n                y = _c$args[1];\n              bbox.addPoint(x, y);\n              cx = x;\n              cy = y;\n              break;\n            case \"quadraticCurveTo\":\n            case \"bezierCurveTo\":\n              if (c.command === \"quadraticCurveTo\") {\n                // http://fontforge.org/bezier.html\n                var _c$args2 = _slicedToArray(c.args, 4),\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n                var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n                var cp1y = cy + 2 / 3 * (qp1y - cy);\n                var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n                var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n              } else var _c$args3 = _slicedToArray(c.args, 6),\n                cp1x = _c$args3[0],\n                cp1y = _c$args3[1],\n                cp2x = _c$args3[2],\n                cp2y = _c$args3[3],\n                p3x = _c$args3[4],\n                p3y = _c$args3[5];\n              // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n              bbox.addPoint(p3x, p3y);\n              var p0 = [cx, cy];\n              var p1 = [cp1x, cp1y];\n              var p2 = [cp2x, cp2y];\n              var p3 = [p3x, p3y];\n              for (var i = 0; i <= 1; i++) {\n                var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                c = 3 * p1[i] - 3 * p0[i];\n                if (a === 0) {\n                  if (b === 0) continue;\n                  var _t2 = -c / b;\n                  if (0 < _t2 && _t2 < 1) {\n                    if (i === 0) bbox.addPoint(f(_t2), bbox.maxY);else if (i === 1) bbox.addPoint(bbox.maxX, f(_t2));\n                  }\n                  continue;\n                }\n                var b2ac = Math.pow(b, 2) - 4 * c * a;\n                if (b2ac < 0) continue;\n                var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                if (0 < t1 && t1 < 1) {\n                  if (i === 0) bbox.addPoint(f(t1), bbox.maxY);else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n                }\n                var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                if (0 < t2 && t2 < 1) {\n                  if (i === 0) bbox.addPoint(f(t2), bbox.maxY);else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n              cx = p3x;\n              cy = p3y;\n              break;\n          }\n        }\n      } catch (err) {\n        _iterator68.e(err);\n      } finally {\n        _iterator68.f();\n      }\n      return this._bbox = Object.freeze(bbox);\n    }\n    /**\n    * Applies a mapping function to each point in the path.\n    * @param {function} fn\n    * @return {Path}\n    */\n  }, {\n    key: \"mapPoints\",\n    value: function mapPoints(fn) {\n      var path = new $f43aec954cdfdf21$export$2e2bcd8739ae039();\n      var _iterator69 = _createForOfIteratorHelper(this.commands),\n        _step69;\n      try {\n        for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n          var c = _step69.value;\n          var args = [];\n          for (var _i39 = 0; _i39 < c.args.length; _i39 += 2) {\n            var _fn = fn(c.args[_i39], c.args[_i39 + 1]),\n              _fn2 = _slicedToArray(_fn, 2),\n              x = _fn2[0],\n              y = _fn2[1];\n            args.push(x, y);\n          }\n          path[c.command].apply(path, args);\n        }\n      } catch (err) {\n        _iterator69.e(err);\n      } finally {\n        _iterator69.f();\n      }\n      return path;\n    }\n    /**\n    * Transforms the path by the given matrix.\n    */\n  }, {\n    key: \"transform\",\n    value: function transform(m0, m1, m2, m3, m4, m5) {\n      return this.mapPoints(function (x, y) {\n        var tx = m0 * x + m2 * y + m4;\n        var ty = m1 * x + m3 * y + m5;\n        return [tx, ty];\n      });\n    }\n    /**\n    * Translates the path by the given offset.\n    */\n  }, {\n    key: \"translate\",\n    value: function translate(x, y) {\n      return this.transform(1, 0, 0, 1, x, y);\n    }\n    /**\n    * Rotates the path by the given angle (in radians).\n    */\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      var cos = Math.cos(angle);\n      var sin = Math.sin(angle);\n      return this.transform(cos, sin, -sin, cos, 0, 0);\n    }\n    /**\n    * Scales the path.\n    */\n  }, {\n    key: \"scale\",\n    value: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n    }\n  }]);\n  return $f43aec954cdfdf21$export$2e2bcd8739ae039;\n}();\nvar _loop3 = function _loop3() {\n  var command = _arr[_i40];\n  $f43aec954cdfdf21$export$2e2bcd8739ae039.prototype[command] = function () {\n    this._bbox = this._cbox = null;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\nfor (var _i40 = 0, _arr = [\"moveTo\", \"lineTo\", \"quadraticCurveTo\", \"bezierCurveTo\", \"closePath\"]; _i40 < _arr.length; _i40++) {\n  _loop3();\n}\nvar $7713b9b7b438dff8$export$2e2bcd8739ae039 = [\".notdef\", \".null\", \"nonmarkingreturn\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"Adieresis\", \"Aring\", \"Ccedilla\", \"Eacute\", \"Ntilde\", \"Odieresis\", \"Udieresis\", \"aacute\", \"agrave\", \"acircumflex\", \"adieresis\", \"atilde\", \"aring\", \"ccedilla\", \"eacute\", \"egrave\", \"ecircumflex\", \"edieresis\", \"iacute\", \"igrave\", \"icircumflex\", \"idieresis\", \"ntilde\", \"oacute\", \"ograve\", \"ocircumflex\", \"odieresis\", \"otilde\", \"uacute\", \"ugrave\", \"ucircumflex\", \"udieresis\", \"dagger\", \"degree\", \"cent\", \"sterling\", \"section\", \"bullet\", \"paragraph\", \"germandbls\", \"registered\", \"copyright\", \"trademark\", \"acute\", \"dieresis\", \"notequal\", \"AE\", \"Oslash\", \"infinity\", \"plusminus\", \"lessequal\", \"greaterequal\", \"yen\", \"mu\", \"partialdiff\", \"summation\", \"product\", \"pi\", \"integral\", \"ordfeminine\", \"ordmasculine\", \"Omega\", \"ae\", \"oslash\", \"questiondown\", \"exclamdown\", \"logicalnot\", \"radical\", \"florin\", \"approxequal\", \"Delta\", \"guillemotleft\", \"guillemotright\", \"ellipsis\", \"nonbreakingspace\", \"Agrave\", \"Atilde\", \"Otilde\", \"OE\", \"oe\", \"endash\", \"emdash\", \"quotedblleft\", \"quotedblright\", \"quoteleft\", \"quoteright\", \"divide\", \"lozenge\", \"ydieresis\", \"Ydieresis\", \"fraction\", \"currency\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"daggerdbl\", \"periodcentered\", \"quotesinglbase\", \"quotedblbase\", \"perthousand\", \"Acircumflex\", \"Ecircumflex\", \"Aacute\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Oacute\", \"Ocircumflex\", \"apple\", \"Ograve\", \"Uacute\", \"Ucircumflex\", \"Ugrave\", \"dotlessi\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"Lslash\", \"lslash\", \"Scaron\", \"scaron\", \"Zcaron\", \"zcaron\", \"brokenbar\", \"Eth\", \"eth\", \"Yacute\", \"yacute\", \"Thorn\", \"thorn\", \"minus\", \"multiply\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"onehalf\", \"onequarter\", \"threequarters\", \"franc\", \"Gbreve\", \"gbreve\", \"Idotaccent\", \"Scedilla\", \"scedilla\", \"Cacute\", \"cacute\", \"Ccaron\", \"ccaron\", \"dcroat\"];\nvar $f92906be28e61769$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $f92906be28e61769$export$2e2bcd8739ae039(id, codePoints, font) {\n    _classCallCheck(this, $f92906be28e61769$export$2e2bcd8739ae039);\n    /**\n    * The glyph id in the font\n    * @type {number}\n    */\n    this.id = id;\n    /**\n    * An array of unicode code points that are represented by this glyph.\n    * There can be multiple code points in the case of ligatures and other glyphs\n    * that represent multiple visual characters.\n    * @type {number[]}\n    */\n    this.codePoints = codePoints;\n    this._font = font;\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $6uUbQ$isMark));\n    this.isLigature = this.codePoints.length > 1;\n  }\n  _createClass($f92906be28e61769$export$2e2bcd8739ae039, [{\n    key: \"_getPath\",\n    value: function _getPath() {\n      return new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n    }\n  }, {\n    key: \"_getCBox\",\n    value: function _getCBox() {\n      return this.path.cbox;\n    }\n  }, {\n    key: \"_getBBox\",\n    value: function _getBBox() {\n      return this.path.bbox;\n    }\n  }, {\n    key: \"_getTableMetrics\",\n    value: function _getTableMetrics(table) {\n      if (this.id < table.metrics.length) return table.metrics.get(this.id);\n      var metric = table.metrics.get(table.metrics.length - 1);\n      var res = {\n        advance: metric ? metric.advance : 0,\n        bearing: table.bearings.get(this.id - table.metrics.length) || 0\n      };\n      return res;\n    }\n  }, {\n    key: \"_getMetrics\",\n    value: function _getMetrics(cbox) {\n      if (this._metrics) return this._metrics;\n      var _this$_getTableMetric = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _this$_getTableMetric.advance,\n        leftBearing = _this$_getTableMetric.bearing;\n      // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n      if (this._font.vmtx) var _this$_getTableMetric2 = this._getTableMetrics(this._font.vmtx),\n        advanceHeight = _this$_getTableMetric2.advance,\n        topBearing = _this$_getTableMetric2.bearing;else {\n        var os2;\n        if (typeof cbox === \"undefined\" || cbox === null) {\n          cbox = this.cbox;\n        }\n        if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n          var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n          var topBearing = os2.typoAscender - cbox.maxY;\n        } else {\n          var hhea = this._font.hhea;\n          var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n          var topBearing = hhea.ascent - cbox.maxY;\n        }\n      }\n      if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n      return this._metrics = {\n        advanceWidth: advanceWidth,\n        advanceHeight: advanceHeight,\n        leftBearing: leftBearing,\n        topBearing: topBearing\n      };\n    }\n    /**\n    * The glyph’s control box.\n    * This is often the same as the bounding box, but is faster to compute.\n    * Because of the way bezier curves are defined, some of the control points\n    * can be outside of the bounding box. Where `bbox` takes this into account,\n    * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n    * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n    * for a more detailed description.\n    *\n    * @type {BBox}\n    */\n  }, {\n    key: \"cbox\",\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n    * The glyph’s bounding box, i.e. the rectangle that encloses the\n    * glyph outline as tightly as possible.\n    * @type {BBox}\n    */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n    * A vector Path object representing the glyph outline.\n    * @type {Path}\n    */\n  }, {\n    key: \"path\",\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n    /**\n    * Returns a path scaled to the given font size.\n    * @param {number} size\n    * @return {Path}\n    */\n  }, {\n    key: \"getScaledPath\",\n    value: function getScaledPath(size) {\n      var scale = 1 / this._font.unitsPerEm * size;\n      return this.path.scale(scale);\n    }\n    /**\n    * The glyph's advance width.\n    * @type {number}\n    */\n  }, {\n    key: \"advanceWidth\",\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n    * The glyph's advance height.\n    * @type {number}\n    */\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: \"ligatureCaretPositions\",\n    get: function get() {}\n  }, {\n    key: \"_getName\",\n    value: function _getName() {\n      var post = this._font.post;\n      if (!post) return null;\n      switch (post.version) {\n        case 1:\n          return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id];\n        case 2:\n          var id = post.glyphNameIndex[this.id];\n          if (id < (0, $7713b9b7b438dff8$export$2e2bcd8739ae039).length) return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[id];\n          return post.names[id - (0, $7713b9b7b438dff8$export$2e2bcd8739ae039).length];\n        case 2.5:\n          return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id + post.offsets[this.id]];\n        case 4:\n          return String.fromCharCode(post.map[this.id]);\n      }\n    }\n    /**\n    * The glyph's name\n    * @type {string}\n    */\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._getName();\n    }\n    /**\n    * Renders the glyph to the given graphics context, at the specified font size.\n    * @param {CanvasRenderingContext2d} ctx\n    * @param {number} size\n    */\n  }, {\n    key: \"render\",\n    value: function render(ctx, size) {\n      ctx.save();\n      var scale = 1 / this._font.head.unitsPerEm * size;\n      ctx.scale(scale, scale);\n      var fn = this.path.toFunction();\n      fn(ctx);\n      ctx.fill();\n      ctx.restore();\n    }\n  }]);\n  return $f92906be28e61769$export$2e2bcd8739ae039;\n}();\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"path\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"name\", null);\n\n// The header for both simple and composite glyphs\nvar $69aac16029968692$var$GlyfHeader = new $6uUbQ$Struct({\n  numberOfContours: $6uUbQ$int16,\n  xMin: $6uUbQ$int16,\n  yMin: $6uUbQ$int16,\n  xMax: $6uUbQ$int16,\n  yMax: $6uUbQ$int16\n});\n// Flags for simple glyphs\nvar $69aac16029968692$var$ON_CURVE = 1;\nvar $69aac16029968692$var$X_SHORT_VECTOR = 2;\nvar $69aac16029968692$var$Y_SHORT_VECTOR = 4;\nvar $69aac16029968692$var$REPEAT = 8;\nvar $69aac16029968692$var$SAME_X = 16;\nvar $69aac16029968692$var$SAME_Y = 32;\n// Flags for composite glyphs\nvar $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS = 1;\nvar $69aac16029968692$var$ARGS_ARE_XY_VALUES = 2;\nvar $69aac16029968692$var$ROUND_XY_TO_GRID = 4;\nvar $69aac16029968692$var$WE_HAVE_A_SCALE = 8;\nvar $69aac16029968692$var$MORE_COMPONENTS = 32;\nvar $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nvar $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO = 128;\nvar $69aac16029968692$var$WE_HAVE_INSTRUCTIONS = 256;\nvar $69aac16029968692$var$USE_MY_METRICS = 512;\nvar $69aac16029968692$var$OVERLAP_COMPOUND = 1024;\nvar $69aac16029968692$var$SCALED_COMPONENT_OFFSET = 2048;\nvar $69aac16029968692$var$UNSCALED_COMPONENT_OFFSET = 4096;\nvar $69aac16029968692$export$baf26146a414f24a = /*#__PURE__*/function () {\n  function $69aac16029968692$export$baf26146a414f24a(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    _classCallCheck(this, $69aac16029968692$export$baf26146a414f24a);\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n  _createClass($69aac16029968692$export$baf26146a414f24a, [{\n    key: \"copy\",\n    value: function copy() {\n      return new $69aac16029968692$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n    }\n  }]);\n  return $69aac16029968692$export$baf26146a414f24a;\n}(); // Represents a component in a composite glyph\nvar $69aac16029968692$var$Component = /*#__PURE__*/_createClass(function $69aac16029968692$var$Component(glyphID, dx, dy) {\n  _classCallCheck(this, $69aac16029968692$var$Component);\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n});\nvar $69aac16029968692$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref9) {\n  _inherits($69aac16029968692$export$2e2bcd8739ae039, _ref9);\n  var _super11 = _createSuper($69aac16029968692$export$2e2bcd8739ae039);\n  function $69aac16029968692$export$2e2bcd8739ae039() {\n    var _this11;\n    _classCallCheck(this, $69aac16029968692$export$2e2bcd8739ae039);\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    _this11 = _super11.call.apply(_super11, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this11), \"type\", \"TTF\");\n    return _this11;\n  }\n  _createClass($69aac16029968692$export$2e2bcd8739ae039, [{\n    key: \"_getCBox\",\n    value:\n    // Parses just the glyph header and returns the bounding box\n    function _getCBox(internal) {\n      // We need to decode the glyph if variation processing is requested,\n      // so it's easier just to recompute the path's cbox after decoding.\n      if (this._font._variationProcessor && !internal) return this.path.cbox;\n      var stream = this._font._getTableStream(\"glyf\");\n      stream.pos += this._font.loca.offsets[this.id];\n      var glyph = $69aac16029968692$var$GlyfHeader.decode(stream);\n      var cbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n      return Object.freeze(cbox);\n    }\n    // Parses a single glyph coordinate\n  }, {\n    key: \"_parseGlyphCoord\",\n    value: function _parseGlyphCoord(stream, prev, short, same) {\n      if (short) {\n        var val = stream.readUInt8();\n        if (!same) val = -val;\n        val += prev;\n      } else if (same) var val = prev;else var val = prev + stream.readInt16BE();\n      return val;\n    }\n    // Decodes the glyph data into points for simple glyphs,\n    // or components for composite glyphs\n  }, {\n    key: \"_decode\",\n    value: function _decode() {\n      var glyfPos = this._font.loca.offsets[this.id];\n      var nextPos = this._font.loca.offsets[this.id + 1];\n      // Nothing to do if there is no data for this glyph\n      if (glyfPos === nextPos) return null;\n      var stream = this._font._getTableStream(\"glyf\");\n      stream.pos += glyfPos;\n      var startPos = stream.pos;\n      var glyph = $69aac16029968692$var$GlyfHeader.decode(stream);\n      if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n      return glyph;\n    }\n  }, {\n    key: \"_decodeSimple\",\n    value: function _decodeSimple(glyph, stream) {\n      // this is a simple glyph\n      glyph.points = [];\n      var endPtsOfContours = new $6uUbQ$Array($6uUbQ$uint16, glyph.numberOfContours).decode(stream);\n      glyph.instructions = new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16).decode(stream);\n      var flags = [];\n      var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      while (flags.length < numCoords) {\n        var flag = stream.readUInt8();\n        flags.push(flag);\n        // check for repeat flag\n        if (flag & $69aac16029968692$var$REPEAT) {\n          var count = stream.readUInt8();\n          for (var j = 0; j < count; j++) flags.push(flag);\n        }\n      }\n      for (var i = 0; i < flags.length; i++) {\n        var flag = flags[i];\n        var point = new $69aac16029968692$export$baf26146a414f24a(!!(flag & $69aac16029968692$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n        glyph.points.push(point);\n      }\n      var px = 0;\n      for (var i = 0; i < flags.length; i++) {\n        var flag = flags[i];\n        glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $69aac16029968692$var$X_SHORT_VECTOR, flag & $69aac16029968692$var$SAME_X);\n      }\n      var py = 0;\n      for (var i = 0; i < flags.length; i++) {\n        var flag = flags[i];\n        glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $69aac16029968692$var$Y_SHORT_VECTOR, flag & $69aac16029968692$var$SAME_Y);\n      }\n      if (this._font._variationProcessor) {\n        var points = glyph.points.slice();\n        points.push.apply(points, _toConsumableArray(this._getPhantomPoints(glyph)));\n        this._font._variationProcessor.transformPoints(this.id, points);\n        glyph.phantomPoints = points.slice(-4);\n      }\n      return;\n    }\n  }, {\n    key: \"_decodeComposite\",\n    value: function _decodeComposite(glyph, stream) {\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      // this is a composite glyph\n      glyph.components = [];\n      var haveInstructions = false;\n      var flags = $69aac16029968692$var$MORE_COMPONENTS;\n      while (flags & $69aac16029968692$var$MORE_COMPONENTS) {\n        flags = stream.readUInt16BE();\n        var gPos = stream.pos - offset;\n        var glyphID = stream.readUInt16BE();\n        if (!haveInstructions) haveInstructions = (flags & $69aac16029968692$var$WE_HAVE_INSTRUCTIONS) !== 0;\n        if (flags & $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS) {\n          var dx = stream.readInt16BE();\n          var dy = stream.readInt16BE();\n        } else {\n          var dx = stream.readInt8();\n          var dy = stream.readInt8();\n        }\n        var component = new $69aac16029968692$var$Component(glyphID, dx, dy);\n        component.pos = gPos;\n        if (flags & $69aac16029968692$var$WE_HAVE_A_SCALE)\n          // fixed number with 14 bits of fraction\n          component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;else if (flags & $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n          component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n          component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        } else if (flags & $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO) {\n          component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n          component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n          component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n          component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        }\n        glyph.components.push(component);\n      }\n      if (this._font._variationProcessor) {\n        var points = [];\n        for (var j = 0; j < glyph.components.length; j++) {\n          var component = glyph.components[j];\n          points.push(new $69aac16029968692$export$baf26146a414f24a(true, true, component.dx, component.dy));\n        }\n        points.push.apply(points, _toConsumableArray(this._getPhantomPoints(glyph)));\n        this._font._variationProcessor.transformPoints(this.id, points);\n        glyph.phantomPoints = points.splice(-4, 4);\n        for (var _i41 = 0; _i41 < points.length; _i41++) {\n          var point = points[_i41];\n          glyph.components[_i41].dx = point.x;\n          glyph.components[_i41].dy = point.y;\n        }\n      }\n      return haveInstructions;\n    }\n  }, {\n    key: \"_getPhantomPoints\",\n    value: function _getPhantomPoints(glyph) {\n      var cbox = this._getCBox(true);\n      if (this._metrics == null) this._metrics = (0, $f92906be28e61769$export$2e2bcd8739ae039).prototype._getMetrics.call(this, cbox);\n      var _this$_metrics = this._metrics,\n        advanceWidth = _this$_metrics.advanceWidth,\n        advanceHeight = _this$_metrics.advanceHeight,\n        leftBearing = _this$_metrics.leftBearing,\n        topBearing = _this$_metrics.topBearing;\n      return [new $69aac16029968692$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0), new $69aac16029968692$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new $69aac16029968692$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing), new $69aac16029968692$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n    }\n    // Decodes font data, resolves composite glyphs, and returns an array of contours\n  }, {\n    key: \"_getContours\",\n    value: function _getContours() {\n      var glyph = this._decode();\n      if (!glyph) return [];\n      var points = [];\n      if (glyph.numberOfContours < 0) {\n        // resolve composite glyphs\n        var _iterator70 = _createForOfIteratorHelper(glyph.components),\n          _step70;\n        try {\n          for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n            var component = _step70.value;\n            var _contours = this._font.getGlyph(component.glyphID)._getContours();\n            for (var _i42 = 0; _i42 < _contours.length; _i42++) {\n              var contour = _contours[_i42];\n              for (var j = 0; j < contour.length; j++) {\n                var _point = contour[j];\n                var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n                var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n                points.push(new $69aac16029968692$export$baf26146a414f24a(_point.onCurve, _point.endContour, x, y));\n              }\n            }\n          }\n        } catch (err) {\n          _iterator70.e(err);\n        } finally {\n          _iterator70.f();\n        }\n      } else points = glyph.points || [];\n      // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n      if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n        this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n        this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n        this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n        this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n      }\n      var contours = [];\n      var cur = [];\n      for (var k = 0; k < points.length; k++) {\n        var point = points[k];\n        cur.push(point);\n        if (point.endContour) {\n          contours.push(cur);\n          cur = [];\n        }\n      }\n      return contours;\n    }\n  }, {\n    key: \"_getMetrics\",\n    value: function _getMetrics() {\n      if (this._metrics) return this._metrics;\n      var cbox = this._getCBox(true);\n      _get(_getPrototypeOf($69aac16029968692$export$2e2bcd8739ae039.prototype), \"_getMetrics\", this).call(this, cbox);\n      if (this._font._variationProcessor && !this._font.HVAR)\n        // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n        this.path;\n      return this._metrics;\n    }\n    // Converts contours to a Path object that can be rendered\n  }, {\n    key: \"_getPath\",\n    value: function _getPath() {\n      var contours = this._getContours();\n      var path = new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n      for (var _i43 = 0; _i43 < contours.length; _i43++) {\n        var contour = contours[_i43];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var start = 0;\n        if (firstPt.onCurve) {\n          // The first point will be consumed by the moveTo command, so skip in the loop\n          var curvePt = null;\n          start = 1;\n        } else {\n          if (lastPt.onCurve)\n            // Start at the last point if the first point is off curve and the last point is on curve\n            firstPt = lastPt;else\n            // Start at the middle if both the first and last points are off curve\n            firstPt = new $69aac16029968692$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n          var curvePt = firstPt;\n        }\n        path.moveTo(firstPt.x, firstPt.y);\n        for (var j = start; j < contour.length; j++) {\n          var pt = contour[j];\n          var prevPt = j === 0 ? firstPt : contour[j - 1];\n          if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;else if (!prevPt.onCurve && !pt.onCurve) {\n            var midX = (prevPt.x + pt.x) / 2;\n            var midY = (prevPt.y + pt.y) / 2;\n            path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n            var curvePt = pt;\n          } else if (!prevPt.onCurve && pt.onCurve) {\n            path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n            var curvePt = null;\n          } else throw new Error(\"Unknown TTF path state\");\n        }\n        // Connect the first and last points\n        if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n        path.closePath();\n      }\n      return path;\n    }\n  }]);\n  return $69aac16029968692$export$2e2bcd8739ae039;\n}((0, $f92906be28e61769$export$2e2bcd8739ae039));\nvar $62cc5109c6101893$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref10) {\n  _inherits($62cc5109c6101893$export$2e2bcd8739ae039, _ref10);\n  var _super12 = _createSuper($62cc5109c6101893$export$2e2bcd8739ae039);\n  function $62cc5109c6101893$export$2e2bcd8739ae039() {\n    var _this12;\n    _classCallCheck(this, $62cc5109c6101893$export$2e2bcd8739ae039);\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    _this12 = _super12.call.apply(_super12, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this12), \"type\", \"CFF\");\n    return _this12;\n  }\n  _createClass($62cc5109c6101893$export$2e2bcd8739ae039, [{\n    key: \"_getName\",\n    value: function _getName() {\n      if (this._font.CFF2) return _get(_getPrototypeOf($62cc5109c6101893$export$2e2bcd8739ae039.prototype), \"_getName\", this).call(this);\n      return this._font[\"CFF \"].getGlyphName(this.id);\n    }\n  }, {\n    key: \"bias\",\n    value: function bias(s) {\n      if (s.length < 1240) return 107;else if (s.length < 33900) return 1131;else return 32768;\n    }\n  }, {\n    key: \"_getPath\",\n    value: function _getPath() {\n      var cff = this._font.CFF2 || this._font[\"CFF \"];\n      var stream = cff.stream;\n      var str = cff.topDict.CharStrings[this.id];\n      var end = str.offset + str.length;\n      stream.pos = str.offset;\n      var path = new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n      var stack = [];\n      var trans = [];\n      var width = null;\n      var nStems = 0;\n      var x1 = 0,\n        y1 = 0;\n      var usedGsubrs;\n      var usedSubrs;\n      var open = false;\n      this._usedGsubrs = usedGsubrs = {};\n      this._usedSubrs = usedSubrs = {};\n      var gsubrs = cff.globalSubrIndex || [];\n      var gsubrsBias = this.bias(gsubrs);\n      var privateDict = cff.privateDictForGlyph(this.id) || {};\n      var subrs = privateDict.Subrs || [];\n      var subrsBias = this.bias(subrs);\n      var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n      var vsindex = privateDict.vsindex;\n      var variationProcessor = this._font._variationProcessor;\n      function checkWidth() {\n        if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n      }\n      function parseStems() {\n        if (stack.length % 2 !== 0) checkWidth();\n        nStems += stack.length >> 1;\n        return stack.length = 0;\n      }\n      function moveTo(x, y) {\n        if (open) path.closePath();\n        path.moveTo(x, y);\n        open = true;\n      }\n      var parse = function parse() {\n        while (stream.pos < end) {\n          var op = stream.readUInt8();\n          if (op < 32) {\n            var index = void 0,\n              subr = void 0,\n              phase = void 0;\n            switch (op) {\n              case 1:\n              case 3:\n              case 18:\n              case 23:\n                parseStems();\n                break;\n              case 4:\n                if (stack.length > 1) checkWidth();\n                y1 += stack.shift();\n                moveTo(x1, y1);\n                break;\n              case 5:\n                while (stack.length >= 2) {\n                  x1 += stack.shift();\n                  y1 += stack.shift();\n                  path.lineTo(x1, y1);\n                }\n                break;\n              case 6:\n              case 7:\n                phase = op === 6;\n                while (stack.length >= 1) {\n                  if (phase) x1 += stack.shift();else y1 += stack.shift();\n                  path.lineTo(x1, y1);\n                  phase = !phase;\n                }\n                break;\n              case 8:\n                while (stack.length > 0) {\n                  var c1x = x1 + stack.shift();\n                  var c1y = y1 + stack.shift();\n                  var c2x = c1x + stack.shift();\n                  var c2y = c1y + stack.shift();\n                  x1 = c2x + stack.shift();\n                  y1 = c2y + stack.shift();\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                }\n                break;\n              case 10:\n                index = stack.pop() + subrsBias;\n                subr = subrs[index];\n                if (subr) {\n                  usedSubrs[index] = true;\n                  var p = stream.pos;\n                  var e = end;\n                  stream.pos = subr.offset;\n                  end = subr.offset + subr.length;\n                  parse();\n                  stream.pos = p;\n                  end = e;\n                }\n                break;\n              case 11:\n                if (cff.version >= 2) break;\n                return;\n              case 14:\n                if (cff.version >= 2) break;\n                if (stack.length > 0) checkWidth();\n                if (open) {\n                  path.closePath();\n                  open = false;\n                }\n                break;\n              case 15:\n                if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n                vsindex = stack.pop();\n                break;\n              case 16:\n                {\n                  if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                  if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                  var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                  var numBlends = stack.pop();\n                  var numOperands = numBlends * blendVector.length;\n                  var delta = stack.length - numOperands;\n                  var base = delta - numBlends;\n                  for (var _i44 = 0; _i44 < numBlends; _i44++) {\n                    var sum = stack[base + _i44];\n                    for (var j = 0; j < blendVector.length; j++) sum += blendVector[j] * stack[delta++];\n                    stack[base + _i44] = sum;\n                  }\n                  while (numOperands--) stack.pop();\n                  break;\n                }\n              case 19:\n              case 20:\n                parseStems();\n                stream.pos += nStems + 7 >> 3;\n                break;\n              case 21:\n                if (stack.length > 2) checkWidth();\n                x1 += stack.shift();\n                y1 += stack.shift();\n                moveTo(x1, y1);\n                break;\n              case 22:\n                if (stack.length > 1) checkWidth();\n                x1 += stack.shift();\n                moveTo(x1, y1);\n                break;\n              case 24:\n                while (stack.length >= 8) {\n                  var c1x = x1 + stack.shift();\n                  var c1y = y1 + stack.shift();\n                  var c2x = c1x + stack.shift();\n                  var c2y = c1y + stack.shift();\n                  x1 = c2x + stack.shift();\n                  y1 = c2y + stack.shift();\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                }\n                x1 += stack.shift();\n                y1 += stack.shift();\n                path.lineTo(x1, y1);\n                break;\n              case 25:\n                while (stack.length >= 8) {\n                  x1 += stack.shift();\n                  y1 += stack.shift();\n                  path.lineTo(x1, y1);\n                }\n                var c1x = x1 + stack.shift();\n                var c1y = y1 + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x1 = c2x + stack.shift();\n                y1 = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                break;\n              case 26:\n                if (stack.length % 2) x1 += stack.shift();\n                while (stack.length >= 4) {\n                  c1x = x1;\n                  c1y = y1 + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x1 = c2x;\n                  y1 = c2y + stack.shift();\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                }\n                break;\n              case 27:\n                if (stack.length % 2) y1 += stack.shift();\n                while (stack.length >= 4) {\n                  c1x = x1 + stack.shift();\n                  c1y = y1;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x1 = c2x + stack.shift();\n                  y1 = c2y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                }\n                break;\n              case 28:\n                stack.push(stream.readInt16BE());\n                break;\n              case 29:\n                index = stack.pop() + gsubrsBias;\n                subr = gsubrs[index];\n                if (subr) {\n                  usedGsubrs[index] = true;\n                  var p = stream.pos;\n                  var e = end;\n                  stream.pos = subr.offset;\n                  end = subr.offset + subr.length;\n                  parse();\n                  stream.pos = p;\n                  end = e;\n                }\n                break;\n              case 30:\n              case 31:\n                phase = op === 31;\n                while (stack.length >= 4) {\n                  if (phase) {\n                    c1x = x1 + stack.shift();\n                    c1y = y1;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y1 = c2y + stack.shift();\n                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                  } else {\n                    c1x = x1;\n                    c1y = y1 + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x1 = c2x + stack.shift();\n                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                  }\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                  phase = !phase;\n                }\n                break;\n              case 12:\n                op = stream.readUInt8();\n                switch (op) {\n                  case 3:\n                    var a = stack.pop();\n                    var b = stack.pop();\n                    stack.push(a && b ? 1 : 0);\n                    break;\n                  case 4:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(a || b ? 1 : 0);\n                    break;\n                  case 5:\n                    a = stack.pop();\n                    stack.push(a ? 0 : 1);\n                    break;\n                  case 9:\n                    a = stack.pop();\n                    stack.push(Math.abs(a));\n                    break;\n                  case 10:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(a + b);\n                    break;\n                  case 11:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(a - b);\n                    break;\n                  case 12:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(a / b);\n                    break;\n                  case 14:\n                    a = stack.pop();\n                    stack.push(-a);\n                    break;\n                  case 15:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(a === b ? 1 : 0);\n                    break;\n                  case 18:\n                    stack.pop();\n                    break;\n                  case 20:\n                    var val = stack.pop();\n                    var idx = stack.pop();\n                    trans[idx] = val;\n                    break;\n                  case 21:\n                    idx = stack.pop();\n                    stack.push(trans[idx] || 0);\n                    break;\n                  case 22:\n                    var s1 = stack.pop();\n                    var s2 = stack.pop();\n                    var v1 = stack.pop();\n                    var v2 = stack.pop();\n                    stack.push(v1 <= v2 ? s1 : s2);\n                    break;\n                  case 23:\n                    stack.push(Math.random());\n                    break;\n                  case 24:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(a * b);\n                    break;\n                  case 26:\n                    a = stack.pop();\n                    stack.push(Math.sqrt(a));\n                    break;\n                  case 27:\n                    a = stack.pop();\n                    stack.push(a, a);\n                    break;\n                  case 28:\n                    a = stack.pop();\n                    b = stack.pop();\n                    stack.push(b, a);\n                    break;\n                  case 29:\n                    idx = stack.pop();\n                    if (idx < 0) idx = 0;else if (idx > stack.length - 1) idx = stack.length - 1;\n                    stack.push(stack[idx]);\n                    break;\n                  case 30:\n                    var n = stack.pop();\n                    var _j6 = stack.pop();\n                    if (_j6 >= 0) while (_j6 > 0) {\n                      var t = stack[n - 1];\n                      for (var _i45 = n - 2; _i45 >= 0; _i45--) stack[_i45 + 1] = stack[_i45];\n                      stack[0] = t;\n                      _j6--;\n                    } else while (_j6 < 0) {\n                      var t = stack[0];\n                      for (var _i46 = 0; _i46 <= n; _i46++) stack[_i46] = stack[_i46 + 1];\n                      stack[n - 1] = t;\n                      _j6++;\n                    }\n                    break;\n                  case 34:\n                    c1x = x1 + stack.shift();\n                    c1y = y1;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    var c3x = c2x + stack.shift();\n                    var c3y = c2y;\n                    var c4x = c3x + stack.shift();\n                    var c4y = c3y;\n                    var c5x = c4x + stack.shift();\n                    var c5y = c4y;\n                    var c6x = c5x + stack.shift();\n                    var c6y = c5y;\n                    x1 = c6x;\n                    y1 = c6y;\n                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                    break;\n                  case 35:\n                    var pts = [];\n                    for (var _i47 = 0; _i47 <= 5; _i47++) {\n                      x1 += stack.shift();\n                      y1 += stack.shift();\n                      pts.push(x1, y1);\n                    }\n                    path.bezierCurveTo.apply(path, _toConsumableArray(pts.slice(0, 6)));\n                    path.bezierCurveTo.apply(path, _toConsumableArray(pts.slice(6)));\n                    stack.shift(); // fd\n                    break;\n                  case 36:\n                    c1x = x1 + stack.shift();\n                    c1y = y1 + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    c3x = c2x + stack.shift();\n                    c3y = c2y;\n                    c4x = c3x + stack.shift();\n                    c4y = c3y;\n                    c5x = c4x + stack.shift();\n                    c5y = c4y + stack.shift();\n                    c6x = c5x + stack.shift();\n                    c6y = c5y;\n                    x1 = c6x;\n                    y1 = c6y;\n                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                    break;\n                  case 37:\n                    var startx = x1;\n                    var starty = y1;\n                    pts = [];\n                    for (var i1 = 0; i1 <= 4; i1++) {\n                      x1 += stack.shift();\n                      y1 += stack.shift();\n                      pts.push(x1, y1);\n                    }\n                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                      x1 += stack.shift();\n                      y1 = starty;\n                    } else {\n                      x1 = startx;\n                      y1 += stack.shift();\n                    }\n                    pts.push(x1, y1);\n                    path.bezierCurveTo.apply(path, _toConsumableArray(pts.slice(0, 6)));\n                    path.bezierCurveTo.apply(path, _toConsumableArray(pts.slice(6)));\n                    break;\n                  default:\n                    throw new Error(\"Unknown op: 12 \".concat(op));\n                }\n                break;\n              default:\n                throw new Error(\"Unknown op: \".concat(op));\n            }\n          } else if (op < 247) stack.push(op - 139);else if (op < 251) {\n            var b1 = stream.readUInt8();\n            stack.push((op - 247) * 256 + b1 + 108);\n          } else if (op < 255) {\n            var b1 = stream.readUInt8();\n            stack.push(-(op - 251) * 256 - b1 - 108);\n          } else stack.push(stream.readInt32BE() / 65536);\n        }\n      };\n      parse();\n      if (open) path.closePath();\n      return path;\n    }\n  }]);\n  return $62cc5109c6101893$export$2e2bcd8739ae039;\n}((0, $f92906be28e61769$export$2e2bcd8739ae039));\nvar $25d8f049c222084c$var$SBIXImage = new $6uUbQ$Struct({\n  originX: $6uUbQ$uint16,\n  originY: $6uUbQ$uint16,\n  type: new $6uUbQ$String(4),\n  data: new $6uUbQ$Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\nvar $25d8f049c222084c$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref11) {\n  _inherits($25d8f049c222084c$export$2e2bcd8739ae039, _ref11);\n  var _super13 = _createSuper($25d8f049c222084c$export$2e2bcd8739ae039);\n  function $25d8f049c222084c$export$2e2bcd8739ae039() {\n    var _this13;\n    _classCallCheck(this, $25d8f049c222084c$export$2e2bcd8739ae039);\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    _this13 = _super13.call.apply(_super13, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this13), \"type\", \"SBIX\");\n    return _this13;\n  }\n  _createClass($25d8f049c222084c$export$2e2bcd8739ae039, [{\n    key: \"getImageForSize\",\n    value:\n    /**\n    * Returns an object representing a glyph image at the given point size.\n    * The object has a data property with a Buffer containing the actual image data,\n    * along with the image type, and origin.\n    *\n    * @param {number} size\n    * @return {object}\n    */\n    function getImageForSize(size) {\n      for (var _i48 = 0; _i48 < this._font.sbix.imageTables.length; _i48++) {\n        var table = this._font.sbix.imageTables[_i48];\n        if (table.ppem >= size) break;\n      }\n      var offsets = table.imageOffsets;\n      var start = offsets[this.id];\n      var end = offsets[this.id + 1];\n      if (start === end) return null;\n      this._font.stream.pos = start;\n      return $25d8f049c222084c$var$SBIXImage.decode(this._font.stream, {\n        buflen: end - start\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx, size) {\n      var img = this.getImageForSize(size);\n      if (img != null) {\n        var scale = size / this._font.unitsPerEm;\n        ctx.image(img.data, {\n          height: size,\n          x: img.originX,\n          y: (this.bbox.minY - img.originY) * scale\n        });\n      }\n      if (this._font.sbix.flags.renderOutlines) _get(_getPrototypeOf($25d8f049c222084c$export$2e2bcd8739ae039.prototype), \"render\", this).call(this, ctx, size);\n    }\n  }]);\n  return $25d8f049c222084c$export$2e2bcd8739ae039;\n}((0, $69aac16029968692$export$2e2bcd8739ae039));\nvar $0d411f0165859681$var$COLRLayer = /*#__PURE__*/_createClass(function $0d411f0165859681$var$COLRLayer(glyph, color) {\n  _classCallCheck(this, $0d411f0165859681$var$COLRLayer);\n  this.glyph = glyph;\n  this.color = color;\n});\nvar $0d411f0165859681$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref12) {\n  _inherits($0d411f0165859681$export$2e2bcd8739ae039, _ref12);\n  var _super14 = _createSuper($0d411f0165859681$export$2e2bcd8739ae039);\n  function $0d411f0165859681$export$2e2bcd8739ae039() {\n    var _this14;\n    _classCallCheck(this, $0d411f0165859681$export$2e2bcd8739ae039);\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    _this14 = _super14.call.apply(_super14, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this14), \"type\", \"COLR\");\n    return _this14;\n  }\n  _createClass($0d411f0165859681$export$2e2bcd8739ae039, [{\n    key: \"_getBBox\",\n    value: function _getBBox() {\n      var bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n      for (var _i49 = 0; _i49 < this.layers.length; _i49++) {\n        var layer = this.layers[_i49];\n        var b = layer.glyph.bbox;\n        bbox.addPoint(b.minX, b.minY);\n        bbox.addPoint(b.maxX, b.maxY);\n      }\n      return bbox;\n    }\n    /**\n    * Returns an array of objects containing the glyph and color for\n    * each layer in the composite color glyph.\n    * @type {object[]}\n    */\n  }, {\n    key: \"layers\",\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n        if (this.id < rec.gid) high = mid - 1;else if (this.id > rec.gid) low = mid + 1;else {\n          var baseLayer = rec;\n          break;\n        }\n      }\n      // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new $0d411f0165859681$var$COLRLayer(g, color)];\n      }\n      // otherwise, return an array of all the layers\n      var layers = [];\n      for (var _i50 = baseLayer.firstLayerIndex; _i50 < baseLayer.firstLayerIndex + baseLayer.numLayers; _i50++) {\n        var rec = colr.layerRecords[_i50];\n        var color = cpal.colorRecords[rec.paletteIndex];\n        var g = this._font._getBaseGlyph(rec.gid);\n        layers.push(new $0d411f0165859681$var$COLRLayer(g, color));\n      }\n      return layers;\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx, size) {\n      var _iterator71 = _createForOfIteratorHelper(this.layers),\n        _step71;\n      try {\n        for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n          var _step71$value = _step71.value,\n            glyph = _step71$value.glyph,\n            color = _step71$value.color;\n          ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n          glyph.render(ctx, size);\n        }\n      } catch (err) {\n        _iterator71.e(err);\n      } finally {\n        _iterator71.f();\n      }\n      return;\n    }\n  }]);\n  return $0d411f0165859681$export$2e2bcd8739ae039;\n}((0, $f92906be28e61769$export$2e2bcd8739ae039));\nvar $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar $0bb840cac04e911b$var$TUPLE_COUNT_MASK = 0x0fff;\nvar $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD = 0x8000;\nvar $0bb840cac04e911b$var$INTERMEDIATE_TUPLE = 0x4000;\nvar $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS = 0x2000;\nvar $0bb840cac04e911b$var$TUPLE_INDEX_MASK = 0x0fff;\nvar $0bb840cac04e911b$var$POINTS_ARE_WORDS = 0x80;\nvar $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK = 0x7f;\nvar $0bb840cac04e911b$var$DELTAS_ARE_ZERO = 0x80;\nvar $0bb840cac04e911b$var$DELTAS_ARE_WORDS = 0x40;\nvar $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK = 0x3f;\nvar $0bb840cac04e911b$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $0bb840cac04e911b$export$2e2bcd8739ae039(font, coords) {\n    _classCallCheck(this, $0bb840cac04e911b$export$2e2bcd8739ae039);\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n  _createClass($0bb840cac04e911b$export$2e2bcd8739ae039, [{\n    key: \"normalizeCoords\",\n    value: function normalizeCoords(coords) {\n      // the default mapping is linear along each axis, in two segments:\n      // from the minValue to defaultValue, and from defaultValue to maxValue.\n      var normalized = [];\n      for (var i = 0; i < this.font.fvar.axis.length; i++) {\n        var axis = this.font.fvar.axis[i];\n        if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n      // if there is an avar table, the normalized value is calculated\n      // by interpolating between the two nearest mapped values.\n      if (this.font.avar) for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n      return normalized;\n    }\n  }, {\n    key: \"transformPoints\",\n    value: function transformPoints(gid, glyphPoints) {\n      if (!this.font.fvar || !this.font.gvar) return;\n      var gvar = this.font.gvar;\n      if (gid >= gvar.glyphCount) return;\n      var offset = gvar.offsets[gid];\n      if (offset === gvar.offsets[gid + 1]) return;\n      // Read the gvar data for this glyph\n      var stream = this.font.stream;\n      stream.pos = offset;\n      if (stream.pos >= stream.length) return;\n      var tupleCount = stream.readUInt16BE();\n      var offsetToData = offset + stream.readUInt16BE();\n      if (tupleCount & $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS) {\n        var here = stream.pos;\n        stream.pos = offsetToData;\n        var sharedPoints = this.decodePoints();\n        offsetToData = stream.pos;\n        stream.pos = here;\n      }\n      var origPoints = glyphPoints.map(function (pt) {\n        return pt.copy();\n      });\n      tupleCount &= $0bb840cac04e911b$var$TUPLE_COUNT_MASK;\n      for (var _i51 = 0; _i51 < tupleCount; _i51++) {\n        var tupleDataSize = stream.readUInt16BE();\n        var tupleIndex = stream.readUInt16BE();\n        if (tupleIndex & $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD) {\n          var tupleCoords = [];\n          for (var a = 0; a < gvar.axisCount; a++) tupleCoords.push(stream.readInt16BE() / 16384);\n        } else {\n          if ((tupleIndex & $0bb840cac04e911b$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n          var tupleCoords = gvar.globalCoords[tupleIndex & $0bb840cac04e911b$var$TUPLE_INDEX_MASK];\n        }\n        if (tupleIndex & $0bb840cac04e911b$var$INTERMEDIATE_TUPLE) {\n          var startCoords = [];\n          for (var _a = 0; _a < gvar.axisCount; _a++) startCoords.push(stream.readInt16BE() / 16384);\n          var endCoords = [];\n          for (var a1 = 0; a1 < gvar.axisCount; a1++) endCoords.push(stream.readInt16BE() / 16384);\n        }\n        // Get the factor at which to apply this tuple\n        var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n        if (factor === 0) {\n          offsetToData += tupleDataSize;\n          continue;\n        }\n        var here = stream.pos;\n        stream.pos = offsetToData;\n        if (tupleIndex & $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();else var points = sharedPoints;\n        // points.length = 0 means there are deltas for all points\n        var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n        var xDeltas = this.decodeDeltas(nPoints);\n        var yDeltas = this.decodeDeltas(nPoints);\n        if (points.length === 0) for (var _i52 = 0; _i52 < glyphPoints.length; _i52++) {\n          var point = glyphPoints[_i52];\n          point.x += Math.round(xDeltas[_i52] * factor);\n          point.y += Math.round(yDeltas[_i52] * factor);\n        } else {\n          var outPoints = origPoints.map(function (pt) {\n            return pt.copy();\n          });\n          var hasDelta = glyphPoints.map(function () {\n            return false;\n          });\n          for (var _i53 = 0; _i53 < points.length; _i53++) {\n            var idx = points[_i53];\n            if (idx < glyphPoints.length) {\n              var _point2 = outPoints[idx];\n              hasDelta[idx] = true;\n              _point2.x += Math.round(xDeltas[_i53] * factor);\n              _point2.y += Math.round(yDeltas[_i53] * factor);\n            }\n          }\n          this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n          for (var i1 = 0; i1 < glyphPoints.length; i1++) {\n            var deltaX = outPoints[i1].x - origPoints[i1].x;\n            var deltaY = outPoints[i1].y - origPoints[i1].y;\n            glyphPoints[i1].x += deltaX;\n            glyphPoints[i1].y += deltaY;\n          }\n        }\n        offsetToData += tupleDataSize;\n        stream.pos = here;\n      }\n    }\n  }, {\n    key: \"decodePoints\",\n    value: function decodePoints() {\n      var stream = this.font.stream;\n      var count = stream.readUInt8();\n      if (count & $0bb840cac04e911b$var$POINTS_ARE_WORDS) count = (count & $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n      var points = new Uint16Array(count);\n      var i = 0;\n      var point = 0;\n      while (i < count) {\n        var run = stream.readUInt8();\n        var runCount = (run & $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK) + 1;\n        var fn = run & $0bb840cac04e911b$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n        for (var j = 0; j < runCount && i < count; j++) {\n          point += fn.call(stream);\n          points[i++] = point;\n        }\n      }\n      return points;\n    }\n  }, {\n    key: \"decodeDeltas\",\n    value: function decodeDeltas(count) {\n      var stream = this.font.stream;\n      var i = 0;\n      var deltas = new Int16Array(count);\n      while (i < count) {\n        var run = stream.readUInt8();\n        var runCount = (run & $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK) + 1;\n        if (run & $0bb840cac04e911b$var$DELTAS_ARE_ZERO) i += runCount;else {\n          var fn = run & $0bb840cac04e911b$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n          for (var j = 0; j < runCount && i < count; j++) deltas[i++] = fn.call(stream);\n        }\n      }\n      return deltas;\n    }\n  }, {\n    key: \"tupleFactor\",\n    value: function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n      var normalized = this.normalizedCoords;\n      var gvar = this.font.gvar;\n      var factor = 1;\n      for (var _i54 = 0; _i54 < gvar.axisCount; _i54++) {\n        if (tupleCoords[_i54] === 0) continue;\n        if (normalized[_i54] === 0) return 0;\n        if ((tupleIndex & $0bb840cac04e911b$var$INTERMEDIATE_TUPLE) === 0) {\n          if (normalized[_i54] < Math.min(0, tupleCoords[_i54]) || normalized[_i54] > Math.max(0, tupleCoords[_i54])) return 0;\n          factor = (factor * normalized[_i54] + Number.EPSILON) / (tupleCoords[_i54] + Number.EPSILON);\n        } else {\n          if (normalized[_i54] < startCoords[_i54] || normalized[_i54] > endCoords[_i54]) return 0;else if (normalized[_i54] < tupleCoords[_i54]) factor = factor * (normalized[_i54] - startCoords[_i54] + Number.EPSILON) / (tupleCoords[_i54] - startCoords[_i54] + Number.EPSILON);else factor = factor * (endCoords[_i54] - normalized[_i54] + Number.EPSILON) / (endCoords[_i54] - tupleCoords[_i54] + Number.EPSILON);\n        }\n      }\n      return factor;\n    }\n    // Interpolates points without delta values.\n    // Needed for the Ø and Q glyphs in Skia.\n    // Algorithm from Freetype.\n  }, {\n    key: \"interpolateMissingDeltas\",\n    value: function interpolateMissingDeltas(points, inPoints, hasDelta) {\n      if (points.length === 0) return;\n      var point = 0;\n      while (point < points.length) {\n        var firstPoint = point;\n        // find the end point of the contour\n        var endPoint = point;\n        var pt = points[endPoint];\n        while (!pt.endContour) pt = points[++endPoint];\n        // find the first point that has a delta\n        while (point <= endPoint && !hasDelta[point]) point++;\n        if (point > endPoint) continue;\n        var firstDelta = point;\n        var curDelta = point;\n        point++;\n        while (point <= endPoint) {\n          // find the next point with a delta, and interpolate intermediate points\n          if (hasDelta[point]) {\n            this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n            curDelta = point;\n          }\n          point++;\n        }\n        // shift contour if we only have a single delta\n        if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);else {\n          // otherwise, handle the remaining points at the end and beginning of the contour\n          this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n          if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n        point = endPoint + 1;\n      }\n    }\n  }, {\n    key: \"deltaInterpolate\",\n    value: function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n      if (p1 > p2) return;\n      var iterable = [\"x\", \"y\"];\n      for (var _i55 = 0; _i55 < iterable.length; _i55++) {\n        var k = iterable[_i55];\n        if (inPoints[ref1][k] > inPoints[ref2][k]) {\n          var p = ref1;\n          ref1 = ref2;\n          ref2 = p;\n        }\n        var in1 = inPoints[ref1][k];\n        var in2 = inPoints[ref2][k];\n        var out1 = outPoints[ref1][k];\n        var out2 = outPoints[ref2][k];\n        // If the reference points have the same coordinate but different\n        // delta, inferred delta is zero.  Otherwise interpolate.\n        if (in1 !== in2 || out1 === out2) {\n          var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n          for (var _p = p1; _p <= p2; _p++) {\n            var out = inPoints[_p][k];\n            if (out <= in1) out += out1 - in1;else if (out >= in2) out += out2 - in2;else out = out1 + (out - in1) * scale;\n            outPoints[_p][k] = out;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"deltaShift\",\n    value: function deltaShift(p1, p2, ref, inPoints, outPoints) {\n      var deltaX = outPoints[ref].x - inPoints[ref].x;\n      var deltaY = outPoints[ref].y - inPoints[ref].y;\n      if (deltaX === 0 && deltaY === 0) return;\n      for (var p = p1; p <= p2; p++) if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  }, {\n    key: \"getAdvanceAdjustment\",\n    value: function getAdvanceAdjustment(gid, table) {\n      var outerIndex, innerIndex;\n      if (table.advanceWidthMapping) {\n        var idx = gid;\n        if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n        var entryFormat = table.advanceWidthMapping.entryFormat;\n        var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n        outerIndex = _table$advanceWidthMa.outerIndex;\n        innerIndex = _table$advanceWidthMa.innerIndex;\n      } else {\n        outerIndex = 0;\n        innerIndex = gid;\n      }\n      return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n    }\n    // See pseudo code from `Font Variations Overview'\n    // in the OpenType specification.\n  }, {\n    key: \"getDelta\",\n    value: function getDelta(itemStore, outerIndex, innerIndex) {\n      if (outerIndex >= itemStore.itemVariationData.length) return 0;\n      var varData = itemStore.itemVariationData[outerIndex];\n      if (innerIndex >= varData.deltaSets.length) return 0;\n      var deltaSet = varData.deltaSets[innerIndex];\n      var blendVector = this.getBlendVector(itemStore, outerIndex);\n      var netAdjustment = 0;\n      for (var master = 0; master < varData.regionIndexCount; master++) netAdjustment += deltaSet.deltas[master] * blendVector[master];\n      return netAdjustment;\n    }\n  }, {\n    key: \"getBlendVector\",\n    value: function getBlendVector(itemStore, outerIndex) {\n      var varData = itemStore.itemVariationData[outerIndex];\n      if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n      var normalizedCoords = this.normalizedCoords;\n      var blendVector = [];\n      // outer loop steps through master designs to be blended\n      for (var master = 0; master < varData.regionIndexCount; master++) {\n        var scalar = 1;\n        var regionIndex = varData.regionIndexes[master];\n        var axes = itemStore.variationRegionList.variationRegions[regionIndex];\n        // inner loop steps through axes in this region\n        for (var j = 0; j < axes.length; j++) {\n          var axis = axes[j];\n          var axisScalar = void 0;\n          // compute the scalar contribution of this axis\n          // ignore invalid ranges\n          if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;else if (axis.peakCoord === 0) axisScalar = 1;else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;else {\n            if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n          // take product of all the axis scalars\n          scalar *= axisScalar;\n        }\n        blendVector[master] = scalar;\n      }\n      this.blendVectors.set(varData, blendVector);\n      return blendVector;\n    }\n  }]);\n  return $0bb840cac04e911b$export$2e2bcd8739ae039;\n}();\nvar $5cc7476da92df375$var$resolved = Promise.resolve();\nvar $5cc7476da92df375$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $5cc7476da92df375$export$2e2bcd8739ae039(font) {\n    _classCallCheck(this, $5cc7476da92df375$export$2e2bcd8739ae039);\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n  _createClass($5cc7476da92df375$export$2e2bcd8739ae039, [{\n    key: \"includeGlyph\",\n    value: function includeGlyph(glyph) {\n      if (typeof glyph === \"object\") glyph = glyph.id;\n      if (this.mapping[glyph] == null) {\n        this.glyphs.push(glyph);\n        this.mapping[glyph] = this.glyphs.length - 1;\n      }\n      return this.mapping[glyph];\n    }\n  }]);\n  return $5cc7476da92df375$export$2e2bcd8739ae039;\n}(); // Flags for simple glyphs\nvar $807e58506be70005$var$ON_CURVE = 1;\nvar $807e58506be70005$var$X_SHORT_VECTOR = 2;\nvar $807e58506be70005$var$Y_SHORT_VECTOR = 4;\nvar $807e58506be70005$var$REPEAT = 8;\nvar $807e58506be70005$var$SAME_X = 16;\nvar $807e58506be70005$var$SAME_Y = 32;\nvar $807e58506be70005$var$Point = /*#__PURE__*/function () {\n  function $807e58506be70005$var$Point() {\n    _classCallCheck(this, $807e58506be70005$var$Point);\n  }\n  _createClass($807e58506be70005$var$Point, null, [{\n    key: \"size\",\n    value: function size(val) {\n      return val >= 0 && val <= 255 ? 1 : 2;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, value) {\n      if (value >= 0 && value <= 255) stream.writeUInt8(value);else stream.writeInt16BE(value);\n    }\n  }]);\n  return $807e58506be70005$var$Point;\n}();\nvar $807e58506be70005$var$Glyf = new $6uUbQ$Struct({\n  numberOfContours: $6uUbQ$int16,\n  xMin: $6uUbQ$int16,\n  yMin: $6uUbQ$int16,\n  xMax: $6uUbQ$int16,\n  yMax: $6uUbQ$int16,\n  endPtsOfContours: new $6uUbQ$Array($6uUbQ$uint16, \"numberOfContours\"),\n  instructions: new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16),\n  flags: new $6uUbQ$Array($6uUbQ$uint8, 0),\n  xPoints: new $6uUbQ$Array($807e58506be70005$var$Point, 0),\n  yPoints: new $6uUbQ$Array($807e58506be70005$var$Point, 0)\n});\nvar $807e58506be70005$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $807e58506be70005$export$2e2bcd8739ae039() {\n    _classCallCheck(this, $807e58506be70005$export$2e2bcd8739ae039);\n  }\n  _createClass($807e58506be70005$export$2e2bcd8739ae039, [{\n    key: \"encodeSimple\",\n    value: function encodeSimple(path) {\n      var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var endPtsOfContours = [];\n      var xPoints = [];\n      var yPoints = [];\n      var flags = [];\n      var same = 0;\n      var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n      var pointCount = 0;\n      for (var _i56 = 0; _i56 < path.commands.length; _i56++) {\n        var c = path.commands[_i56];\n        for (var j = 0; j < c.args.length; j += 2) {\n          var x = c.args[j];\n          var y = c.args[j + 1];\n          var flag = 0;\n          // If the ending point of a quadratic curve is the midpoint\n          // between the control point and the control point of the next\n          // quadratic curve, we can omit the ending point.\n          if (c.command === \"quadraticCurveTo\" && j === 2) {\n            var next = path.commands[_i56 + 1];\n            if (next && next.command === \"quadraticCurveTo\") {\n              var midX = (lastX + next.args[0]) / 2;\n              var midY = (lastY + next.args[1]) / 2;\n              if (x === midX && y === midY) continue;\n            }\n          }\n          // All points except control points are on curve.\n          if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $807e58506be70005$var$ON_CURVE;\n          flag = this._encodePoint(x, lastX, xPoints, flag, $807e58506be70005$var$X_SHORT_VECTOR, $807e58506be70005$var$SAME_X);\n          flag = this._encodePoint(y, lastY, yPoints, flag, $807e58506be70005$var$Y_SHORT_VECTOR, $807e58506be70005$var$SAME_Y);\n          if (flag === lastFlag && same < 255) {\n            flags[flags.length - 1] |= $807e58506be70005$var$REPEAT;\n            same++;\n          } else {\n            if (same > 0) {\n              flags.push(same);\n              same = 0;\n            }\n            flags.push(flag);\n            lastFlag = flag;\n          }\n          lastX = x;\n          lastY = y;\n          pointCount++;\n        }\n        if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n      }\n      // Close the path if the last command didn't already\n      if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n      var bbox = path.bbox;\n      var glyf = {\n        numberOfContours: endPtsOfContours.length,\n        xMin: bbox.minX,\n        yMin: bbox.minY,\n        xMax: bbox.maxX,\n        yMax: bbox.maxY,\n        endPtsOfContours: endPtsOfContours,\n        instructions: instructions,\n        flags: flags,\n        xPoints: xPoints,\n        yPoints: yPoints\n      };\n      var size = $807e58506be70005$var$Glyf.size(glyf);\n      var tail = 4 - size % 4;\n      var stream = new $6uUbQ$EncodeStream(size + tail);\n      $807e58506be70005$var$Glyf.encode(stream, glyf);\n      // Align to 4-byte length\n      if (tail !== 0) stream.fill(0, tail);\n      return stream.buffer;\n    }\n  }, {\n    key: \"_encodePoint\",\n    value: function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n      var diff = value - last;\n      if (value === last) flag |= sameFlag;else {\n        if (-255 <= diff && diff <= 255) {\n          flag |= shortFlag;\n          if (diff < 0) diff = -diff;else flag |= sameFlag;\n        }\n        points.push(diff);\n      }\n      return flag;\n    }\n  }]);\n  return $807e58506be70005$export$2e2bcd8739ae039;\n}();\nvar $4abbb6a5dbdc441a$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref13) {\n  _inherits($4abbb6a5dbdc441a$export$2e2bcd8739ae039, _ref13);\n  var _super15 = _createSuper($4abbb6a5dbdc441a$export$2e2bcd8739ae039);\n  function $4abbb6a5dbdc441a$export$2e2bcd8739ae039(font) {\n    var _this15;\n    _classCallCheck(this, $4abbb6a5dbdc441a$export$2e2bcd8739ae039);\n    _this15 = _super15.call(this, font);\n    _this15.glyphEncoder = new (0, $807e58506be70005$export$2e2bcd8739ae039)();\n    return _this15;\n  }\n  _createClass($4abbb6a5dbdc441a$export$2e2bcd8739ae039, [{\n    key: \"_addGlyph\",\n    value: function _addGlyph(gid) {\n      var glyph = this.font.getGlyph(gid);\n      var glyf = glyph._decode();\n      // get the offset to the glyph from the loca table\n      var curOffset = this.font.loca.offsets[gid];\n      var nextOffset = this.font.loca.offsets[gid + 1];\n      var stream = this.font._getTableStream(\"glyf\");\n      stream.pos += curOffset;\n      var buffer = stream.readBuffer(nextOffset - curOffset);\n      // if it is a compound glyph, include its components\n      if (glyf && glyf.numberOfContours < 0) {\n        buffer = new Uint8Array(buffer);\n        var view = new DataView(buffer.buffer);\n        var _iterator72 = _createForOfIteratorHelper(glyf.components),\n          _step72;\n        try {\n          for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n            var component = _step72.value;\n            gid = this.includeGlyph(component.glyphID);\n            view.setUint16(component.pos, gid);\n          }\n        } catch (err) {\n          _iterator72.e(err);\n        } finally {\n          _iterator72.f();\n        }\n      } else if (glyf && this.font._variationProcessor)\n        // If this is a TrueType variation glyph, re-encode the path\n        buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n      this.glyf.push(buffer);\n      this.loca.offsets.push(this.offset);\n      this.hmtx.metrics.push({\n        advance: glyph.advanceWidth,\n        bearing: glyph._getMetrics().leftBearing\n      });\n      this.offset += buffer.length;\n      return this.glyf.length - 1;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      // tables required by PDF spec:\n      //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n      //\n      // additional tables required for standalone fonts:\n      //   name, cmap, OS/2, post\n      this.glyf = [];\n      this.offset = 0;\n      this.loca = {\n        offsets: [],\n        version: this.font.loca.version\n      };\n      this.hmtx = {\n        metrics: [],\n        bearings: []\n      };\n      // include all the glyphs\n      // not using a for loop because we need to support adding more\n      // glyphs to the array as we go, and CoffeeScript caches the length.\n      var i = 0;\n      while (i < this.glyphs.length) this._addGlyph(this.glyphs[i++]);\n      var maxp = (0, $6uUbQ$clone)(this.font.maxp);\n      maxp.numGlyphs = this.glyf.length;\n      this.loca.offsets.push(this.offset);\n      var head = (0, $6uUbQ$clone)(this.font.head);\n      head.indexToLocFormat = this.loca.version;\n      var hhea = (0, $6uUbQ$clone)(this.font.hhea);\n      hhea.numberOfMetrics = this.hmtx.metrics.length;\n      // map = []\n      // for index in [0...256]\n      //     if index < @numGlyphs\n      //         map[index] = index\n      //     else\n      //         map[index] = 0\n      //\n      // cmapTable =\n      //     version: 0\n      //     length: 262\n      //     language: 0\n      //     codeMap: map\n      //\n      // cmap =\n      //     version: 0\n      //     numSubtables: 1\n      //     tables: [\n      //         platformID: 1\n      //         encodingID: 0\n      //         table: cmapTable\n      //     ]\n      // TODO: subset prep, cvt, fpgm?\n      return (0, $816c07a04b6dba87$export$2e2bcd8739ae039).toBuffer({\n        tables: {\n          head: head,\n          hhea: hhea,\n          loca: this.loca,\n          maxp: maxp,\n          \"cvt \": this.font[\"cvt \"],\n          prep: this.font.prep,\n          glyf: this.glyf,\n          hmtx: this.hmtx,\n          fpgm: this.font.fpgm\n        }\n      });\n    }\n  }]);\n  return $4abbb6a5dbdc441a$export$2e2bcd8739ae039;\n}((0, $5cc7476da92df375$export$2e2bcd8739ae039));\nvar $001d739428a71d5a$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref14) {\n  _inherits($001d739428a71d5a$export$2e2bcd8739ae039, _ref14);\n  var _super16 = _createSuper($001d739428a71d5a$export$2e2bcd8739ae039);\n  function $001d739428a71d5a$export$2e2bcd8739ae039(font) {\n    var _this16;\n    _classCallCheck(this, $001d739428a71d5a$export$2e2bcd8739ae039);\n    _this16 = _super16.call(this, font);\n    _this16.cff = _this16.font[\"CFF \"];\n    if (!_this16.cff) throw new Error(\"Not a CFF Font\");\n    return _this16;\n  }\n  _createClass($001d739428a71d5a$export$2e2bcd8739ae039, [{\n    key: \"subsetCharstrings\",\n    value: function subsetCharstrings() {\n      this.charstrings = [];\n      var gsubrs = {};\n      var _iterator73 = _createForOfIteratorHelper(this.glyphs),\n        _step73;\n      try {\n        for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n          var gid = _step73.value;\n          this.charstrings.push(this.cff.getCharString(gid));\n          var glyph = this.font.getGlyph(gid);\n          var path = glyph.path; // this causes the glyph to be parsed\n          for (var subr in glyph._usedGsubrs) gsubrs[subr] = true;\n        }\n      } catch (err) {\n        _iterator73.e(err);\n      } finally {\n        _iterator73.f();\n      }\n      this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n    }\n  }, {\n    key: \"subsetSubrs\",\n    value: function subsetSubrs(subrs, used) {\n      var res = [];\n      for (var _i57 = 0; _i57 < subrs.length; _i57++) {\n        var subr = subrs[_i57];\n        if (used[_i57]) {\n          this.cff.stream.pos = subr.offset;\n          res.push(this.cff.stream.readBuffer(subr.length));\n        } else res.push(new Uint8Array([11])); // return\n      }\n\n      return res;\n    }\n  }, {\n    key: \"subsetFontdict\",\n    value: function subsetFontdict(topDict) {\n      topDict.FDArray = [];\n      topDict.FDSelect = {\n        version: 0,\n        fds: []\n      };\n      var used_fds = {};\n      var used_subrs = [];\n      var fd_select = {};\n      var _iterator74 = _createForOfIteratorHelper(this.glyphs),\n        _step74;\n      try {\n        for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {\n          var gid = _step74.value;\n          var fd = this.cff.fdForGlyph(gid);\n          if (fd == null) continue;\n          if (!used_fds[fd]) {\n            topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n            used_subrs.push({});\n            fd_select[fd] = topDict.FDArray.length - 1;\n          }\n          used_fds[fd] = true;\n          topDict.FDSelect.fds.push(fd_select[fd]);\n          var glyph = this.font.getGlyph(gid);\n          var path = glyph.path; // this causes the glyph to be parsed\n          for (var subr in glyph._usedSubrs) used_subrs[fd_select[fd]][subr] = true;\n        }\n      } catch (err) {\n        _iterator74.e(err);\n      } finally {\n        _iterator74.f();\n      }\n      for (var _i58 = 0; _i58 < topDict.FDArray.length; _i58++) {\n        var dict = topDict.FDArray[_i58];\n        delete dict.FontName;\n        if (dict.Private && dict.Private.Subrs) {\n          dict.Private = Object.assign({}, dict.Private);\n          dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[_i58]);\n        }\n      }\n      return;\n    }\n  }, {\n    key: \"createCIDFontdict\",\n    value: function createCIDFontdict(topDict) {\n      var used_subrs = {};\n      var _iterator75 = _createForOfIteratorHelper(this.glyphs),\n        _step75;\n      try {\n        for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {\n          var gid = _step75.value;\n          var glyph = this.font.getGlyph(gid);\n          var path = glyph.path; // this causes the glyph to be parsed\n          for (var subr in glyph._usedSubrs) used_subrs[subr] = true;\n        }\n      } catch (err) {\n        _iterator75.e(err);\n      } finally {\n        _iterator75.f();\n      }\n      var privateDict = Object.assign({}, this.cff.topDict.Private);\n      if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n      topDict.FDArray = [{\n        Private: privateDict\n      }];\n      return topDict.FDSelect = {\n        version: 3,\n        nRanges: 1,\n        ranges: [{\n          first: 0,\n          fd: 0\n        }],\n        sentinel: this.charstrings.length\n      };\n    }\n  }, {\n    key: \"addString\",\n    value: function addString(string) {\n      if (!string) return null;\n      if (!this.strings) this.strings = [];\n      this.strings.push(string);\n      return (0, $229224aec43783c5$export$2e2bcd8739ae039).length + this.strings.length - 1;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      this.subsetCharstrings();\n      var charset = {\n        version: this.charstrings.length > 255 ? 2 : 1,\n        ranges: [{\n          first: 1,\n          nLeft: this.charstrings.length - 2\n        }]\n      };\n      var topDict = Object.assign({}, this.cff.topDict);\n      topDict.Private = null;\n      topDict.charset = charset;\n      topDict.Encoding = null;\n      topDict.CharStrings = this.charstrings;\n      for (var _i59 = 0, _arr2 = [\"version\", \"Notice\", \"Copyright\", \"FullName\", \"FamilyName\", \"Weight\", \"PostScript\", \"BaseFontName\", \"FontName\"]; _i59 < _arr2.length; _i59++) {\n        var key = _arr2[_i59];\n        topDict[key] = this.addString(this.cff.string(topDict[key]));\n      }\n      topDict.ROS = [this.addString(\"Adobe\"), this.addString(\"Identity\"), 0];\n      topDict.CIDCount = this.charstrings.length;\n      if (this.cff.isCIDFont) this.subsetFontdict(topDict);else this.createCIDFontdict(topDict);\n      var top = {\n        version: 1,\n        hdrSize: this.cff.hdrSize,\n        offSize: 4,\n        header: this.cff.header,\n        nameIndex: [this.cff.postscriptName],\n        topDictIndex: [topDict],\n        stringIndex: this.strings,\n        globalSubrIndex: this.gsubrs\n      };\n      return (0, $b84fd3dd9d8eddb2$export$2e2bcd8739ae039).toBuffer(top);\n    }\n  }]);\n  return $001d739428a71d5a$export$2e2bcd8739ae039;\n}((0, $5cc7476da92df375$export$2e2bcd8739ae039));\nvar $4c1709dee528ea76$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $4c1709dee528ea76$export$2e2bcd8739ae039(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    _classCallCheck(this, $4c1709dee528ea76$export$2e2bcd8739ae039);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTF\");\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n    // define properties for each table to lazily parse\n    for (var _tag4 in this.directory.tables) {\n      var table = this.directory.tables[_tag4];\n      if ((0, $c3395722bea751e2$export$2e2bcd8739ae039)[_tag4] && table.length > 0) Object.defineProperty(this, _tag4, {\n        get: this._getTable.bind(this, table)\n      });\n    }\n  }\n  _createClass($4c1709dee528ea76$export$2e2bcd8739ae039, [{\n    key: \"setDefaultLanguage\",\n    value: function setDefaultLanguage() {\n      var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.defaultLanguage = lang;\n    }\n  }, {\n    key: \"_getTable\",\n    value: function _getTable(table) {\n      if (!(table.tag in this._tables)) try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if ($d636bc798e7178db$export$bd5c5d8b8dcafd78) {\n          console.error(\"Error decoding table \".concat(table.tag));\n          console.error(e.stack);\n        }\n      }\n      return this._tables[table.tag];\n    }\n  }, {\n    key: \"_getTableStream\",\n    value: function _getTableStream(tag) {\n      var table = this.directory.tables[tag];\n      if (table) {\n        this.stream.pos = table.offset;\n        return this.stream;\n      }\n      return null;\n    }\n  }, {\n    key: \"_decodeDirectory\",\n    value: function _decodeDirectory() {\n      return this.directory = (0, $816c07a04b6dba87$export$2e2bcd8739ae039).decode(this.stream, {\n        _startOffset: 0\n      });\n    }\n  }, {\n    key: \"_decodeTable\",\n    value: function _decodeTable(table) {\n      var pos = this.stream.pos;\n      var stream = this._getTableStream(table.tag);\n      var result = (0, $c3395722bea751e2$export$2e2bcd8739ae039)[table.tag].decode(stream, this, table.length);\n      this.stream.pos = pos;\n      return result;\n    }\n    /**\n    * Gets a string from the font's `name` table\n    * `lang` is a BCP-47 language code.\n    * @return {string}\n    */\n  }, {\n    key: \"getName\",\n    value: function getName(key) {\n      var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultLanguage || $d636bc798e7178db$export$42940898df819940;\n      var record = this.name && this.name.records[key];\n      if (record)\n        // Attempt to retrieve the entry, depending on which translation is available:\n        return record[lang] || record[this.defaultLanguage] || record[$d636bc798e7178db$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n        || null;\n      return null;\n    }\n    /**\n    * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n    * @type {string}\n    */\n  }, {\n    key: \"postscriptName\",\n    get: function get() {\n      return this.getName(\"postscriptName\");\n    }\n    /**\n    * The font's full name, e.g. \"Helvetica Bold\"\n    * @type {string}\n    */\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.getName(\"fullName\");\n    }\n    /**\n    * The font's family name, e.g. \"Helvetica\"\n    * @type {string}\n    */\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.getName(\"fontFamily\");\n    }\n    /**\n    * The font's sub-family, e.g. \"Bold\".\n    * @type {string}\n    */\n  }, {\n    key: \"subfamilyName\",\n    get: function get() {\n      return this.getName(\"fontSubfamily\");\n    }\n    /**\n    * The font's copyright information\n    * @type {string}\n    */\n  }, {\n    key: \"copyright\",\n    get: function get() {\n      return this.getName(\"copyright\");\n    }\n    /**\n    * The font's version number\n    * @type {string}\n    */\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this.getName(\"version\");\n    }\n    /**\n    * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n    * @type {number}\n    */\n  }, {\n    key: \"ascent\",\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n    * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n    * @type {number}\n    */\n  }, {\n    key: \"descent\",\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n    * The amount of space that should be included between lines\n    * @type {number}\n    */\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n    * The offset from the normal underline position that should be used\n    * @type {number}\n    */\n  }, {\n    key: \"underlinePosition\",\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n    * The weight of the underline that should be used\n    * @type {number}\n    */\n  }, {\n    key: \"underlineThickness\",\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n    * If this is an italic font, the angle the cursor should be drawn at to match the font design\n    * @type {number}\n    */\n  }, {\n    key: \"italicAngle\",\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n    * The height of capital letters above the baseline.\n    * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n    * @type {number}\n    */\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      var os2 = this[\"OS/2\"];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n    * The height of lower case letters in the font.\n    * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n    * @type {number}\n    */\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      var os2 = this[\"OS/2\"];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n    * The number of glyphs in the font.\n    * @type {number}\n    */\n  }, {\n    key: \"numGlyphs\",\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n    * The size of the font’s internal coordinate grid\n    * @type {number}\n    */\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n    * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n    * @type {BBox}\n    */\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return Object.freeze(new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: \"_cmapProcessor\",\n    get: function get() {\n      return new (0, $f08dd41ef10b694c$export$2e2bcd8739ae039)(this.cmap);\n    }\n    /**\n    * An array of all of the unicode code points supported by the font.\n    * @type {number[]}\n    */\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n    /**\n    * Returns whether there is glyph in the font for the given unicode code point.\n    *\n    * @param {number} codePoint\n    * @return {boolean}\n    */\n  }, {\n    key: \"hasGlyphForCodePoint\",\n    value: function hasGlyphForCodePoint(codePoint) {\n      return !!this._cmapProcessor.lookup(codePoint);\n    }\n    /**\n    * Maps a single unicode code point to a Glyph object.\n    * Does not perform any advanced substitutions (there is no context to do so).\n    *\n    * @param {number} codePoint\n    * @return {Glyph}\n    */\n  }, {\n    key: \"glyphForCodePoint\",\n    value: function glyphForCodePoint(codePoint) {\n      return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n    }\n    /**\n    * Returns an array of Glyph objects for the given string.\n    * This is only a one-to-one mapping from characters to glyphs.\n    * For most uses, you should use font.layout (described below), which\n    * provides a much more advanced mapping supporting AAT and OpenType shaping.\n    *\n    * @param {string} string\n    * @return {Glyph[]}\n    */\n  }, {\n    key: \"glyphsForString\",\n    value: function glyphsForString(string) {\n      var glyphs = [];\n      var len = string.length;\n      var idx = 0;\n      var last = -1;\n      var state = -1;\n      while (idx <= len) {\n        var code = 0;\n        var nextState = 0;\n        if (idx < len) {\n          // Decode the next codepoint from UTF 16\n          code = string.charCodeAt(idx++);\n          if (0xd800 <= code && code <= 0xdbff && idx < len) {\n            var next = string.charCodeAt(idx);\n            if (0xdc00 <= next && next <= 0xdfff) {\n              idx++;\n              code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n            }\n          }\n          // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n          nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n        } else idx++;\n        if (state === 0 && nextState === 1)\n          // Variation selector following normal codepoint.\n          glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));else if (state === 0 && nextState === 0)\n          // Normal codepoint following normal codepoint.\n          glyphs.push(this.glyphForCodePoint(last));\n        last = code;\n        state = nextState;\n      }\n      return glyphs;\n    }\n  }, {\n    key: \"_layoutEngine\",\n    get: function get() {\n      return new (0, $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039)(this);\n    }\n    /**\n    * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n    *\n    * @param {string} string\n    * @param {string[]} [userFeatures]\n    * @param {string} [script]\n    * @param {string} [language]\n    * @param {string} [direction]\n    * @return {GlyphRun}\n    */\n  }, {\n    key: \"layout\",\n    value: function layout(string, userFeatures, script, language, direction) {\n      return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n    }\n    /**\n    * Returns an array of strings that map to the given glyph id.\n    * @param {number} gid - glyph id\n    */\n  }, {\n    key: \"stringsForGlyph\",\n    value: function stringsForGlyph(gid) {\n      return this._layoutEngine.stringsForGlyph(gid);\n    }\n    /**\n    * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n    * (or mapped AAT tags) supported by the font.\n    * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n    * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n    *\n    * @type {string[]}\n    */\n  }, {\n    key: \"availableFeatures\",\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: \"getAvailableFeatures\",\n    value: function getAvailableFeatures(script, language) {\n      return this._layoutEngine.getAvailableFeatures(script, language);\n    }\n  }, {\n    key: \"_getBaseGlyph\",\n    value: function _getBaseGlyph(glyph) {\n      var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (!this._glyphs[glyph]) {\n        if (this.directory.tables.glyf) this._glyphs[glyph] = new (0, $69aac16029968692$export$2e2bcd8739ae039)(glyph, characters, this);else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new (0, $62cc5109c6101893$export$2e2bcd8739ae039)(glyph, characters, this);\n      }\n      return this._glyphs[glyph] || null;\n    }\n    /**\n    * Returns a glyph object for the given glyph id.\n    * You can pass the array of code points this glyph represents for\n    * your use later, and it will be stored in the glyph object.\n    *\n    * @param {number} glyph\n    * @param {number[]} characters\n    * @return {Glyph}\n    */\n  }, {\n    key: \"getGlyph\",\n    value: function getGlyph(glyph) {\n      var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (!this._glyphs[glyph]) {\n        if (this.directory.tables.sbix) this._glyphs[glyph] = new (0, $25d8f049c222084c$export$2e2bcd8739ae039)(glyph, characters, this);else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new (0, $0d411f0165859681$export$2e2bcd8739ae039)(glyph, characters, this);else this._getBaseGlyph(glyph, characters);\n      }\n      return this._glyphs[glyph] || null;\n    }\n    /**\n    * Returns a Subset for this font.\n    * @return {Subset}\n    */\n  }, {\n    key: \"createSubset\",\n    value: function createSubset() {\n      if (this.directory.tables[\"CFF \"]) return new (0, $001d739428a71d5a$export$2e2bcd8739ae039)(this);\n      return new (0, $4abbb6a5dbdc441a$export$2e2bcd8739ae039)(this);\n    }\n    /**\n    * Returns an object describing the available variation axes\n    * that this font supports. Keys are setting tags, and values\n    * contain the axis name, range, and default value.\n    *\n    * @type {object}\n    */\n  }, {\n    key: \"variationAxes\",\n    get: function get() {\n      var res = {};\n      if (!this.fvar) return res;\n      var _iterator76 = _createForOfIteratorHelper(this.fvar.axis),\n        _step76;\n      try {\n        for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {\n          var axis = _step76.value;\n          res[axis.axisTag.trim()] = {\n            name: axis.name.en,\n            min: axis.minValue,\n            default: axis.defaultValue,\n            max: axis.maxValue\n          };\n        }\n      } catch (err) {\n        _iterator76.e(err);\n      } finally {\n        _iterator76.f();\n      }\n      return res;\n    }\n    /**\n    * Returns an object describing the named variation instances\n    * that the font designer has specified. Keys are variation names\n    * and values are the variation settings for this instance.\n    *\n    * @type {object}\n    */\n  }, {\n    key: \"namedVariations\",\n    get: function get() {\n      var res = {};\n      if (!this.fvar) return res;\n      var _iterator77 = _createForOfIteratorHelper(this.fvar.instance),\n        _step77;\n      try {\n        for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {\n          var instance = _step77.value;\n          var settings = {};\n          for (var _i60 = 0; _i60 < this.fvar.axis.length; _i60++) {\n            var axis = this.fvar.axis[_i60];\n            settings[axis.axisTag.trim()] = instance.coord[_i60];\n          }\n          res[instance.name.en] = settings;\n        }\n      } catch (err) {\n        _iterator77.e(err);\n      } finally {\n        _iterator77.f();\n      }\n      return res;\n    }\n    /**\n    * Returns a new font with the given variation settings applied.\n    * Settings can either be an instance name, or an object containing\n    * variation tags as specified by the `variationAxes` property.\n    *\n    * @param {object} settings\n    * @return {TTFFont}\n    */\n  }, {\n    key: \"getVariation\",\n    value: function getVariation(settings) {\n      if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n      if (typeof settings === \"string\") settings = this.namedVariations[settings];\n      if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\");\n      // normalize the coordinates\n      var coords = this.fvar.axis.map(function (axis, i) {\n        var axisTag = axis.axisTag.trim();\n        if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));else return axis.defaultValue;\n      });\n      var stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n      stream.pos = this._directoryPos;\n      var font = new $4c1709dee528ea76$export$2e2bcd8739ae039(stream, coords);\n      font._tables = this._tables;\n      return font;\n    }\n  }, {\n    key: \"_variationProcessor\",\n    get: function get() {\n      if (!this.fvar) return null;\n      var variationCoords = this.variationCoords;\n      // Ignore if no variation coords and not CFF2\n      if (!variationCoords && !this.CFF2) return null;\n      if (!variationCoords) variationCoords = this.fvar.axis.map(function (axis) {\n        return axis.defaultValue;\n      });\n      return new (0, $0bb840cac04e911b$export$2e2bcd8739ae039)(this, variationCoords);\n    }\n    // Standardized format plugin API\n  }, {\n    key: \"getFont\",\n    value: function getFont(name) {\n      return this.getVariation(name);\n    }\n  }], [{\n    key: \"probe\",\n    value: function probe(buffer) {\n      var format = (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4));\n      return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n    }\n  }]);\n  return $4c1709dee528ea76$export$2e2bcd8739ae039;\n}();\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\nvar $c1726355ecc5b889$var$WOFFDirectoryEntry = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  offset: new $6uUbQ$Pointer($6uUbQ$uint32, \"void\", {\n    type: \"global\"\n  }),\n  compLength: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  origChecksum: $6uUbQ$uint32\n});\nvar $c1726355ecc5b889$var$WOFFDirectory = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  flavor: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  numTables: $6uUbQ$uint16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  totalSfntSize: $6uUbQ$uint32,\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  metaOffset: $6uUbQ$uint32,\n  metaLength: $6uUbQ$uint32,\n  metaOrigLength: $6uUbQ$uint32,\n  privOffset: $6uUbQ$uint32,\n  privLength: $6uUbQ$uint32,\n  tables: new $6uUbQ$Array($c1726355ecc5b889$var$WOFFDirectoryEntry, \"numTables\")\n});\n$c1726355ecc5b889$var$WOFFDirectory.process = function () {\n  var tables1 = {};\n  var _iterator78 = _createForOfIteratorHelper(this.tables),\n    _step78;\n  try {\n    for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {\n      var table = _step78.value;\n      tables1[table.tag] = table;\n    }\n  } catch (err) {\n    _iterator78.e(err);\n  } finally {\n    _iterator78.f();\n  }\n  this.tables = tables1;\n};\nvar $c1726355ecc5b889$export$2e2bcd8739ae039 = $c1726355ecc5b889$var$WOFFDirectory;\nvar $760785214b9fc52c$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref15) {\n  _inherits($760785214b9fc52c$export$2e2bcd8739ae039, _ref15);\n  var _super17 = _createSuper($760785214b9fc52c$export$2e2bcd8739ae039);\n  function $760785214b9fc52c$export$2e2bcd8739ae039() {\n    var _this17;\n    _classCallCheck(this, $760785214b9fc52c$export$2e2bcd8739ae039);\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    _this17 = _super17.call.apply(_super17, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this17), \"type\", \"WOFF\");\n    return _this17;\n  }\n  _createClass($760785214b9fc52c$export$2e2bcd8739ae039, [{\n    key: \"_decodeDirectory\",\n    value: function _decodeDirectory() {\n      this.directory = (0, $c1726355ecc5b889$export$2e2bcd8739ae039).decode(this.stream, {\n        _startOffset: 0\n      });\n    }\n  }, {\n    key: \"_getTableStream\",\n    value: function _getTableStream(tag) {\n      var table = this.directory.tables[tag];\n      if (table) {\n        this.stream.pos = table.offset;\n        if (table.compLength < table.length) {\n          this.stream.pos += 2; // skip deflate header\n          var outBuffer = new Uint8Array(table.length);\n          var buf = (0, $6uUbQ$tinyinflate)(this.stream.readBuffer(table.compLength - 2), outBuffer);\n          return new $6uUbQ$DecodeStream(buf);\n        } else return this.stream;\n      }\n      return null;\n    }\n  }], [{\n    key: \"probe\",\n    value: function probe(buffer) {\n      return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOFF\";\n    }\n  }]);\n  return $760785214b9fc52c$export$2e2bcd8739ae039;\n}((0, $4c1709dee528ea76$export$2e2bcd8739ae039));\nvar $8046190c9f1ad19e$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref16) {\n  _inherits($8046190c9f1ad19e$export$2e2bcd8739ae039, _ref16);\n  var _super18 = _createSuper($8046190c9f1ad19e$export$2e2bcd8739ae039);\n  function $8046190c9f1ad19e$export$2e2bcd8739ae039() {\n    var _this18;\n    _classCallCheck(this, $8046190c9f1ad19e$export$2e2bcd8739ae039);\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    _this18 = _super18.call.apply(_super18, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this18), \"type\", \"WOFF2\");\n    return _this18;\n  }\n  _createClass($8046190c9f1ad19e$export$2e2bcd8739ae039, [{\n    key: \"_decode\",\n    value: function _decode() {\n      // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n      return this._font._transformedGlyphs[this.id];\n    }\n  }, {\n    key: \"_getCBox\",\n    value: function _getCBox() {\n      return this.path.bbox;\n    }\n  }]);\n  return $8046190c9f1ad19e$export$2e2bcd8739ae039;\n}((0, $69aac16029968692$export$2e2bcd8739ae039));\nvar $c28ec7bbb3b8de3a$var$Base128 = {\n  decode: function decode(stream) {\n    var result = 0;\n    var iterable = [0, 1, 2, 3, 4];\n    for (var j = 0; j < iterable.length; j++) {\n      var _i61 = iterable[j];\n      var code = stream.readUInt8();\n      // If any of the top seven bits are set then we're about to overflow.\n      if (result & 0xe0000000) throw new Error(\"Overflow\");\n      result = result << 7 | code & 0x7f;\n      if ((code & 0x80) === 0) return result;\n    }\n    throw new Error(\"Bad base 128 number\");\n  }\n};\nvar $c28ec7bbb3b8de3a$var$knownTags = [\"cmap\", \"head\", \"hhea\", \"hmtx\", \"maxp\", \"name\", \"OS/2\", \"post\", \"cvt \", \"fpgm\", \"glyf\", \"loca\", \"prep\", \"CFF \", \"VORG\", \"EBDT\", \"EBLC\", \"gasp\", \"hdmx\", \"kern\", \"LTSH\", \"PCLT\", \"VDMX\", \"vhea\", \"vmtx\", \"BASE\", \"GDEF\", \"GPOS\", \"GSUB\", \"EBSC\", \"JSTF\", \"MATH\", \"CBDT\", \"CBLC\", \"COLR\", \"CPAL\", \"SVG \", \"sbix\", \"acnt\", \"avar\", \"bdat\", \"bloc\", \"bsln\", \"cvar\", \"fdsc\", \"feat\", \"fmtx\", \"fvar\", \"gvar\", \"hsty\", \"just\", \"lcar\", \"mort\", \"morx\", \"opbd\", \"prop\", \"trak\", \"Zapf\", \"Silf\", \"Glat\", \"Gloc\", \"Feat\", \"Sill\"];\nvar $c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry = new $6uUbQ$Struct({\n  flags: $6uUbQ$uint8,\n  customTag: new $6uUbQ$Optional(new $6uUbQ$String(4), function (t) {\n    return (t.flags & 0x3f) === 0x3f;\n  }),\n  tag: function tag(t) {\n    return t.customTag || $c28ec7bbb3b8de3a$var$knownTags[t.flags & 0x3f];\n  },\n  length: $c28ec7bbb3b8de3a$var$Base128,\n  transformVersion: function transformVersion(t) {\n    return t.flags >>> 6 & 0x03;\n  },\n  transformed: function transformed(t) {\n    return t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0;\n  },\n  transformLength: new $6uUbQ$Optional($c28ec7bbb3b8de3a$var$Base128, function (t) {\n    return t.transformed;\n  })\n});\nvar $c28ec7bbb3b8de3a$var$WOFF2Directory = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  flavor: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  numTables: $6uUbQ$uint16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  totalSfntSize: $6uUbQ$uint32,\n  totalCompressedSize: $6uUbQ$uint32,\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  metaOffset: $6uUbQ$uint32,\n  metaLength: $6uUbQ$uint32,\n  metaOrigLength: $6uUbQ$uint32,\n  privOffset: $6uUbQ$uint32,\n  privLength: $6uUbQ$uint32,\n  tables: new $6uUbQ$Array($c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry, \"numTables\")\n});\n$c28ec7bbb3b8de3a$var$WOFF2Directory.process = function () {\n  var tables = {};\n  for (var _i62 = 0; _i62 < this.tables.length; _i62++) {\n    var table = this.tables[_i62];\n    tables[table.tag] = table;\n  }\n  return this.tables = tables;\n};\nvar $c28ec7bbb3b8de3a$export$2e2bcd8739ae039 = $c28ec7bbb3b8de3a$var$WOFF2Directory;\nvar $21ee218f84ac7f32$export$2e2bcd8739ae039 = /*#__PURE__*/function (_ref17) {\n  _inherits($21ee218f84ac7f32$export$2e2bcd8739ae039, _ref17);\n  var _super19 = _createSuper($21ee218f84ac7f32$export$2e2bcd8739ae039);\n  function $21ee218f84ac7f32$export$2e2bcd8739ae039() {\n    var _this19;\n    _classCallCheck(this, $21ee218f84ac7f32$export$2e2bcd8739ae039);\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    _this19 = _super19.call.apply(_super19, [this].concat(args));\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(_assertThisInitialized(_this19), \"type\", \"WOFF2\");\n    return _this19;\n  }\n  _createClass($21ee218f84ac7f32$export$2e2bcd8739ae039, [{\n    key: \"_decodeDirectory\",\n    value: function _decodeDirectory() {\n      this.directory = (0, $c28ec7bbb3b8de3a$export$2e2bcd8739ae039).decode(this.stream);\n      this._dataPos = this.stream.pos;\n    }\n  }, {\n    key: \"_decompress\",\n    value: function _decompress() {\n      // decompress data and setup table offsets if we haven't already\n      if (!this._decompressed) {\n        this.stream.pos = this._dataPos;\n        var buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n        var decompressedSize = 0;\n        for (var _tag5 in this.directory.tables) {\n          var entry = this.directory.tables[_tag5];\n          entry.offset = decompressedSize;\n          decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n        }\n        var decompressed = (0, $6uUbQ$brotlidecompressjs)(buffer, decompressedSize);\n        if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n        this.stream = new $6uUbQ$DecodeStream(decompressed);\n        this._decompressed = true;\n      }\n    }\n  }, {\n    key: \"_decodeTable\",\n    value: function _decodeTable(table) {\n      this._decompress();\n      return _get(_getPrototypeOf($21ee218f84ac7f32$export$2e2bcd8739ae039.prototype), \"_decodeTable\", this).call(this, table);\n    }\n    // Override this method to get a glyph and return our\n    // custom subclass if there is a glyf table.\n  }, {\n    key: \"_getBaseGlyph\",\n    value: function _getBaseGlyph(glyph) {\n      var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (!this._glyphs[glyph]) {\n        if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n          if (!this._transformedGlyphs) this._transformGlyfTable();\n          return this._glyphs[glyph] = new (0, $8046190c9f1ad19e$export$2e2bcd8739ae039)(glyph, characters, this);\n        } else return _get(_getPrototypeOf($21ee218f84ac7f32$export$2e2bcd8739ae039.prototype), \"_getBaseGlyph\", this).call(this, glyph, characters);\n      }\n    }\n  }, {\n    key: \"_transformGlyfTable\",\n    value: function _transformGlyfTable() {\n      this._decompress();\n      this.stream.pos = this.directory.tables.glyf.offset;\n      var table = $21ee218f84ac7f32$var$GlyfTable.decode(this.stream);\n      var glyphs = [];\n      for (var index = 0; index < table.numGlyphs; index++) {\n        var glyph = {};\n        var nContours = table.nContours.readInt16BE();\n        glyph.numberOfContours = nContours;\n        if (nContours > 0) {\n          var nPoints = [];\n          var totalPoints = 0;\n          for (var _i63 = 0; _i63 < nContours; _i63++) {\n            var r1 = $21ee218f84ac7f32$var$read255UInt16(table.nPoints);\n            totalPoints += r1;\n            nPoints.push(totalPoints);\n          }\n          glyph.points = $21ee218f84ac7f32$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n          for (var i1 = 0; i1 < nContours; i1++) glyph.points[nPoints[i1] - 1].endContour = true;\n          var instructionSize = $21ee218f84ac7f32$var$read255UInt16(table.glyphs);\n        } else if (nContours < 0) {\n          var haveInstructions = (0, $69aac16029968692$export$2e2bcd8739ae039).prototype._decodeComposite.call({\n            _font: this\n          }, glyph, table.composites);\n          if (haveInstructions) var instructionSize = $21ee218f84ac7f32$var$read255UInt16(table.glyphs);\n        }\n        glyphs.push(glyph);\n      }\n      this._transformedGlyphs = glyphs;\n    }\n  }], [{\n    key: \"probe\",\n    value: function probe(buffer) {\n      return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOF2\";\n    }\n  }]);\n  return $21ee218f84ac7f32$export$2e2bcd8739ae039;\n}((0, $4c1709dee528ea76$export$2e2bcd8739ae039)); // Special class that accepts a length and returns a sub-stream for that data\nvar $21ee218f84ac7f32$var$Substream = /*#__PURE__*/function () {\n  function $21ee218f84ac7f32$var$Substream(length) {\n    _classCallCheck(this, $21ee218f84ac7f32$var$Substream);\n    this.length = length;\n    this._buf = new $6uUbQ$Buffer(length);\n  }\n  _createClass($21ee218f84ac7f32$var$Substream, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      return new $6uUbQ$DecodeStream(this._buf.decode(stream, parent));\n    }\n  }]);\n  return $21ee218f84ac7f32$var$Substream;\n}(); // This struct represents the entire glyf table\nvar $21ee218f84ac7f32$var$GlyfTable = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  numGlyphs: $6uUbQ$uint16,\n  indexFormat: $6uUbQ$uint16,\n  nContourStreamSize: $6uUbQ$uint32,\n  nPointsStreamSize: $6uUbQ$uint32,\n  flagStreamSize: $6uUbQ$uint32,\n  glyphStreamSize: $6uUbQ$uint32,\n  compositeStreamSize: $6uUbQ$uint32,\n  bboxStreamSize: $6uUbQ$uint32,\n  instructionStreamSize: $6uUbQ$uint32,\n  nContours: new $21ee218f84ac7f32$var$Substream(\"nContourStreamSize\"),\n  nPoints: new $21ee218f84ac7f32$var$Substream(\"nPointsStreamSize\"),\n  flags: new $21ee218f84ac7f32$var$Substream(\"flagStreamSize\"),\n  glyphs: new $21ee218f84ac7f32$var$Substream(\"glyphStreamSize\"),\n  composites: new $21ee218f84ac7f32$var$Substream(\"compositeStreamSize\"),\n  bboxes: new $21ee218f84ac7f32$var$Substream(\"bboxStreamSize\"),\n  instructions: new $21ee218f84ac7f32$var$Substream(\"instructionStreamSize\")\n});\nvar $21ee218f84ac7f32$var$WORD_CODE = 253;\nvar $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2 = 254;\nvar $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1 = 255;\nvar $21ee218f84ac7f32$var$LOWEST_U_CODE = 253;\nfunction $21ee218f84ac7f32$var$read255UInt16(stream) {\n  var code = stream.readUInt8();\n  if (code === $21ee218f84ac7f32$var$WORD_CODE) return stream.readUInt16BE();\n  if (code === $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $21ee218f84ac7f32$var$LOWEST_U_CODE;\n  if (code === $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $21ee218f84ac7f32$var$LOWEST_U_CODE * 2;\n  return code;\n}\nfunction $21ee218f84ac7f32$var$withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\nfunction $21ee218f84ac7f32$var$decodeTriplet(flags, glyphs, nPoints) {\n  var y;\n  var x = y = 0;\n  var res = [];\n  for (var _i64 = 0; _i64 < nPoints; _i64++) {\n    var dx = 0,\n      dy = 0;\n    var flag = flags.readUInt8();\n    var onCurve = !(flag >> 7);\n    flag &= 0x7f;\n    if (flag < 10) {\n      dx = 0;\n      dy = $21ee218f84ac7f32$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n    } else if (flag < 20) {\n      dx = $21ee218f84ac7f32$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = $21ee218f84ac7f32$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = $21ee218f84ac7f32$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      var b2 = glyphs.readUInt8();\n      dx = $21ee218f84ac7f32$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n    } else {\n      dx = $21ee218f84ac7f32$var$withSign(flag, glyphs.readUInt16BE());\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n    x += dx;\n    y += dy;\n    res.push(new (0, $69aac16029968692$export$baf26146a414f24a)(onCurve, false, x, y));\n  }\n  return res;\n}\nvar $cd5853a56c68fec7$var$TTCHeader = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  0x00010000: {\n    numFonts: $6uUbQ$uint32,\n    offsets: new $6uUbQ$Array($6uUbQ$uint32, \"numFonts\")\n  },\n  0x00020000: {\n    numFonts: $6uUbQ$uint32,\n    offsets: new $6uUbQ$Array($6uUbQ$uint32, \"numFonts\"),\n    dsigTag: $6uUbQ$uint32,\n    dsigLength: $6uUbQ$uint32,\n    dsigOffset: $6uUbQ$uint32\n  }\n});\nvar $cd5853a56c68fec7$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $cd5853a56c68fec7$export$2e2bcd8739ae039(stream) {\n    _classCallCheck(this, $cd5853a56c68fec7$export$2e2bcd8739ae039);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTC\");\n    this.stream = stream;\n    if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n    this.header = $cd5853a56c68fec7$var$TTCHeader.decode(stream);\n  }\n  _createClass($cd5853a56c68fec7$export$2e2bcd8739ae039, [{\n    key: \"getFont\",\n    value: function getFont(name) {\n      var _iterator79 = _createForOfIteratorHelper(this.header.offsets),\n        _step79;\n      try {\n        for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {\n          var offset = _step79.value;\n          var stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n          stream.pos = offset;\n          var font = new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream);\n          if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every(function (v, i) {\n            return name[i] === v;\n          })) return font;\n        }\n      } catch (err) {\n        _iterator79.e(err);\n      } finally {\n        _iterator79.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n      var _iterator80 = _createForOfIteratorHelper(this.header.offsets),\n        _step80;\n      try {\n        for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {\n          var offset = _step80.value;\n          var stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n          stream.pos = offset;\n          fonts.push(new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream));\n        }\n      } catch (err) {\n        _iterator80.e(err);\n      } finally {\n        _iterator80.f();\n      }\n      return fonts;\n    }\n  }], [{\n    key: \"probe\",\n    value: function probe(buffer) {\n      return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"ttcf\";\n    }\n  }]);\n  return $cd5853a56c68fec7$export$2e2bcd8739ae039;\n}();\nvar $05f49f930186144e$var$DFontName = new $6uUbQ$String($6uUbQ$uint8);\nvar $05f49f930186144e$var$DFontData = new $6uUbQ$Struct({\n  len: $6uUbQ$uint32,\n  buf: new $6uUbQ$Buffer(\"len\")\n});\nvar $05f49f930186144e$var$Ref = new $6uUbQ$Struct({\n  id: $6uUbQ$uint16,\n  nameOffset: $6uUbQ$int16,\n  attr: $6uUbQ$uint8,\n  dataOffset: $6uUbQ$uint24,\n  handle: $6uUbQ$uint32\n});\nvar $05f49f930186144e$var$Type = new $6uUbQ$Struct({\n  name: new $6uUbQ$String(4),\n  maxTypeIndex: $6uUbQ$uint16,\n  refList: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array($05f49f930186144e$var$Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: \"parent\"\n  })\n});\nvar $05f49f930186144e$var$TypeList = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  types: new $6uUbQ$Array($05f49f930186144e$var$Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar $05f49f930186144e$var$DFontMap = new $6uUbQ$Struct({\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint8, 24),\n  typeList: new $6uUbQ$Pointer($6uUbQ$uint16, $05f49f930186144e$var$TypeList),\n  nameListOffset: new $6uUbQ$Pointer($6uUbQ$uint16, \"void\")\n});\nvar $05f49f930186144e$var$DFontHeader = new $6uUbQ$Struct({\n  dataOffset: $6uUbQ$uint32,\n  map: new $6uUbQ$Pointer($6uUbQ$uint32, $05f49f930186144e$var$DFontMap),\n  dataLength: $6uUbQ$uint32,\n  mapLength: $6uUbQ$uint32\n});\nvar $05f49f930186144e$export$2e2bcd8739ae039 = /*#__PURE__*/function () {\n  function $05f49f930186144e$export$2e2bcd8739ae039(stream) {\n    _classCallCheck(this, $05f49f930186144e$export$2e2bcd8739ae039);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"DFont\");\n    this.stream = stream;\n    this.header = $05f49f930186144e$var$DFontHeader.decode(this.stream);\n    var _iterator81 = _createForOfIteratorHelper(this.header.map.typeList.types),\n      _step81;\n    try {\n      for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {\n        var type = _step81.value;\n        var _iterator82 = _createForOfIteratorHelper(type.refList),\n          _step82;\n        try {\n          for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {\n            var ref = _step82.value;\n            if (ref.nameOffset >= 0) {\n              this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n              ref.name = $05f49f930186144e$var$DFontName.decode(this.stream);\n            } else ref.name = null;\n          }\n        } catch (err) {\n          _iterator82.e(err);\n        } finally {\n          _iterator82.f();\n        }\n        if (type.name === \"sfnt\") this.sfnt = type;\n      }\n    } catch (err) {\n      _iterator81.e(err);\n    } finally {\n      _iterator81.f();\n    }\n  }\n  _createClass($05f49f930186144e$export$2e2bcd8739ae039, [{\n    key: \"getFont\",\n    value: function getFont(name) {\n      if (!this.sfnt) return null;\n      var _iterator83 = _createForOfIteratorHelper(this.sfnt.refList),\n        _step83;\n      try {\n        for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {\n          var ref = _step83.value;\n          var pos = this.header.dataOffset + ref.dataOffset + 4;\n          var stream = new $6uUbQ$DecodeStream(this.stream.buffer.slice(pos));\n          var font = new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream);\n          if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every(function (v, i) {\n            return name[i] === v;\n          })) return font;\n        }\n      } catch (err) {\n        _iterator83.e(err);\n      } finally {\n        _iterator83.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n      var _iterator84 = _createForOfIteratorHelper(this.sfnt.refList),\n        _step84;\n      try {\n        for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {\n          var ref = _step84.value;\n          var pos = this.header.dataOffset + ref.dataOffset + 4;\n          var stream = new $6uUbQ$DecodeStream(this.stream.buffer.slice(pos));\n          fonts.push(new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream));\n        }\n      } catch (err) {\n        _iterator84.e(err);\n      } finally {\n        _iterator84.f();\n      }\n      return fonts;\n    }\n  }], [{\n    key: \"probe\",\n    value: function probe(buffer) {\n      var stream = new $6uUbQ$DecodeStream(buffer);\n      try {\n        var header = $05f49f930186144e$var$DFontHeader.decode(stream);\n      } catch (e) {\n        return false;\n      }\n      var _iterator85 = _createForOfIteratorHelper(header.map.typeList.types),\n        _step85;\n      try {\n        for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {\n          var type = _step85.value;\n          if (type.name === \"sfnt\") return true;\n        }\n      } catch (err) {\n        _iterator85.e(err);\n      } finally {\n        _iterator85.f();\n      }\n      return false;\n    }\n  }]);\n  return $05f49f930186144e$export$2e2bcd8739ae039;\n}(); // Register font formats\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $4c1709dee528ea76$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $760785214b9fc52c$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $21ee218f84ac7f32$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $cd5853a56c68fec7$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $05f49f930186144e$export$2e2bcd8739ae039));\nexport { $d636bc798e7178db$export$bd5c5d8b8dcafd78 as logErrors, $d636bc798e7178db$export$36b2f24e97d43be as registerFormat, $d636bc798e7178db$export$185802fd694ee1f5 as create, $d636bc798e7178db$export$42940898df819940 as defaultLanguage, $d636bc798e7178db$export$5157e7780d44cc36 as setDefaultLanguage };","map":{"version":3,"names":["$d636bc798e7178db$export$bd5c5d8b8dcafd78","$d636bc798e7178db$var$formats","$d636bc798e7178db$export$36b2f24e97d43be","format","push","$d636bc798e7178db$export$185802fd694ee1f5","buffer","postscriptName","i","length","probe","font","$6uUbQ$DecodeStream","getFont","Error","$d636bc798e7178db$export$42940898df819940","$d636bc798e7178db$export$5157e7780d44cc36","lang","arguments","undefined","$e71565f2ce09cb6b$export$69a3209f1a06c04d","target","key1","descriptor","get","value","call","Object","defineProperty","fn","cache1","Map","memoized","_len","args","Array","_key","key","has","result","apply","set","$26a62205ad06574e$var$SubHeader","$6uUbQ$Struct","firstCode","$6uUbQ$uint16","entryCount","idDelta","$6uUbQ$int16","idRangeOffset","$26a62205ad06574e$var$CmapGroup","startCharCode","$6uUbQ$uint32","endCharCode","glyphID","$26a62205ad06574e$var$UnicodeValueRange","startUnicodeValue","$6uUbQ$uint24","additionalCount","$6uUbQ$uint8","$26a62205ad06574e$var$UVSMapping","unicodeValue","$26a62205ad06574e$var$DefaultUVS","$6uUbQ$Array","$26a62205ad06574e$var$NonDefaultUVS","$26a62205ad06574e$var$VarSelectorRecord","varSelector","defaultUVS","$6uUbQ$Pointer","type","nonDefaultUVS","$26a62205ad06574e$var$CmapSubtable","$6uUbQ$VersionedStruct","language","codeMap","$6uUbQ$LazyArray","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","$6uUbQ$Reserved","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","$26a62205ad06574e$var$CmapEntry","platformID","encodingID","table","lazy","$26a62205ad06574e$export$2e2bcd8739ae039","version","numSubtables","tables","$f2612a29f92ac062$export$2e2bcd8739ae039","$6uUbQ$int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","$6uUbQ$Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","$2c179dd593583073$export$2e2bcd8739ae039","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","$bdc9060542264b85$var$HmtxEntry","advance","bearing","$bdc9060542264b85$export$2e2bcd8739ae039","metrics","parent","hhea","bearings","maxp","numGlyphs","$dbf51cb3d3fe409d$export$2e2bcd8739ae039","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","$e449ad78d50845fe$export$badc544e0651b6b1","languageID","$e449ad78d50845fe$export$479e671907f486d1","$e449ad78d50845fe$export$6fef87b7618bdf0b","$e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS","Set","$e449ad78d50845fe$var$MAC_ENCODINGS","$e449ad78d50845fe$var$encodingCache","$e449ad78d50845fe$export$1dceb3c14ed68bee","encoding","cached","mapping","res","charCodeAt","decoder","TextDecoder","Uint8Array","s","decode","i1","$e449ad78d50845fe$export$2092376fd002e13","$2bcf221753ec8e32$var$NameRecord","nameID","string","$6uUbQ$String","relativeTo","ctx","stringOffset","allowNull","$2bcf221753ec8e32$var$LangTagRecord","tag","$2bcf221753ec8e32$var$NameTable","count","records","langTagCount","langTags","$2bcf221753ec8e32$export$2e2bcd8739ae039","$2bcf221753ec8e32$var$NAMES","process","stream","_iterator","_createForOfIteratorHelper","_step","n","done","record","obj","err","e","f","preEncode","isArray","val","indexOf","en","size","$84b272aa31b70606$var$OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","$84b272aa31b70606$var$versions","versions","$84b272aa31b70606$export$2e2bcd8739ae039","$32d9e2eb9565d93c$export$2e2bcd8739ae039","$6uUbQ$fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","$5202bd9d9ad8eaac$export$2e2bcd8739ae039","controlValues","$5c0f37ca5ffb1850$export$2e2bcd8739ae039","instructions","$2b2b260902b1c57e$var$loca","_processed","$2b2b260902b1c57e$export$2e2bcd8739ae039","$7afb878c7bea4f66$export$2e2bcd8739ae039","controlValueProgram","$6c92b6371bce8bd9$export$2e2bcd8739ae039","$6uUbQ$Buffer","$43e9821ef3717eec$export$2e2bcd8739ae039","_classCallCheck","_createClass","getCFFVersion","hdrSize","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","concat","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","_iterator2","_step2","writeUInt8","_i2","_sizes","_iterator3","_step3","item1","$c2d28e92708f99da$var$FLOAT_EOF","$c2d28e92708f99da$var$FLOAT_LOOKUP","$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP","$c2d28e92708f99da$export$2e2bcd8739ae039","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","c1","c2","writeInt16BE","$61aa549f16d58b9b$export$2e2bcd8739ae039","ops","fields","_iterator4","_step4","field","decodeOperands","operands","_this","op","encodeOperands","_this2","defineProperties","_startOffset","$6uUbQ$PropertyDescriptor","dict","includePointers","pointerSize","startOffset","len","k","$6uUbQ$fastdeepequal","_iterator5","_step5","pointers","pointerOffset","_iterator6","_step6","_iterator7","_step7","_iterator8","_step8","op1","ptr","$0e34a43d05bde82c$export$2e2bcd8739ae039","_$6uUbQ$Pointer","_inherits","_super","_createSuper","options","_get","_getPrototypeOf","prototype","$0e34a43d05bde82c$var$Ptr","valueOf","$6d59db2e29cc77b3$var$CFFBlendOp","numBlends","pop","$6d59db2e29cc77b3$export$2e2bcd8739ae039","$229224aec43783c5$export$2e2bcd8739ae039","$bc0433d9b7e41f5f$export$dee0027060fa13bd","$bc0433d9b7e41f5f$export$4f58f497e14a53c3","$ef658f5c9a1488b2$export$c33b50336c234f16","$ef658f5c9a1488b2$export$3ed0f9e1fee8d489","$ef658f5c9a1488b2$export$dc28be11139d4120","$7cbbe4e24ef3cb75$var$LangSysTable","reqFeatureIndex","featureCount","featureIndexes","$7cbbe4e24ef3cb75$var$LangSysRecord","langSys","$7cbbe4e24ef3cb75$var$Script","defaultLangSys","langSysRecords","$7cbbe4e24ef3cb75$var$ScriptRecord","script","$7cbbe4e24ef3cb75$export$3e15fc05ce864229","$7cbbe4e24ef3cb75$var$FeatureParams","$7cbbe4e24ef3cb75$export$6e91cf7616333d5","featureParams","lookupCount","lookupListIndexes","$7cbbe4e24ef3cb75$var$FeatureRecord","feature","$7cbbe4e24ef3cb75$export$aa18130def4b6cb4","$7cbbe4e24ef3cb75$var$LookupFlags","markAttachmentType","$7cbbe4e24ef3cb75$export$df0008c6ff2da22a","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","$6uUbQ$Optional","useMarkFilteringSet","$7cbbe4e24ef3cb75$var$RangeRecord","startCoverageIndex","$7cbbe4e24ef3cb75$export$17608c3f81a6111","glyphCount","glyphs","rangeCount","rangeRecords","$7cbbe4e24ef3cb75$var$ClassRangeRecord","class","$7cbbe4e24ef3cb75$export$843d551fbbafef71","startGlyph","classValueArray","classRangeCount","classRangeRecord","$7cbbe4e24ef3cb75$export$8215d14a63d9fb10","a","deltaFormat","$7cbbe4e24ef3cb75$var$LookupRecord","sequenceIndex","lookupListIndex","$7cbbe4e24ef3cb75$var$Rule","input","lookupRecords","$7cbbe4e24ef3cb75$var$RuleSet","$7cbbe4e24ef3cb75$var$ClassRule","classes","$7cbbe4e24ef3cb75$var$ClassSet","$7cbbe4e24ef3cb75$export$841858b892ce1f4c","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","$7cbbe4e24ef3cb75$var$ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","$7cbbe4e24ef3cb75$var$ChainRuleSet","$7cbbe4e24ef3cb75$export$5e6d09e6861162f6","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","$1a47b0c45c1c22fe$var$F2DOT14","$6uUbQ$Fixed","$1a47b0c45c1c22fe$var$RegionAxisCoordinates","startCoord","peakCoord","endCoord","$1a47b0c45c1c22fe$var$VariationRegionList","axisCount","regionCount","variationRegions","$1a47b0c45c1c22fe$var$DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","$6uUbQ$int8","regionIndexCount","deltas","$1a47b0c45c1c22fe$var$ItemVariationData","itemCount","regionIndexes","deltaSets","$1a47b0c45c1c22fe$export$fe1b122a2710f241","variationRegionList","variationDataCount","itemVariationData","$1a47b0c45c1c22fe$var$ConditionTable","_","axisIndex","_defineProperty","$1a47b0c45c1c22fe$var$ConditionSet","conditionCount","conditionTable","$1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","$1a47b0c45c1c22fe$var$FeatureTableSubstitution","substitutionCount","substitutions","$1a47b0c45c1c22fe$var$FeatureVariationRecord","conditionSet","featureTableSubstitution","$1a47b0c45c1c22fe$export$441b70b7971dd419","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","$b84fd3dd9d8eddb2$var$PredefinedOp","predefinedOps","index","$b84fd3dd9d8eddb2$var$CFFEncodingVersion","_$6uUbQ$Number","_super2","$6uUbQ$Number","$b84fd3dd9d8eddb2$var$Range1","first","nLeft","$b84fd3dd9d8eddb2$var$Range2","$b84fd3dd9d8eddb2$var$CFFCustomEncoding","nCodes","codes","nRanges","ranges","$b84fd3dd9d8eddb2$var$CFFEncoding","$b84fd3dd9d8eddb2$var$RangeArray","_$6uUbQ$Array","_super3","$6uUbQ$resolveLength","range","$b84fd3dd9d8eddb2$var$CFFCustomCharset","CharStrings","$b84fd3dd9d8eddb2$var$CFFCharset","$b84fd3dd9d8eddb2$var$FDRange3","fd","$b84fd3dd9d8eddb2$var$FDRange4","$b84fd3dd9d8eddb2$var$FDSelect","fds","sentinel","$b84fd3dd9d8eddb2$var$ptr","$b84fd3dd9d8eddb2$var$CFFPrivateOp","$b84fd3dd9d8eddb2$var$FontDict","$b84fd3dd9d8eddb2$var$CFFTopDict","$b84fd3dd9d8eddb2$var$VariationStore","itemVariationStore","$b84fd3dd9d8eddb2$var$CFF2TopDict","$b84fd3dd9d8eddb2$var$CFFTop","$6uUbQ$fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","$b84fd3dd9d8eddb2$export$2e2bcd8739ae039","$822ac0d589e4e237$var$CFFFont","top","isCIDFont","ROS","sid","FullName","FamilyName","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","FDSelect","low","high","mid","privateDictForGlyph","FDArray","Private","$822ac0d589e4e237$export$2e2bcd8739ae039","$2bbf2bc1ce37cd8f$var$VerticalOrigin","glyphIndex","vertOriginY","$2bbf2bc1ce37cd8f$export$2e2bcd8739ae039","defaultVertOriginY","numVertOriginYMetrics","$0941618dc22a946d$export$16b227cb15d716a0","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","$0941618dc22a946d$export$62c53e75f69bfe12","bearingX","bearingY","$0941618dc22a946d$var$EBDTComponent","xOffset","yOffset","$0941618dc22a946d$var$ByteAligned","$0941618dc22a946d$var$BitAligned","$0941618dc22a946d$export$f1f5ddeb20d14f","data","pad","numComponents","components","dataLen","$9911c4c7201c13de$var$SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","$9911c4c7201c13de$var$CodeOffsetPair","glyphCode","$9911c4c7201c13de$var$IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","$9911c4c7201c13de$var$IndexSubtableArray","subtable","$9911c4c7201c13de$var$BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","$9911c4c7201c13de$export$2e2bcd8739ae039","numSizes","$abb847051efd51b1$var$ImageTable","ppem","resolution","imageOffsets","$abb847051efd51b1$export$2e2bcd8739ae039","numImgTables","imageTables","$eb629188f3dfefdd$var$LayerRecord","paletteIndex","$eb629188f3dfefdd$var$BaseGlyphRecord","firstLayerIndex","numLayers","$eb629188f3dfefdd$export$2e2bcd8739ae039","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","$08734b8e7dc64587$var$ColorRecord","blue","green","red","alpha","$08734b8e7dc64587$export$2e2bcd8739ae039","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","$497cef411d884e34$var$BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","$497cef411d884e34$var$BaseValues","defaultIndex","baseCoordCount","baseCoords","$497cef411d884e34$var$FeatMinMaxRecord","minCoord","maxCoord","$497cef411d884e34$var$MinMax","featMinMaxCount","featMinMaxRecords","$497cef411d884e34$var$BaseLangSysRecord","minMax","$497cef411d884e34$var$BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","$497cef411d884e34$var$BaseScriptRecord","$497cef411d884e34$var$BaseScriptList","$497cef411d884e34$var$BaseTagList","$497cef411d884e34$var$Axis","baseTagList","baseScriptList","$497cef411d884e34$export$2e2bcd8739ae039","horizAxis","vertAxis","$cf5f33c63ef209e6$var$AttachPoint","$cf5f33c63ef209e6$var$AttachList","attachPoints","$cf5f33c63ef209e6$var$CaretValue","caretValuePoint","$cf5f33c63ef209e6$var$LigGlyph","$cf5f33c63ef209e6$var$LigCaretList","ligGlyphCount","ligGlyphs","$cf5f33c63ef209e6$var$MarkGlyphSetsDef","markSetTableFormat","markSetCount","$cf5f33c63ef209e6$export$2e2bcd8739ae039","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","$47e0e8ef515d9903$var$ValueFormat","$47e0e8ef515d9903$var$types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","rel","yPlaDevice","xAdvDevice","yAdvDevice","$47e0e8ef515d9903$var$ValueRecord","buildStruct","struct","$47e0e8ef515d9903$var$PairValueRecord","secondGlyph","value1","value2","$47e0e8ef515d9903$var$PairSet","$47e0e8ef515d9903$var$Class2Record","$47e0e8ef515d9903$var$Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","$47e0e8ef515d9903$var$EntryExitRecord","entryAnchor","exitAnchor","$47e0e8ef515d9903$var$MarkRecord","markAnchor","$47e0e8ef515d9903$var$MarkArray","$47e0e8ef515d9903$var$BaseRecord","classCount","$47e0e8ef515d9903$var$BaseArray","$47e0e8ef515d9903$var$ComponentRecord","$47e0e8ef515d9903$var$LigatureAttach","$47e0e8ef515d9903$var$LigatureArray","$47e0e8ef515d9903$export$73a8cfb19cd43a0f","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","$47e0e8ef515d9903$export$2e2bcd8739ae039","scriptList","featureList","lookupList","featureVariations","$d3f442064af66e06$var$Sequence","$d3f442064af66e06$var$AlternateSet","$d3f442064af66e06$var$Ligature","compCount","$d3f442064af66e06$var$LigatureSet","$d3f442064af66e06$var$GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","$d3f442064af66e06$export$2e2bcd8739ae039","$71cfb3c4767fbd0c$var$JstfGSUBModList","$71cfb3c4767fbd0c$var$JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","$71cfb3c4767fbd0c$var$JstfLangSys","$71cfb3c4767fbd0c$var$JstfLangSysRecord","jstfLangSys","$71cfb3c4767fbd0c$var$JstfScript","extenderGlyphs","langSysCount","$71cfb3c4767fbd0c$var$JstfScriptRecord","$71cfb3c4767fbd0c$export$2e2bcd8739ae039","scriptCount","$d059a6bd2d3b5b63$var$VariableSizeNumber","_size","readUInt24BE","$d059a6bd2d3b5b63$var$MapDataEntry","entry","entryFormat","outerIndex","innerIndex","$d059a6bd2d3b5b63$var$DeltaSetIndexMap","mapCount","mapData","$d059a6bd2d3b5b63$export$2e2bcd8739ae039","advanceWidthMapping","LSBMapping","RSBMapping","$dceeca3e1977ce30$var$Signature","$dceeca3e1977ce30$var$SignatureBlock","cbSignature","signature","$dceeca3e1977ce30$export$2e2bcd8739ae039","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","$8acd740a9435aad0$var$GaspRange","rangeMaxPPEM","rangeGaspBehavior","$8acd740a9435aad0$export$2e2bcd8739ae039","numRanges","gaspRanges","$b5f380243c34d6a0$var$DeviceRecord","pixelSize","maximumWidth","widths","$b5f380243c34d6a0$export$2e2bcd8739ae039","sizeDeviceRecord","$ca2df1256966e313$var$KernPair","left","right","$ca2df1256966e313$var$ClassTable","firstGlyph","nGlyphs","$ca2df1256966e313$var$Kern2Array","off","leftTable","rowWidth","$ca2df1256966e313$var$KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","$ca2df1256966e313$var$KernTable","subVersion","padding","tupleIndex","$ca2df1256966e313$export$2e2bcd8739ae039","nTables","$7a9f92b0c46ebe33$export$2e2bcd8739ae039","yPels","$2b2ccc419d152631$export$2e2bcd8739ae039","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","$ca5b40b9bcda9c9b$var$Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","$ca5b40b9bcda9c9b$var$vTable","yPelHeight","$ca5b40b9bcda9c9b$var$VdmxGroup","recs","startsz","endsz","entries","$ca5b40b9bcda9c9b$export$2e2bcd8739ae039","numRecs","numRatios","ratioRanges","$69530a3c40755af0$export$2e2bcd8739ae039","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","$344073dd270f0e62$var$VmtxEntry","$344073dd270f0e62$export$2e2bcd8739ae039","vhea","$3793b781918cfced$var$shortFrac","$3793b781918cfced$var$Correspondence","fromCoord","toCoord","$3793b781918cfced$var$Segment","pairCount","correspondence","$3793b781918cfced$export$2e2bcd8739ae039","segment","$6cb7dd5f47d82580$var$UnboundedArrayAccessor","base","_items","getItem","inspect","constructor","name","$6cb7dd5f47d82580$export$c5af1eebc882e39a","_$6uUbQ$Array2","_super4","$6cb7dd5f47d82580$export$8351f8c2ae2f103c","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","$6cb7dd5f47d82580$export$79f7d93d790934ba","entryData","assign","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","$6cb7dd5f47d82580$export$105027425199cc51","ClassLookupTable","newStateOffset","StateHeader1","$6a3746e8c708f5a3$var$BslnSubtable","mappingData","standardGlyph","controlPoints","$6a3746e8c708f5a3$export$2e2bcd8739ae039","defaultBaseline","$d0c76fac617b308a$var$Setting","setting","fontFeatures","$d0c76fac617b308a$var$FeatureName","nSettings","settingTable","featureFlags","defaultSetting","$d0c76fac617b308a$export$2e2bcd8739ae039","featureNameCount","reserved1","reserved2","featureNames","$e83fd065f00fcd01$var$Axis","axisTag","minValue","defaultValue","maxValue","$e83fd065f00fcd01$var$Instance","coord","postscriptNameID","instanceSize","$e83fd065f00fcd01$export$2e2bcd8739ae039","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","$dbe33c8d3a7f131c$var$shortFrac","$dbe33c8d3a7f131c$var$Offset","$dbe33c8d3a7f131c$var$gvar","globalCoordCount","globalCoords","$dbe33c8d3a7f131c$export$2e2bcd8739ae039","$05b01887df96c4ee$var$ClassTable","subFeatureFlags","stateTable","$05b01887df96c4ee$var$WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","$05b01887df96c4ee$var$WidthDeltaCluster","$05b01887df96c4ee$var$ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","$05b01887df96c4ee$var$Action","actionClass","actionType","actionLength","actionData","$05b01887df96c4ee$var$PostcompensationAction","$05b01887df96c4ee$var$PostCompensationTable","lookupTable","$05b01887df96c4ee$var$JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","$05b01887df96c4ee$export$2e2bcd8739ae039","horizontal","vertical","$03ee6ebd54db1053$var$LigatureData","action","$03ee6ebd54db1053$var$ContextualData","markIndex","currentIndex","$03ee6ebd54db1053$var$InsertionData","currentInsertIndex","markedInsertIndex","$03ee6ebd54db1053$var$SubstitutionTable","items","$03ee6ebd54db1053$var$SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","$03ee6ebd54db1053$var$Subtable","$03ee6ebd54db1053$var$FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","$03ee6ebd54db1053$var$MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","$03ee6ebd54db1053$export$2e2bcd8739ae039","unused","nChains","chains","$b7492a80b0d1a056$var$OpticalBounds","bottom","$b7492a80b0d1a056$export$2e2bcd8739ae039","$c3395722bea751e2$var$tables","$c3395722bea751e2$export$2e2bcd8739ae039","cmap","head","hmtx","post","fpgm","loca","prep","glyf","VORG","EBLC","CBLC","sbix","COLR","CPAL","BASE","GDEF","GPOS","GSUB","JSTF","HVAR","DSIG","gasp","hdmx","kern","LTSH","PCLT","VDMX","vmtx","avar","bsln","feat","fvar","gvar","just","morx","opbd","$816c07a04b6dba87$var$TableEntry","checkSum","$816c07a04b6dba87$var$Directory","numTables","_iterator9","_step9","$6uUbQ$VoidPointer","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","$816c07a04b6dba87$export$2e2bcd8739ae039","$12727730ddfc8bfe$export$2e0ae67339d5f1ac","cmp","min","$12727730ddfc8bfe$export$d02631cccf789723","range1","$12727730ddfc8bfe$export$3d28c1996ced1f14","$12727730ddfc8bfe$var$CHARS","$12727730ddfc8bfe$var$LOOKUP","$12727730ddfc8bfe$export$94fdf11bafc8de6b","base64","bufferLength","bytes","p","encoded1","encoded2","encoded3","encoded4","$f08dd41ef10b694c$export$2e2bcd8739ae039","cmapTable","findSubtable","_iterator10","_step10","uvs","_iterator11","_step11","_step11$value","_slicedToArray","_iterator12","_step12","lookup","codepoint","variationSelector","getVariationSelector","rangeOffset","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_toConsumableArray","_iterator13","_step13","codePointsForGlyph","delta","c","g","_iterator14","_step14","_iterator15","_step15","$0bba3a9db57637f3$export$2e2bcd8739ae039","positions","id","getKerning","_iterator16","_step16","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","$0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","$6uUbQ$getCombiningClass","$f34600ab9d7f70d8$export$2e2bcd8739ae039","Infinity","addPoint","y","abs","$130d1a642ebcd2b7$var$UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS","_iterator17","_step17","$130d1a642ebcd2b7$export$b32f0b5f69d65e51","script1","$130d1a642ebcd2b7$export$ce50e82f12a827a4","$130d1a642ebcd2b7$export$e5cb25e204fb8450","idx","code","next","script2","$6uUbQ$getScript","$130d1a642ebcd2b7$export$16fab0757cfc223d","script3","$130d1a642ebcd2b7$var$RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54","script4","$be07b3e97a42687a$export$2e2bcd8739ae039","direction","_iterator18","_step18","_iterator19","_step19","_iterator20","_step20","bbox","$1ac75d9a55b67f01$export$2e2bcd8739ae039","$3b6302b64eccc32c$var$features","allTypographicFeatures","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","$3b6302b64eccc32c$var$feature","selector","$3b6302b64eccc32c$var$OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","slice","$3b6302b64eccc32c$var$AATMapping","ot","aat","$3b6302b64eccc32c$export$b813f7d2a1677c16","features1","r","$3b6302b64eccc32c$var$mapFeatureStrings","_f","isNaN","typeCode","settingCode","$3b6302b64eccc32c$export$bd6df347a4f391c4","features2","feature1","keys","$ff5ce077dae0f144$export$2e2bcd8739ae039","seg","glyphsForValue","classValue","_iterator21","_step21","_iterator22","_step22","segment1","$50c7aac9316f2948$var$START_OF_TEXT_STATE","$50c7aac9316f2948$var$START_OF_LINE_STATE","$50c7aac9316f2948$var$END_OF_TEXT_CLASS","$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS","$50c7aac9316f2948$var$DELETED_GLYPH_CLASS","$50c7aac9316f2948$var$END_OF_LINE_CLASS","$50c7aac9316f2948$var$DONT_ADVANCE","$50c7aac9316f2948$export$2e2bcd8739ae039","reverse","processEntry","currentState","dir","classCode","shouldAdvance","row","entryIndex","traverse","opts","state","visited","add","_this$stateTable","_iterator23","_step23","enter","exit","$55f71433a605c87d$var$MARK_FIRST","$55f71433a605c87d$var$MARK_LAST","$55f71433a605c87d$var$VERB","$55f71433a605c87d$var$SET_MARK","$55f71433a605c87d$var$SET_COMPONENT","$55f71433a605c87d$var$PERFORM_ACTION","$55f71433a605c87d$var$LAST_MASK","$55f71433a605c87d$var$STORE_MASK","$55f71433a605c87d$var$OFFSET_MASK","$55f71433a605c87d$var$VERTICAL_ONLY","$55f71433a605c87d$var$REVERSE_DIRECTION","$55f71433a605c87d$var$HORIZONTAL_AND_VERTICAL","$55f71433a605c87d$var$CURRENT_IS_KASHIDA_LIKE","$55f71433a605c87d$var$MARKED_IS_KASHIDA_LIKE","$55f71433a605c87d$var$CURRENT_INSERT_BEFORE","$55f71433a605c87d$var$MARKED_INSERT_BEFORE","$55f71433a605c87d$var$CURRENT_INSERT_COUNT","$55f71433a605c87d$var$MARKED_INSERT_COUNT","$55f71433a605c87d$export$2e2bcd8739ae039","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","_iterator24","_step24","chain","_iterator25","_step25","_iterator26","_step26","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","$55f71433a605c87d$var$reorderGlyphs","subsitutions","getGlyph","_this$ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","component","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_this$glyphs","insertions","getSupportedFeatures","_iterator27","_step27","_iterator28","_step28","generateInputs","generateInputCache","_iterator29","_step29","_iterator30","_step30","generateInputsForSubtable","_this3","stack","g1","found","_stack$pop","$55f71433a605c87d$var$swap","rangeA","rangeB","reverseA","reverseB","verb","$ba6dd74203be8728$export$2e2bcd8739ae039","morxProcessor","fallbackPosition","glyphRun","getAvailableFeatures","stringsForGlyph","glyphStrings","_iterator31","_step31","_addStrings","strings","_cmapProcessor","_iterator32","_step32","String","fromCodePoint","$94d7a73bd2edfc9a$export$2e2bcd8739ae039","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","_iterator33","_step33","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","_iterator34","_step34","processor","_iterator35","_step35","applyFeatures","$649970d87335b30f$var$VARIATION_FEATURES","$649970d87335b30f$var$COMMON_FEATURES","$649970d87335b30f$var$FRACTIONAL_FEATURES","$649970d87335b30f$var$HORIZONTAL_FEATURES","$649970d87335b30f$var$VERTICAL_FEATURES","$649970d87335b30f$var$DIRECTIONAL_FEATURES","ltr","rtl","$649970d87335b30f$export$2e2bcd8739ae039","plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","$6uUbQ$isDigit","$6uUbQ$swchelperssrc_define_propertymjs","$764eb544bbe1ccf0$var$trie","$6uUbQ$unicodetrie","$764eb544bbe1ccf0$var$FEATURES","$764eb544bbe1ccf0$var$ShapingClasses","Non_Joining","Left_Joining","Right_Joining","Dual_Joining","Join_Causing","ALAPH","Transparent","$764eb544bbe1ccf0$var$ISOL","$764eb544bbe1ccf0$var$FINA","$764eb544bbe1ccf0$var$FIN2","$764eb544bbe1ccf0$var$FIN3","$764eb544bbe1ccf0$var$MEDI","$764eb544bbe1ccf0$var$MED2","$764eb544bbe1ccf0$var$INIT","$764eb544bbe1ccf0$var$NONE","$764eb544bbe1ccf0$var$STATE_TABLE","$764eb544bbe1ccf0$export$2e2bcd8739ae039","_ref","_super5","prev","curAction","prevAction","$764eb544bbe1ccf0$var$getShapingClass","_$764eb544bbe1ccf0$va","category","$6uUbQ$getCategory","$85d408632270248b$export$2e2bcd8739ae039","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","increment","peekIndex","$a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS","$a83b9c36aaa94fd3$export$2e2bcd8739ae039","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","_iterator36","_step36","_iterator37","_step37","changed","repeat","_iterator38","_step38","_iterator39","_step39","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","_iterator40","_step40","_iterator41","_step41","lookupIndex","sort","_iterator42","_step42","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","filterRangeMinValue","filterRangeMaxValue","advances","applyLookups","glyphIterator","_iterator43","_step43","_step43$value","cur","_iterator44","_step44","applyLookup","applyLookupList","_iterator45","_step45","lookupRecord","_iterator46","_step46","coverageIndex","_iterator47","_step47","match","sequence","matched","sequenceMatches","sequenceMatchIndices","_this4","coverageSequenceMatches","_this5","getClassID","_iterator48","_step48","classSequenceMatches","_this6","classID","applyContext","_iterator49","_step49","rule","_iterator50","_step50","rule1","applyChainingContext","_iterator51","_step51","rules","_iterator52","_step52","rule2","$10e7b257e1a9a756$export$2e2bcd8739ae039","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","$6uUbQ$isMark","$e1c6bbc8cb416f8c$export$2e2bcd8739ae039","_ref2","_super6","$e1c6bbc8cb416f8c$var$getType","_$e1c6bbc8cb416f8c$va","$e1c6bbc8cb416f8c$var$STATE_TABLE","$e1c6bbc8cb416f8c$var$DECOMPOSE","hasGlyphForCodePoint","$e1c6bbc8cb416f8c$var$decompose","$e1c6bbc8cb416f8c$var$COMPOSE","$e1c6bbc8cb416f8c$var$compose","$e1c6bbc8cb416f8c$var$TONE_MARK","$e1c6bbc8cb416f8c$var$reorderToneMark","$e1c6bbc8cb416f8c$var$INVALID","$e1c6bbc8cb416f8c$var$insertDottedCircle","$e1c6bbc8cb416f8c$var$HANGUL_BASE","$e1c6bbc8cb416f8c$var$HANGUL_END","$e1c6bbc8cb416f8c$var$HANGUL_COUNT","$e1c6bbc8cb416f8c$var$L_BASE","$e1c6bbc8cb416f8c$var$V_BASE","$e1c6bbc8cb416f8c$var$T_BASE","$e1c6bbc8cb416f8c$var$L_COUNT","$e1c6bbc8cb416f8c$var$V_COUNT","$e1c6bbc8cb416f8c$var$T_COUNT","$e1c6bbc8cb416f8c$var$L_END","$e1c6bbc8cb416f8c$var$V_END","$e1c6bbc8cb416f8c$var$T_END","$e1c6bbc8cb416f8c$var$DOTTED_CIRCLE","$e1c6bbc8cb416f8c$var$isL","$e1c6bbc8cb416f8c$var$isV","$e1c6bbc8cb416f8c$var$isT","$e1c6bbc8cb416f8c$var$isTone","$e1c6bbc8cb416f8c$var$isLVT","$e1c6bbc8cb416f8c$var$isLV","$e1c6bbc8cb416f8c$var$isCombiningL","$e1c6bbc8cb416f8c$var$isCombiningV","$e1c6bbc8cb416f8c$var$isCombiningT","$e1c6bbc8cb416f8c$var$X","$e1c6bbc8cb416f8c$var$L","$e1c6bbc8cb416f8c$var$V","$e1c6bbc8cb416f8c$var$T","$e1c6bbc8cb416f8c$var$LV","$e1c6bbc8cb416f8c$var$LVT","$e1c6bbc8cb416f8c$var$M","$e1c6bbc8cb416f8c$var$NO_ACTION","$e1c6bbc8cb416f8c$var$getGlyph","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","del","$e1c6bbc8cb416f8c$var$getLength","advanceWidth","dottedCircle","$4b0735ca6c692ea5$exports","JSON","parse","$aa333a9607471296$exports","$90a9d3398ee54fe5$export$a513ea61a7bee91c","X","C","V","N","H","ZWNJ","ZWJ","M","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","Symbol","$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","$90a9d3398ee54fe5$export$8519deaa7de2b07","$90a9d3398ee54fe5$export$bbcd928767338e0d","$90a9d3398ee54fe5$export$ca9599b2a300afc","$90a9d3398ee54fe5$export$e99d119da76a0fc5","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","$90a9d3398ee54fe5$export$f647c9cfdd77d95a","_ref3","$parcel$interopDefault","$7826f90f6f0cecc9$var$decompositions","decompositions","$7826f90f6f0cecc9$var$trie","$7826f90f6f0cecc9$var$stateMachine","$6uUbQ$dfa","$7826f90f6f0cecc9$export$2e2bcd8739ae039","_ref4","_super7","$7826f90f6f0cecc9$var$setupSyllables","$7826f90f6f0cecc9$var$initialReordering","$7826f90f6f0cecc9$var$finalReordering","unicodeScript","indicConfig","isOldSpec","_loop","_i16","d","decomposed","$7826f90f6f0cecc9$var$indicCategory","$7826f90f6f0cecc9$var$indicPosition","$7826f90f6f0cecc9$var$IndicInfo","syllableType","syllable","_iterator53","_step53","_step53$value","tags","$7826f90f6f0cecc9$var$isConsonant","$7826f90f6f0cecc9$var$isJoiner","$7826f90f6f0cecc9$var$isHalantOrCoeng","$7826f90f6f0cecc9$var$wouldSubstitute","_iterator54","_step54","_layoutEngine","engine","GSUBProcessor","$7826f90f6f0cecc9$var$consonantPosition","consonant","info","$7826f90f6f0cecc9$var$nextSyllable","_glyphs$start$shaperI","limit","hasReph","rphf","seenBelow","i2","j","disallowDoubleHalants","lastPos","i3","i4","i5","i6","blwf","i7","i8","abvf","pstf","prefLen","pref","i9","cfar","i10","nonJoiner","tryPref","BASE_C","newPos","oldPos","tmp","newRephPos","reph","test","_ref5","$7ab494fe977143c6$var$categories","categories","$7ab494fe977143c6$var$decompositions","$7ab494fe977143c6$var$trie","$7ab494fe977143c6$var$stateMachine","$7ab494fe977143c6$export$2e2bcd8739ae039","_ref6","_super8","$7ab494fe977143c6$var$setupSyllables","$7ab494fe977143c6$var$clearSubstitutionFlags","$7ab494fe977143c6$var$recordRphf","$7ab494fe977143c6$var$recordPref","$7ab494fe977143c6$var$reorder","_loop2","_i31","$7ab494fe977143c6$var$useCategory","$7ab494fe977143c6$var$USEInfo","_iterator55","_step55","_step55$value","_iterator56","_step56","_iterator57","_step57","_iterator58","_step58","$7ab494fe977143c6$var$nextSyllable","$7ab494fe977143c6$var$isBase","$7ab494fe977143c6$var$isHalant","$102b6fe50f1d50b4$var$SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","$102b6fe50f1d50b4$export$7877a478dd30fd3d","_iterator59","_step59","shaper","$0a876c45f1f7c41c$export$2e2bcd8739ae039","_ref7","_super9","_this7","_this$glyphs2","curGlyph","replacement","USER_INDEX","_iterator60","_step60","ligature","characters","_iterator61","_step61","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","_iterator62","_step62","matchIndex","$c96c93587d49c14d$export$2e2bcd8739ae039","_ref8","_super10","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_iterator63","_step63","class1","class2","pair1","nextIndex","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","mark1Index","prevIndex","good","mark2Index","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","k1","$a62492810de27e3d$export$2e2bcd8739ae039","glyphInfos","GPOSProcessor","setup","_this8","_this9","glyphInfo","zeroMarkWidths","zeroMarkAdvances","cleanup","$4c0a7fa5df7a9ab1$export$2e2bcd8739ae039","unicodeLayoutEngine","kernProcessor","layout","glyphsForString","_iterator64","_step64","hideDefaultIgnorables","positioned","space","isDefaultIgnorable","ch","plane","_iterator65","_step65","_iterator66","_step66","from","$f43aec954cdfdf21$var$SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","$f43aec954cdfdf21$export$2e2bcd8739ae039","commands","_bbox","_cbox","toFunction","_this10","forEach","command","toSVG","cmds","round","join","_iterator67","_step67","command1","freeze","cx","cy","p0","p1","p2","p3","_iterator68","_step68","_c$args","_c$args2","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","_c$args3","b2ac","t1","sqrt","t2","mapPoints","path","_iterator69","_step69","_fn","_fn2","transform","m0","m1","m2","m3","m4","m5","tx","ty","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","_loop3","_arr","_i40","_len2","_key2","$7713b9b7b438dff8$export$2e2bcd8739ae039","$f92906be28e61769$export$2e2bcd8739ae039","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_this$_getTableMetric","leftBearing","_this$_getTableMetric2","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","$69aac16029968692$var$GlyfHeader","numberOfContours","$69aac16029968692$var$ON_CURVE","$69aac16029968692$var$X_SHORT_VECTOR","$69aac16029968692$var$Y_SHORT_VECTOR","$69aac16029968692$var$REPEAT","$69aac16029968692$var$SAME_X","$69aac16029968692$var$SAME_Y","$69aac16029968692$var$ARG_1_AND_2_ARE_WORDS","$69aac16029968692$var$ARGS_ARE_XY_VALUES","$69aac16029968692$var$ROUND_XY_TO_GRID","$69aac16029968692$var$WE_HAVE_A_SCALE","$69aac16029968692$var$MORE_COMPONENTS","$69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE","$69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO","$69aac16029968692$var$WE_HAVE_INSTRUCTIONS","$69aac16029968692$var$USE_MY_METRICS","$69aac16029968692$var$OVERLAP_COMPOUND","$69aac16029968692$var$SCALED_COMPONENT_OFFSET","$69aac16029968692$var$UNSCALED_COMPONENT_OFFSET","$69aac16029968692$export$baf26146a414f24a","onCurve","endContour","$69aac16029968692$var$Component","dx","dy","scale01","scale10","$69aac16029968692$export$2e2bcd8739ae039","_ref9","_super11","_assertThisInitialized","_this11","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","nextPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_this$_metrics","_getContours","_iterator70","_step70","contours","contour","directory","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","$62cc5109c6101893$export$2e2bcd8739ae039","_ref10","_super12","_this12","CFF2","bias","cff","trans","nStems","x1","y1","usedGsubrs","usedSubrs","open","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","subr","phase","c1x","c1y","c2x","c2y","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","$25d8f049c222084c$var$SBIXImage","originX","originY","buflen","$25d8f049c222084c$export$2e2bcd8739ae039","_ref11","_super13","_this13","getImageForSize","img","image","renderOutlines","$0d411f0165859681$var$COLRLayer","color","$0d411f0165859681$export$2e2bcd8739ae039","_ref12","_super14","_this14","layers","layer","cpal","colr","rec","baseLayer","_getBaseGlyph","_iterator71","_step71","_step71$value","fillColor","$0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS","$0bb840cac04e911b$var$TUPLE_COUNT_MASK","$0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD","$0bb840cac04e911b$var$INTERMEDIATE_TUPLE","$0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS","$0bb840cac04e911b$var$TUPLE_INDEX_MASK","$0bb840cac04e911b$var$POINTS_ARE_WORDS","$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK","$0bb840cac04e911b$var$DELTAS_ARE_ZERO","$0bb840cac04e911b$var$DELTAS_ARE_WORDS","$0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK","$0bb840cac04e911b$export$2e2bcd8739ae039","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","endCoords","a1","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","axisScalar","$5cc7476da92df375$var$resolved","Promise","resolve","$5cc7476da92df375$export$2e2bcd8739ae039","includeGlyph","$807e58506be70005$var$ON_CURVE","$807e58506be70005$var$X_SHORT_VECTOR","$807e58506be70005$var$Y_SHORT_VECTOR","$807e58506be70005$var$REPEAT","$807e58506be70005$var$SAME_X","$807e58506be70005$var$SAME_Y","$807e58506be70005$var$Point","$807e58506be70005$var$Glyf","xPoints","yPoints","$807e58506be70005$export$2e2bcd8739ae039","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","$6uUbQ$EncodeStream","shortFlag","sameFlag","diff","$4abbb6a5dbdc441a$export$2e2bcd8739ae039","_ref13","_super15","_this15","glyphEncoder","_addGlyph","curOffset","nextOffset","view","DataView","_iterator72","_step72","setUint16","$6uUbQ$clone","toBuffer","$001d739428a71d5a$export$2e2bcd8739ae039","_ref14","_super16","_this16","subsetCharstrings","charstrings","_iterator73","_step73","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","fd_select","_iterator74","_step74","FontName","createCIDFontdict","_iterator75","_step75","addString","Encoding","_i59","_arr2","CIDCount","$4c1709dee528ea76$export$2e2bcd8739ae039","variationCoords","defaultLanguage","_directoryPos","_tables","_glyphs","_decodeDirectory","_getTable","setDefaultLanguage","_decodeTable","console","error","getName","nextState","createSubset","_iterator76","_step76","trim","default","_iterator77","_step77","settings","getVariation","namedVariations","$c1726355ecc5b889$var$WOFFDirectoryEntry","compLength","origChecksum","$c1726355ecc5b889$var$WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","tables1","_iterator78","_step78","$c1726355ecc5b889$export$2e2bcd8739ae039","$760785214b9fc52c$export$2e2bcd8739ae039","_ref15","_super17","_this17","outBuffer","buf","$6uUbQ$tinyinflate","$8046190c9f1ad19e$export$2e2bcd8739ae039","_ref16","_super18","_this18","_transformedGlyphs","$c28ec7bbb3b8de3a$var$Base128","$c28ec7bbb3b8de3a$var$knownTags","$c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry","customTag","transformVersion","transformed","transformLength","$c28ec7bbb3b8de3a$var$WOFF2Directory","totalCompressedSize","$c28ec7bbb3b8de3a$export$2e2bcd8739ae039","$21ee218f84ac7f32$export$2e2bcd8739ae039","_ref17","_super19","_this19","_dataPos","_decompress","_decompressed","decompressedSize","decompressed","$6uUbQ$brotlidecompressjs","_transformGlyfTable","$21ee218f84ac7f32$var$GlyfTable","nContours","totalPoints","r1","$21ee218f84ac7f32$var$read255UInt16","$21ee218f84ac7f32$var$decodeTriplet","instructionSize","composites","$21ee218f84ac7f32$var$Substream","_buf","indexFormat","nContourStreamSize","nPointsStreamSize","flagStreamSize","glyphStreamSize","compositeStreamSize","bboxStreamSize","instructionStreamSize","bboxes","$21ee218f84ac7f32$var$WORD_CODE","$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2","$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1","$21ee218f84ac7f32$var$LOWEST_U_CODE","$21ee218f84ac7f32$var$withSign","baseval","b0","b2","$cd5853a56c68fec7$var$TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","$cd5853a56c68fec7$export$2e2bcd8739ae039","readString","_iterator79","_step79","fonts","_iterator80","_step80","$05f49f930186144e$var$DFontName","$05f49f930186144e$var$DFontData","$05f49f930186144e$var$Ref","nameOffset","attr","dataOffset","handle","$05f49f930186144e$var$Type","maxTypeIndex","refList","$05f49f930186144e$var$TypeList","types","$05f49f930186144e$var$DFontMap","typeList","nameListOffset","$05f49f930186144e$var$DFontHeader","dataLength","mapLength","$05f49f930186144e$export$2e2bcd8739ae039","_iterator81","_step81","_iterator82","_step82","sfnt","_iterator83","_step83","_iterator84","_step84","_iterator85","_step85"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/index.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/base.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/TTFFont.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/decorators.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/directory.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/index.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/cmap.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/head.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/hhea.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/hmtx.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/maxp.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/name.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/encodings.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/OS2.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/post.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/cvt.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/fpgm.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/loca.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/prep.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/glyf.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFFont.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFIndex.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFTop.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFDict.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFOperand.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFPointer.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFPrivateDict.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFStandardStrings.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFEncodings.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/cff/CFFCharsets.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/variations.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/opentype.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/VORG.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/EBLC.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/EBDT.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/sbix.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/COLR.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/CPAL.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/BASE.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/GDEF.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/GPOS.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/GSUB.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/JSTF.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/HVAR.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/DSIG.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/gasp.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/hdmx.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/kern.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/LTSH.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/PCLT.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/VDMX.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/vhea.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/vmtx.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/avar.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/bsln.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/aat.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/feat.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/fvar.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/gvar.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/just.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/morx.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/opbd.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/CmapProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/utils.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/layout/LayoutEngine.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/layout/KernProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/layout/UnicodeLayoutEngine.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/layout/GlyphRun.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/BBox.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/layout/Script.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/layout/GlyphPosition.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/aat/AATLayoutEngine.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/aat/AATFeatureMap.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/aat/AATMorxProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/aat/AATStateMachine.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/aat/AATLookupTable.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/OTLayoutEngine.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/ShapingPlan.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/index.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/DefaultShaper.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/ArabicShaper.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/HangulShaper.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/GlyphInfo.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/OTProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/GlyphIterator.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/IndicShaper.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/indic.json","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/use.json","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/indic-data.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/shapers/UniversalShaper.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/GSUBProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/opentype/GPOSProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/TTFGlyph.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/Glyph.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/Path.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/StandardNames.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/CFFGlyph.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/SBIXGlyph.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/COLRGlyph.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/GlyphVariationProcessor.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/subset/TTFSubset.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/subset/Subset.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/TTFGlyphEncoder.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/subset/CFFSubset.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/WOFFFont.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/WOFFDirectory.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/WOFF2Font.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/glyph/WOFF2Glyph.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/tables/WOFF2Directory.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/TrueTypeCollection.js","/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/fontkit/dist/src/DFont.js"],"sourcesContent":["import { registerFormat, create, defaultLanguage, setDefaultLanguage } from './base';\nimport TTFFont from './TTFFont';\nimport WOFFFont from './WOFFFont';\nimport WOFF2Font from './WOFF2Font';\nimport TrueTypeCollection from './TrueTypeCollection';\nimport DFont from './DFont';\n\n// Register font formats\nregisterFormat(TTFFont);\nregisterFormat(WOFFFont);\nregisterFormat(WOFF2Font);\nregisterFormat(TrueTypeCollection);\nregisterFormat(DFont);\n\nexport * from './base';\n","import {DecodeStream} from 'restructure';\n\nexport let logErrors = false;\n\nlet formats = [];\nexport function registerFormat(format) {\n  formats.push(format);\n};\n\nexport function create(buffer, postscriptName) {\n  for (let i = 0; i < formats.length; i++) {\n    let format = formats[i];\n    if (format.probe(buffer)) {\n      let font = new format(new DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nexport let defaultLanguage = 'en';\nexport function setDefaultLanguage(lang = 'en') {\n  defaultLanguage = lang;\n};\n","import * as r from 'restructure';\nimport { cache } from './decorators';\nimport * as fontkit from './base';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport CmapProcessor from './CmapProcessor';\nimport LayoutEngine from './layout/LayoutEngine';\nimport TTFGlyph from './glyph/TTFGlyph';\nimport CFFGlyph from './glyph/CFFGlyph';\nimport SBIXGlyph from './glyph/SBIXGlyph';\nimport COLRGlyph from './glyph/COLRGlyph';\nimport GlyphVariationProcessor from './glyph/GlyphVariationProcessor';\nimport TTFSubset from './subset/TTFSubset';\nimport CFFSubset from './subset/CFFSubset';\nimport BBox from './glyph/BBox';\nimport { asciiDecoder } from './utils';\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nexport default class TTFFont {\n  type = 'TTF';\n\n  static probe(buffer) {\n    let format = asciiDecoder.decode(buffer.slice(0, 4));\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  }\n\n  constructor(stream, variationCoords = null) {\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (let tag in this.directory.tables) {\n      let table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  setDefaultLanguage(lang = null) {\n    this.defaultLanguage = lang;\n  }\n\n  _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(`Error decoding table ${table.tag}`);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  }\n\n  _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {_startOffset: 0});\n  }\n\n  _decodeTable(table) {\n    let pos = this.stream.pos;\n\n    let stream = this._getTableStream(table.tag);\n    let result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  }\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  getName(key, lang = this.defaultLanguage || fontkit.defaultLanguage) {\n    let record = this.name && this.name.records[key];\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return (\n          record[lang]\n          || record[this.defaultLanguage]\n          || record[fontkit.defaultLanguage]\n          || record['en']\n          || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n          || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  get postscriptName() {\n    return this.getName('postscriptName');\n  }\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n  get fullName() {\n    return this.getName('fullName');\n  }\n\n  /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */\n  get familyName() {\n    return this.getName('fontFamily');\n  }\n\n  /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */\n  get subfamilyName() {\n    return this.getName('fontSubfamily');\n  }\n\n  /**\n   * The font's copyright information\n   * @type {string}\n   */\n  get copyright() {\n    return this.getName('copyright');\n  }\n\n  /**\n   * The font's version number\n   * @type {string}\n   */\n  get version() {\n    return this.getName('version');\n  }\n\n  /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */\n  get ascent() {\n    return this.hhea.ascent;\n  }\n\n  /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */\n  get descent() {\n    return this.hhea.descent;\n  }\n\n  /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */\n  get lineGap() {\n    return this.hhea.lineGap;\n  }\n\n  /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */\n  get underlinePosition() {\n    return this.post.underlinePosition;\n  }\n\n  /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */\n  get underlineThickness() {\n    return this.post.underlineThickness;\n  }\n\n  /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */\n  get italicAngle() {\n    return this.post.italicAngle;\n  }\n\n  /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */\n  get capHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.capHeight : this.ascent;\n  }\n\n  /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */\n  get xHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.xHeight : 0;\n  }\n\n  /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */\n  get numGlyphs() {\n    return this.maxp.numGlyphs;\n  }\n\n  /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */\n  get unitsPerEm() {\n    return this.head.unitsPerEm;\n  }\n\n  /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n  }\n\n  @cache\n  get _cmapProcessor() {\n    return new CmapProcessor(this.cmap);\n  }\n\n  /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */\n  @cache\n  get characterSet() {\n    return this._cmapProcessor.getCharacterSet();\n  }\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  glyphsForString(string) {\n    let glyphs = [];\n    let len = string.length;\n    let idx = 0;\n    let last = -1;\n    let state = -1;\n\n    while (idx <= len) {\n      let code = 0;\n      let nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          let next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = ((0xfe00 <= code && code <= 0xfe0f) || (0xe0100 <= code && code <= 0xe01ef)) ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  }\n\n  @cache\n  get _layoutEngine() {\n    return new LayoutEngine(this);\n  }\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  get availableFeatures() {\n    return this._layoutEngine.getAvailableFeatures();\n  }\n\n  getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  }\n\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  getGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n\n      } else if ((this.directory.tables.COLR) && (this.directory.tables.CPAL)) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  @cache\n  get variationAxes() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let axis of this.fvar.axis) {\n      res[axis.axisTag.trim()] = {\n        name: axis.name.en,\n        min: axis.minValue,\n        default: axis.defaultValue,\n        max: axis.maxValue\n      };\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */\n  @cache\n  get namedVariations() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let instance of this.fvar.instance) {\n      let settings = {};\n      for (let i = 0; i < this.fvar.axis.length; i++) {\n        let axis = this.fvar.axis[i];\n        settings[axis.axisTag.trim()] = instance.coord[i];\n      }\n\n      res[instance.name.en] = settings;\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  getVariation(settings) {\n    if (!(this.directory.tables.fvar && ((this.directory.tables.gvar && this.directory.tables.glyf) || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    let coords = this.fvar.axis.map((axis, i) => {\n      let axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    let stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    let font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  }\n\n  @cache\n  get _variationProcessor() {\n    if (!this.fvar) {\n      return null;\n    }\n\n    let variationCoords = this.variationCoords;\n\n    // Ignore if no variation coords and not CFF2\n    if (!variationCoords && !this.CFF2) {\n      return null;\n    }\n\n    if (!variationCoords) {\n      variationCoords = this.fvar.axis.map(axis => axis.defaultValue);\n    }\n\n    return new GlyphVariationProcessor(this, variationCoords);\n  }\n\n  // Standardized format plugin API\n  getFont(name) {\n    return this.getVariation(name);\n  }\n}\n","/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nexport function cache(target, key, descriptor) {\n  if (descriptor.get) {\n    let get = descriptor.get;\n    descriptor.get = function() {\n      let value = get.call(this);\n      Object.defineProperty(this, key, { value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    let fn = descriptor.value;\n\n    return {\n      get() {\n        let cache = new Map;\n        function memoized(...args) {\n          let key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          let result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        };\n\n        Object.defineProperty(this, key, {value: memoized});\n        return memoized;\n      }\n    };\n  }\n}\n","import * as r from 'restructure';\nimport Tables from './';\n\nlet TableEntry = new r.Struct({\n  tag:        new r.String(4),\n  checkSum:   r.uint32,\n  offset:     new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  length:     r.uint32\n});\n\nlet Directory = new r.Struct({\n  tag:            new r.String(4),\n  numTables:      r.uint16,\n  searchRange:    r.uint16,\n  entrySelector:  r.uint16,\n  rangeShift:     r.uint16,\n  tables:         new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function() {\n  if (!Array.isArray(this.tables)) {\n    let tables = [];\n    for (let tag in this.tables) {\n      let table = this.tables[tag];\n      if (table) {\n        tables.push({\n          tag: tag,\n          checkSum: 0,\n          offset: new r.VoidPointer(Tables[tag], table),\n          length: Tables[tag].size(table)\n        });\n      }\n    }\n    \n    this.tables = tables;\n  }\n\n  this.tag = 'true';\n  this.numTables = this.tables.length;\n\n  let maxExponentFor2 = Math.floor((Math.log(this.numTables) / Math.LN2));\n  let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n\n  this.searchRange =  maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nexport default Directory;\n","let tables = {};\nexport default tables;\n\n// Required Tables\nimport cmap from './cmap';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport maxp from './maxp';\nimport name from './name';\nimport OS2 from './OS2';\nimport post from './post';\n\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = name;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n\n// TrueType Outlines\nimport cvt from './cvt';\nimport fpgm from './fpgm';\nimport loca from './loca';\nimport prep from './prep';\nimport glyf from './glyf';\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n\n// PostScript Outlines\nimport CFFFont from '../cff/CFFFont';\nimport VORG from './VORG';\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\n\n\n// Bitmap Glyphs\nimport EBLC from './EBLC';\nimport sbix from './sbix';\nimport COLR from './COLR';\nimport CPAL from './CPAL';\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n\n// Advanced OpenType Tables\nimport BASE from './BASE';\nimport GDEF from './GDEF';\nimport GPOS from './GPOS';\nimport GSUB from './GSUB';\nimport JSTF from './JSTF';\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n// OpenType variations tables\nimport HVAR from './HVAR';\n\ntables.HVAR = HVAR;\n\n// Other OpenType Tables\nimport DSIG from './DSIG';\nimport gasp from './gasp';\nimport hdmx from './hdmx';\nimport kern from './kern';\nimport LTSH from './LTSH';\nimport PCLT from './PCLT';\nimport VDMX from './VDMX';\nimport vhea from './vhea';\nimport vmtx from './vmtx';\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n\n// Apple Advanced Typography Tables\nimport avar from './avar';\nimport bsln from './bsln';\nimport feat from './feat';\nimport fvar from './fvar';\nimport gvar from './gvar';\nimport just from './just';\nimport morx from './morx';\nimport opbd from './opbd';\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n","import * as r from 'restructure';\n\nlet SubHeader = new r.Struct({\n  firstCode:      r.uint16,\n  entryCount:     r.uint16,\n  idDelta:        r.int16,\n  idRangeOffset:  r.uint16\n});\n\nlet CmapGroup = new r.Struct({\n  startCharCode:  r.uint32,\n  endCharCode:    r.uint32,\n  glyphID:        r.uint32\n});\n\nlet UnicodeValueRange = new r.Struct({\n  startUnicodeValue:  r.uint24,\n  additionalCount:    r.uint8\n});\n\nlet UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID:      r.uint16\n});\n\nlet DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nlet NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\n\nlet VarSelectorRecord = new r.Struct({\n  varSelector:    r.uint24,\n  defaultUVS:     new r.Pointer(r.uint32, DefaultUVS, {type: 'parent'}),\n  nonDefaultUVS:  new r.Pointer(r.uint32, NonDefaultUVS, {type: 'parent'})\n});\n\nlet CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: { // Byte encoding\n    length:     r.uint16,   // Total table length in bytes (set to 262 for format 0)\n    language:   r.uint16,   // Language code for this encoding subtable, or zero if language-independent\n    codeMap:    new r.LazyArray(r.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length:           r.uint16,\n    language:         r.uint16,\n    subHeaderKeys:    new r.Array(r.uint16, 256),\n    subHeaderCount:   t => Math.max.apply(Math, t.subHeaderKeys),\n    subHeaders:       new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length:           r.uint16,              // Total table length in bytes\n    language:         r.uint16,              // Language code\n    segCountX2:       r.uint16,\n    segCount:         t => t.segCountX2 >> 1,\n    searchRange:      r.uint16,\n    entrySelector:    r.uint16,\n    rangeShift:       r.uint16,\n    endCode:          new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad:      new r.Reserved(r.uint16),       // This value should be zero\n    startCode:        new r.LazyArray(r.uint16, 'segCount'),\n    idDelta:          new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset:    new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, t => (t.length - t._currentOffset) / 2)\n  },\n\n  6: { // Trimmed table\n    length:         r.uint16,\n    language:       r.uint16,\n    firstCode:      r.uint16,\n    entryCount:     r.uint16,\n    glyphIndices:   new r.LazyArray(r.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint16,\n    is32:     new r.LazyArray(r.uint8, 8192),\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved:       new r.Reserved(r.uint16),\n    length:         r.uint32,\n    language:       r.uint32,\n    firstCode:      r.uint32,\n    entryCount:     r.uint32,\n    glyphIndices:   new r.LazyArray(r.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length:       r.uint32,\n    numRecords:   r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nlet CmapEntry = new r.Struct({\n  platformID:  r.uint16,  // Platform identifier\n  encodingID:  r.uint16,  // Platform-specific encoding identifier\n  table:       new r.Pointer(r.uint32, CmapSubtable, {type: 'parent', lazy: true})\n});\n\n// character to glyph mapping\nexport default new r.Struct({\n  version:      r.uint16,\n  numSubtables: r.uint16,\n  tables:       new r.Array(CmapEntry, 'numSubtables')\n});\n","import * as r from 'restructure';\n\n// font header\nexport default new r.Struct({\n  version:            r.int32,                   // 0x00010000 (version 1.0)\n  revision:           r.int32,                   // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber:        r.uint32,                  // set to 0x5F0F3CF5\n  flags:              r.uint16,\n  unitsPerEm:         r.uint16,                  // range from 64 to 16384\n  created:            new r.Array(r.int32, 2),\n  modified:           new r.Array(r.int32, 2),\n  xMin:               r.int16,                   // for all glyph bounding boxes\n  yMin:               r.int16,                   // for all glyph bounding boxes\n  xMax:               r.int16,                   // for all glyph bounding boxes\n  yMax:               r.int16,                   // for all glyph bounding boxes\n  macStyle:           new r.Bitfield(r.uint16, [\n    'bold', 'italic', 'underline', 'outline',\n    'shadow', 'condensed', 'extended'\n  ]),\n  lowestRecPPEM:      r.uint16,                  // smallest readable size in pixels\n  fontDirectionHint:  r.int16,\n  indexToLocFormat:   r.int16,                   // 0 for short offsets, 1 for long\n  glyphDataFormat:    r.int16                    // 0 for current format\n});\n","import * as r from 'restructure';\n\n// horizontal header\nexport default new r.Struct({\n  version:              r.int32,\n  ascent:               r.int16,   // Distance from baseline of highest ascender\n  descent:              r.int16,   // Distance from baseline of lowest descender\n  lineGap:              r.int16,   // Typographic line gap\n  advanceWidthMax:      r.uint16,  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing:   r.int16,   // Maximum advance width value in 'hmtx' table\n  minRightSideBearing:  r.int16,   // Minimum right sidebearing value\n  xMaxExtent:           r.int16,\n  caretSlopeRise:       r.int16,   // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun:        r.int16,   // 0 for vertical\n  caretOffset:          r.int16,   // Set to 0 for non-slanted fonts\n  reserved:             new r.Reserved(r.int16, 4),\n  metricDataFormat:     r.int16,   // 0 for current format\n  numberOfMetrics:      r.uint16   // Number of advance widths in 'hmtx' table\n});\n","import * as r from 'restructure';\n\nlet HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\n\nexport default new r.Struct({\n  metrics:    new r.LazyArray(HmtxEntry, t => t.parent.hhea.numberOfMetrics),\n  bearings:   new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n","import * as r from 'restructure';\n\n// maxiumum profile\nexport default new r.Struct({\n  version:                r.int32,\n  numGlyphs:              r.uint16,  // The number of glyphs in the font\n  maxPoints:              r.uint16,  // Maximum points in a non-composite glyph\n  maxContours:            r.uint16,  // Maximum contours in a non-composite glyph\n  maxComponentPoints:     r.uint16,  // Maximum points in a composite glyph\n  maxComponentContours:   r.uint16,  // Maximum contours in a composite glyph\n  maxZones:               r.uint16,  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints:      r.uint16,  // Maximum points used in Z0\n  maxStorage:             r.uint16,  // Number of Storage Area locations\n  maxFunctionDefs:        r.uint16,  // Number of FDEFs\n  maxInstructionDefs:     r.uint16,  // Number of IDEFs\n  maxStackElements:       r.uint16,  // Maximum stack depth\n  maxSizeOfInstructions:  r.uint16,  // Maximum byte count for glyph instructions\n  maxComponentElements:   r.uint16,  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth:      r.uint16   // Maximum levels of recursion; 1 for simple components\n});\n","import * as r from 'restructure';\nimport {getEncoding, LANGUAGES} from '../encodings';\n\nlet NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID:     r.uint16,\n  length:     r.uint16,\n  string:     new r.Pointer(r.uint16,\n    new r.String('length', t => getEncoding(t.platformID, t.encodingID, t.languageID)),\n    { type: 'parent', relativeTo: ctx => ctx.parent.stringOffset, allowNull: false }\n  )\n});\n\nlet LangTagRecord = new r.Struct({\n  length:  r.uint16,\n  tag:     new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {type: 'parent', relativeTo: ctx => ctx.stringOffset})\n});\n\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count'),\n    langTagCount:   r.uint16,\n    langTags:       new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nexport default NameTable;\n\nconst NAMES = [\n  'copyright',\n  'fontFamily',\n  'fontSubfamily',\n  'uniqueSubfamily',\n  'fullName',\n  'version',\n  'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n  'trademark',\n  'manufacturer',\n  'designer',\n  'description',\n  'vendorURL',\n  'designerURL',\n  'license',\n  'licenseURL',\n  null, // reserved\n  'preferredFamily',\n  'preferredSubfamily',\n  'compatibleFull',\n  'sampleText',\n  'postscriptCIDFontName',\n  'wwsFamilyName',\n  'wwsSubfamilyName'\n];\n\nNameTable.process = function(stream) {\n  var records = {};\n  for (let record of this.records) {\n    // find out what language this is for\n    let language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    // if the nameID is >= 256, it is a font feature record (AAT)\n    let key = record.nameID >= 256 ? 'fontFeatures' : (NAMES[record.nameID] || record.nameID);\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    let obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function() {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n\n  let records = [];\n  for (let key in this.records) {\n    let val = this.records[key];\n    if (key === 'fontFeatures') continue;\n\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: val.en.length * 2,\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n","/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nexport function getEncoding(platformID, encodingID, languageID = 0) {\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n  \n  return ENCODINGS[platformID][encodingID];\n}\n\nconst SINGLE_BYTE_ENCODINGS = new Set(['x-mac-roman', 'x-mac-cyrillic', 'iso-8859-6', 'iso-8859-8']);\nconst MAC_ENCODINGS = {\n  'x-mac-croatian': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n  'x-mac-gaelic': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n  'x-mac-greek': 'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n  'x-mac-icelandic': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n  'x-mac-inuit': 'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n  'x-mac-ce': 'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n  'x-mac-romanian': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n  'x-mac-turkish': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\nconst encodingCache = new Map();\n\nexport function getEncodingMapping(encoding) {\n  let cached = encodingCache.get(encoding);\n  if (cached) {\n    return cached;\n  }\n\n  // These encodings aren't supported by TextDecoder.\n  let mapping = MAC_ENCODINGS[encoding];\n  if (mapping) {\n    let res = new Map();\n    for (let i = 0; i < mapping.length; i++) {\n      res.set(mapping.charCodeAt(i), 0x80 + i);\n    }\n\n    encodingCache.set(encoding, res);\n    return res;\n  }\n\n  // Only single byte encodings can be mapped 1:1.\n  if (SINGLE_BYTE_ENCODINGS.has(encoding)) {\n    // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n    // Use this to create a mapping of code points.\n    let decoder = new TextDecoder(encoding);\n    let mapping = new Uint8Array(0x80);\n    for (let i = 0; i < 0x80; i++) {\n      mapping[i] = 0x80 + i;\n    }\n\n    let res = new Map();\n    let s = decoder.decode(mapping);\n    for (let i = 0; i < 0x80; i++) {\n      res.set(s.charCodeAt(i), 0x80 + i);\n    }\n\n    encodingCache.set(encoding, res);\n    return res;\n  }\n}\n\n// Map of platform ids to encoding ids.\nexport const ENCODINGS = [\n  // unicode\n  ['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n  \n  // macintosh\n  // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n  // 0\tRoman                 17\tMalayalam\n  // 1\tJapanese\t            18\tSinhalese\n  // 2\tTraditional Chinese\t  19\tBurmese\n  // 3\tKorean\t              20\tKhmer\n  // 4\tArabic\t              21\tThai\n  // 5\tHebrew\t              22\tLaotian\n  // 6\tGreek\t                23\tGeorgian\n  // 7\tRussian\t              24\tArmenian\n  // 8\tRSymbol\t              25\tSimplified Chinese\n  // 9\tDevanagari\t          26\tTibetan\n  // 10\tGurmukhi\t            27\tMongolian\n  // 11\tGujarati\t            28\tGeez\n  // 12\tOriya\t                29\tSlavic\n  // 13\tBengali\t              30\tVietnamese\n  // 14\tTamil\t                31\tSindhi\n  // 15\tTelugu\t              32\t(Uninterpreted)\n  // 16\tKannada\n  ['x-mac-roman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8',\n   'x-mac-greek', 'x-mac-cyrillic', 'x-mac-symbol', 'x-mac-devanagari', 'x-mac-gurmukhi', 'x-mac-gujarati',\n   'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese',\n   'Burmese', 'Khmer', 'iso-8859-11', 'Laotian', 'Georgian', 'Armenian', 'hz-gb-2312', \n   'Tibetan', 'Mongolian', 'Geez', 'x-mac-ce', 'Vietnamese', 'Sindhi'],\n  \n  // ISO (deprecated)\n  ['ascii'],\n  \n  // windows\n  // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n  ['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'x-cp20949', 'johab', null, null, null, 'utf16be']\n];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nexport const MAC_LANGUAGE_ENCODINGS = {\n  15: 'x-mac-icelandic',\n  17: 'x-mac-turkish',\n  18: 'x-mac-croatian',\n  24: 'x-mac-ce',\n  25: 'x-mac-ce',\n  26: 'x-mac-ce',\n  27: 'x-mac-ce',\n  28: 'x-mac-ce',\n  30: 'x-mac-icelandic',\n  37: 'x-mac-romanian',\n  38: 'x-mac-ce',\n  39: 'x-mac-ce',\n  40: 'x-mac-ce',\n  143: 'x-mac-inuit',\n  146: 'x-mac-gaelic'\n};\n\n// Map of platform ids to BCP-47 language codes.\nexport const LANGUAGES = [\n  // unicode\n  [],\n  \n  { // macintosh\n    0: 'en',        30: 'fo',       60: 'ks',       90: 'rw',\n    1: 'fr',        31: 'fa',       61: 'ku',       91: 'rn',\n    2: 'de',        32: 'ru',       62: 'sd',       92: 'ny',\n    3: 'it',        33: 'zh',       63: 'bo',       93: 'mg',\n    4: 'nl',        34: 'nl-BE',    64: 'ne',       94: 'eo',\n    5: 'sv',        35: 'ga',       65: 'sa',       128: 'cy',\n    6: 'es',        36: 'sq',       66: 'mr',       129: 'eu',\n    7: 'da',        37: 'ro',       67: 'bn',       130: 'ca',\n    8: 'pt',        38: 'cz',       68: 'as',       131: 'la',\n    9: 'no',        39: 'sk',       69: 'gu',       132: 'qu',\n    10: 'he',       40: 'si',       70: 'pa',       133: 'gn',\n    11: 'ja',       41: 'yi',       71: 'or',       134: 'ay',\n    12: 'ar',       42: 'sr',       72: 'ml',       135: 'tt',\n    13: 'fi',       43: 'mk',       73: 'kn',       136: 'ug',\n    14: 'el',       44: 'bg',       74: 'ta',       137: 'dz',\n    15: 'is',       45: 'uk',       75: 'te',       138: 'jv',\n    16: 'mt',       46: 'be',       76: 'si',       139: 'su',\n    17: 'tr',       47: 'uz',       77: 'my',       140: 'gl',\n    18: 'hr',       48: 'kk',       78: 'km',       141: 'af',\n    19: 'zh-Hant',  49: 'az-Cyrl',  79: 'lo',       142: 'br',\n    20: 'ur',       50: 'az-Arab',  80: 'vi',       143: 'iu',\n    21: 'hi',       51: 'hy',       81: 'id',       144: 'gd',\n    22: 'th',       52: 'ka',       82: 'tl',       145: 'gv',\n    23: 'ko',       53: 'mo',       83: 'ms',       146: 'ga',\n    24: 'lt',       54: 'ky',       84: 'ms-Arab',  147: 'to',\n    25: 'pl',       55: 'tg',       85: 'am',       148: 'el-polyton',\n    26: 'hu',       56: 'tk',       86: 'ti',       149: 'kl',\n    27: 'es',       57: 'mn-CN',    87: 'om',       150: 'az',\n    28: 'lv',       58: 'mn',       88: 'so',       151: 'nn',\n    29: 'se',       59: 'ps',       89: 'sw',\n  },\n  \n  // ISO (deprecated)\n  [],\n  \n  { // windows                                        \n    0x0436: 'af',       0x4009: 'en-IN',    0x0487: 'rw',          0x0432: 'tn',       \n    0x041C: 'sq',       0x1809: 'en-IE',    0x0441: 'sw',          0x045B: 'si',          \n    0x0484: 'gsw',      0x2009: 'en-JM',    0x0457: 'kok',         0x041B: 'sk',          \n    0x045E: 'am',       0x4409: 'en-MY',    0x0412: 'ko',          0x0424: 'sl',          \n    0x1401: 'ar-DZ',    0x1409: 'en-NZ',    0x0440: 'ky',          0x2C0A: 'es-AR',       \n    0x3C01: 'ar-BH',    0x3409: 'en-PH',    0x0454: 'lo',          0x400A: 'es-BO',       \n    0x0C01: 'ar',       0x4809: 'en-SG',    0x0426: 'lv',          0x340A: 'es-CL',       \n    0x0801: 'ar-IQ',    0x1C09: 'en-ZA',    0x0427: 'lt',          0x240A: 'es-CO',       \n    0x2C01: 'ar-JO',    0x2C09: 'en-TT',    0x082E: 'dsb',         0x140A: 'es-CR',       \n    0x3401: 'ar-KW',    0x0809: 'en-GB',    0x046E: 'lb',          0x1C0A: 'es-DO',       \n    0x3001: 'ar-LB',    0x0409: 'en',       0x042F: 'mk',          0x300A: 'es-EC',       \n    0x1001: 'ar-LY',    0x3009: 'en-ZW',    0x083E: 'ms-BN',       0x440A: 'es-SV',       \n    0x1801: 'ary',      0x0425: 'et',       0x043E: 'ms',          0x100A: 'es-GT',       \n    0x2001: 'ar-OM',    0x0438: 'fo',       0x044C: 'ml',          0x480A: 'es-HN',       \n    0x4001: 'ar-QA',    0x0464: 'fil',      0x043A: 'mt',          0x080A: 'es-MX',       \n    0x0401: 'ar-SA',    0x040B: 'fi',       0x0481: 'mi',          0x4C0A: 'es-NI',       \n    0x2801: 'ar-SY',    0x080C: 'fr-BE',    0x047A: 'arn',         0x180A: 'es-PA',       \n    0x1C01: 'aeb',      0x0C0C: 'fr-CA',    0x044E: 'mr',          0x3C0A: 'es-PY',       \n    0x3801: 'ar-AE',    0x040C: 'fr',       0x047C: 'moh',         0x280A: 'es-PE',       \n    0x2401: 'ar-YE',    0x140C: 'fr-LU',    0x0450: 'mn',          0x500A: 'es-PR',       \n    0x042B: 'hy',       0x180C: 'fr-MC',    0x0850: 'mn-CN',       0x0C0A: 'es',          \n    0x044D: 'as',       0x100C: 'fr-CH',    0x0461: 'ne',          0x040A: 'es',          \n    0x082C: 'az-Cyrl',  0x0462: 'fy',       0x0414: 'nb',          0x540A: 'es-US',       \n    0x042C: 'az',       0x0456: 'gl',       0x0814: 'nn',          0x380A: 'es-UY',     \n    0x046D: 'ba',       0x0437: 'ka',       0x0482: 'oc',          0x200A: 'es-VE',       \n    0x042D: 'eu',       0x0C07: 'de-AT',    0x0448: 'or',          0x081D: 'sv-FI',       \n    0x0423: 'be',       0x0407: 'de',       0x0463: 'ps',          0x041D: 'sv',          \n    0x0845: 'bn',       0x1407: 'de-LI',    0x0415: 'pl',          0x045A: 'syr',         \n    0x0445: 'bn-IN',    0x1007: 'de-LU',    0x0416: 'pt',          0x0428: 'tg',          \n    0x201A: 'bs-Cyrl',  0x0807: 'de-CH',    0x0816: 'pt-PT',       0x085F: 'tzm',         \n    0x141A: 'bs',       0x0408: 'el',       0x0446: 'pa',          0x0449: 'ta',          \n    0x047E: 'br',       0x046F: 'kl',       0x046B: 'qu-BO',       0x0444: 'tt',          \n    0x0402: 'bg',       0x0447: 'gu',       0x086B: 'qu-EC',       0x044A: 'te',          \n    0x0403: 'ca',       0x0468: 'ha',       0x0C6B: 'qu',          0x041E: 'th',          \n    0x0C04: 'zh-HK',    0x040D: 'he',       0x0418: 'ro',          0x0451: 'bo',          \n    0x1404: 'zh-MO',    0x0439: 'hi',       0x0417: 'rm',          0x041F: 'tr',          \n    0x0804: 'zh',       0x040E: 'hu',       0x0419: 'ru',          0x0442: 'tk',          \n    0x1004: 'zh-SG',    0x040F: 'is',       0x243B: 'smn',         0x0480: 'ug',          \n    0x0404: 'zh-TW',    0x0470: 'ig',       0x103B: 'smj-NO',      0x0422: 'uk',          \n    0x0483: 'co',       0x0421: 'id',       0x143B: 'smj',         0x042E: 'hsb',         \n    0x041A: 'hr',       0x045D: 'iu',       0x0C3B: 'se-FI',       0x0420: 'ur',          \n    0x101A: 'hr-BA',    0x085D: 'iu-Latn',  0x043B: 'se',          0x0843: 'uz-Cyrl',     \n    0x0405: 'cs',       0x083C: 'ga',       0x083B: 'se-SE',       0x0443: 'uz',          \n    0x0406: 'da',       0x0434: 'xh',       0x203B: 'sms',         0x042A: 'vi',          \n    0x048C: 'prs',      0x0435: 'zu',       0x183B: 'sma-NO',      0x0452: 'cy',          \n    0x0465: 'dv',       0x0410: 'it',       0x1C3B: 'sms',         0x0488: 'wo',          \n    0x0813: 'nl-BE',    0x0810: 'it-CH',    0x044F: 'sa',          0x0485: 'sah',         \n    0x0413: 'nl',       0x0411: 'ja',       0x1C1A: 'sr-Cyrl-BA',  0x0478: 'ii',          \n    0x0C09: 'en-AU',    0x044B: 'kn',       0x0C1A: 'sr',          0x046A: 'yo',           \n    0x2809: 'en-BZ',    0x043F: 'kk',       0x181A: 'sr-Latn-BA',  \n    0x1009: 'en-CA',    0x0453: 'km',       0x081A: 'sr-Latn',     \n    0x2409: 'en-029',   0x0486: 'quc',      0x046C: 'nso',         \n  }\n];\n","import * as r from 'restructure';\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth:          r.int16,   // average weighted advance width of lower case letters and space\n    usWeightClass:          r.uint16,  // visual weight of stroke in glyphs\n    usWidthClass:           r.uint16,  // relative change from the normal aspect ratio (width to height ratio)\n    fsType:                 new r.Bitfield(r.uint16, [ // Indicates font embedding licensing rights\n      null, 'noEmbedding', 'viewOnly', 'editable', null,\n      null, null, null, 'noSubsetting', 'bitmapOnly'\n    ]),\n    ySubscriptXSize:        r.int16,   // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize:        r.int16,   // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset:      r.int16,   // recommended horizontal offset for subscripts\n    ySubscriptYOffset:      r.int16,   // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize:      r.int16,   // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize:      r.int16,   // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset:    r.int16,   // recommended horizontal offset for superscripts\n    ySuperscriptYOffset:    r.int16,   // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize:         r.int16,   // width of the strikeout stroke\n    yStrikeoutPosition:     r.int16,   // position of the strikeout stroke relative to the baseline\n    sFamilyClass:           r.int16,   // classification of font-family design\n    panose:                 new r.Array(r.uint8, 10),   // describe the visual characteristics of a given typeface\n    ulCharRange:            new r.Array(r.uint32, 4),\n    vendorID:               new r.String(4),          // four character identifier for the font vendor\n    fsSelection:            new r.Bitfield(r.uint16, [  // bit field containing information about the font\n      'italic', 'underscore', 'negative', 'outlined', 'strikeout',\n      'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique'\n    ]),\n    usFirstCharIndex:       r.uint16,  // The minimum Unicode index in this font\n    usLastCharIndex:        r.uint16   // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16\n  },\n\n  5: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16,\n\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\n\nlet versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\nexport default OS2;\n","import * as r from 'restructure';\n\n// PostScript information\nexport default new r.VersionedStruct(r.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle:        r.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition:  r.int16,   // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,   // Suggested values for the underline thickness\n    isFixedPitch:       r.uint32,  // Whether the font is monospaced\n    minMemType42:       r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42:       r.uint32,  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1:        r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1:        r.uint32   // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names:          new r.Array(new r.String(r.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets:        new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new r.Array(r.uint32, t => t.parent.maxp.numGlyphs)\n  }\n});\n","import * as r from 'restructure';\n\n// An array of predefined values accessible by instructions\nexport default new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n","import * as r from 'restructure';\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nexport default new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n","import * as r from 'restructure';\n\nlet loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function() {\n  if (this.version === 0 && !this._processed) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n    this._processed = true;\n  }\n};\n\nloca.preEncode = function() {\n  if (this.version === 0 && this._processed !== false) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n    this._processed = false;\n  }\n};\n\nexport default loca;\n","import * as r from 'restructure';\n\n// Set of instructions executed whenever the point size or font transformation change\nexport default new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n","import * as r from 'restructure';\n\n// only used for encoding\nexport default new r.Array(new r.Buffer);\n","import * as r from 'restructure';\nimport CFFIndex from './CFFIndex';\nimport CFFTop from './CFFTop';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport standardStrings from './CFFStandardStrings';\n\nclass CFFFont {\n  constructor(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  static decode(stream) {\n    return new CFFFont(stream);\n  }\n\n  decode() {\n    let start = this.stream.pos;\n    let top = CFFTop.decode(this.stream);\n    for (let key in top) {\n      let val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  }\n\n  string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  }\n\n  get postscriptName() {\n    if (this.version < 2) {\n      return this.nameIndex[0];\n    }\n\n    return null;\n  }\n\n  get fullName() {\n    return this.string(this.topDict.FullName);\n  }\n\n  get familyName() {\n    return this.string(this.topDict.FamilyName);\n  }\n\n  getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  }\n\n  getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    }\n\n    // CID-keyed fonts don't have glyph names\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    let { charset } = this.topDict;\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (let i = 0; i < charset.ranges.length; i++) {\n          let range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  }\n\n  fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        let { ranges } = this.topDict.FDSelect;\n        let low = 0;\n        let high = ranges.length - 1;\n\n        while (low <= high) {\n          let mid = (low + high) >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n    }\n  }\n\n  privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      let fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  }\n}\n\nexport default CFFFont;\n","import * as r from 'restructure';\n\nexport default class CFFIndex {\n  constructor(type) {\n    this.type = type;\n  }\n\n  getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  }\n\n  decode(stream, parent) {\n    let version = this.getCFFVersion(parent);\n    let count = version >= 2\n      ? stream.readUInt32BE()\n      : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    let offSize = stream.readUInt8();\n    let offsetType;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n    }\n\n    let ret = [];\n    let startPos = stream.pos + ((count + 1) * offSize) - 1;\n\n    let start = offsetType.decode(stream);\n    for (let i = 0; i < count; i++) {\n      let end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        let pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  }\n\n  size(arr, parent) {\n    let size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let offset = 1;\n    for (let i = 0; i < arr.length; i++) {\n      let item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  }\n\n  encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let sizes = [];\n    let offset = 1;\n    for (let item of arr) {\n      let s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (let size of sizes) {\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (let item of arr) {\n      type.encode(stream, item, parent);\n    }\n\n    return;\n  }\n}\n","import * as r from 'restructure';\nimport { resolveLength } from 'restructure';\nimport CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport StandardStrings from './CFFStandardStrings';\nimport { StandardEncoding, ExpertEncoding } from './CFFEncodings';\nimport { ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset } from './CFFCharsets';\nimport { ItemVariationStore } from '../tables/variations';\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass PredefinedOp {\n  constructor(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  }\n\n  size(value, ctx) {\n    return this.type.size(value, ctx);\n  }\n\n  encode(stream, value, ctx) {\n    let index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  }\n}\n\nclass CFFEncodingVersion extends r.Number {\n  constructor() {\n    super('UInt8');\n  }\n\n  decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  }\n}\n\nlet Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\n\nlet Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\n\nlet CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  }\n\n  // TODO: supplement?\n});\n\nlet CFFEncoding = new PredefinedOp([ StandardEncoding, ExpertEncoding ], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass RangeArray extends r.Array {\n  decode(stream, parent) {\n    let length = resolveLength(this.length, stream, parent);\n    let count = 0;\n    let res = [];\n    while (count < length) {\n      let range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  }\n}\n\nlet CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, t => t.parent.CharStrings.length - 1)\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, t => t.parent.CharStrings.length - 1)\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, t => t.parent.CharStrings.length - 1)\n  }\n});\n\nlet CFFCharset = new PredefinedOp([ ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset ], new CFFPointer(CFFCustomCharset, {lazy: true}));\n\nlet FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\n\nlet FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\n\nlet FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, t => t.parent.CharStrings.length)\n  },\n\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\n\nlet ptr = new CFFPointer(CFFPrivateDict);\nclass CFFPrivateOp {\n  decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  }\n\n  size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  }\n\n  encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  }\n}\n\nlet FontDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 38],  'FontName',             'sid',                                  null],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [[12, 5],   'PaintType',            'number',                               0],\n]);\n\nlet CFFTopDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [[12, 30],  'ROS',                  ['sid', 'sid', 'number'],               null],\n\n  [0,         'version',              'sid',                                  null],\n  [1,         'Notice',               'sid',                                  null],\n  [[12, 0],   'Copyright',            'sid',                                  null],\n  [2,         'FullName',             'sid',                                  null],\n  [3,         'FamilyName',           'sid',                                  null],\n  [4,         'Weight',               'sid',                                  null],\n  [[12, 1],   'isFixedPitch',         'boolean',                              false],\n  [[12, 2],   'ItalicAngle',          'number',                               0],\n  [[12, 3],   'UnderlinePosition',    'number',                               -100],\n  [[12, 4],   'UnderlineThickness',   'number',                               50],\n  [[12, 5],   'PaintType',            'number',                               0],\n  [[12, 6],   'CharstringType',       'number',                               2],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [13,        'UniqueID',             'number',                               null],\n  [5,         'FontBBox',             'array',                                [0, 0, 0, 0]],\n  [[12, 8],   'StrokeWidth',          'number',                               0],\n  [14,        'XUID',                 'array',                                null],\n  [15,        'charset',              CFFCharset,                             ISOAdobeCharset],\n  [16,        'Encoding',             CFFEncoding,                            StandardEncoding],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 20],  'SyntheticBase',        'number',                               null],\n  [[12, 21],  'PostScript',           'sid',                                  null],\n  [[12, 22],  'BaseFontName',         'sid',                                  null],\n  [[12, 23],  'BaseFontBlend',        'delta',                                null],\n\n  // CID font specific\n  [[12, 31],  'CIDFontVersion',       'number',                               0],\n  [[12, 32],  'CIDFontRevision',      'number',                               0],\n  [[12, 33],  'CIDFontType',          'number',                               0],\n  [[12, 34],  'CIDCount',             'number',                               8720],\n  [[12, 35],  'UIDBase',              'number',                               null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [[12, 38],  'FontName',             'sid',                                  null]\n]);\n\nlet VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n})\n\nlet CFF2TopDict = new CFFDict([\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [24,        'vstore',               new CFFPointer(VariationStore),         null],\n  [25,        'maxstack',             'number',                               193]\n]);\n\nlet CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize:            r.uint8,\n    offSize:            r.uint8,\n    nameIndex:          new CFFIndex(new r.String('length')),\n    topDictIndex:       new CFFIndex(CFFTopDict),\n    stringIndex:        new CFFIndex(new r.String('length')),\n    globalSubrIndex:    new CFFIndex\n  },\n\n  2: {\n    hdrSize:            r.uint8,\n    length:             r.uint16,\n    topDict:            CFF2TopDict,\n    globalSubrIndex:    new CFFIndex\n  }\n});\n\nexport default CFFTop;\n","import isEqual from 'fast-deep-equal';\nimport * as r from 'restructure';\nimport CFFOperand from './CFFOperand';\nimport { PropertyDescriptor } from 'restructure';\n\nexport default class CFFDict {\n  constructor(ops = []) {\n    this.ops = ops;\n    this.fields = {};\n    for (let field of ops) {\n      let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  decodeOperands(type, stream, ret, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.decodeOperands(type[i], stream, ret, [op]));\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  }\n\n  encodeOperands(type, stream, ctx, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.encodeOperands(type[i], stream, ctx, op)[0]);\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  }\n\n  decode(stream, parent) {\n    let end = stream.pos + parent.length;\n    let ret = {};\n    let operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (let key in this.fields) {\n      let field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      let b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = (b << 8) | stream.readUInt8();\n        }\n\n        let field = this.fields[b];\n        if (!field) {\n          throw new Error(`Unknown operator ${b}`);\n        }\n\n        let val = this.decodeOperands(field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, field[1], val);\n          } else {\n            ret[field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  }\n\n  size(dict, parent, includePointers = true) {\n    let ctx = {\n      parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    let len = 0;\n\n    for (let k in this.fields) {\n      let field = this.fields[k];\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], null, ctx, val);\n      for (let op of operands) {\n        len += CFFOperand.size(op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  }\n\n  encode(stream, dict, parent) {\n    let ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (let field of this.ops) {\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (let op of operands) {\n        CFFOperand.encode(stream, op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (let op of key) {\n        stream.writeUInt8(op);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      let ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  }\n}\n","const FLOAT_EOF = 0xf;\nconst FLOAT_LOOKUP = [\n  '0', '1', '2', '3', '4', '5', '6', '7',\n  '8', '9', '.', 'E', 'E-', null, '-'\n];\n\nconst FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nexport default class CFFOperand {\n  static decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      let str = '';\n      while (true) {\n        let b = stream.readUInt8();\n\n        let n1 = b >> 4;\n        if (n1 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n1];\n\n        let n2 = b & 15;\n        if (n2 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  }\n\n  static size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) { // floating point\n      let str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n\n    } else {\n      return 5;\n    }\n  }\n\n  static encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    let val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n\n    } else if ((val | 0) !== val) { // floating point\n      stream.writeUInt8(30);\n\n      let str = '' + val;\n      for (let i = 0; i < str.length; i += 2) {\n        let c1 = str[i];\n        let n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          let c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8((n1 << 4) | (n2 & 15));\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8((FLOAT_EOF << 4));\n      }\n\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  }\n}\n","import * as r from 'restructure';\n\nexport default class CFFPointer extends r.Pointer {\n  constructor(type, options = {}) {\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    super(null, type, options);\n  }\n\n  decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: () => operands[0]\n    };\n\n    return super.decode(stream, parent, operands);\n  }\n\n  encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: () => 0\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    let ptr = null;\n    this.offsetType = {\n      encode: (stream, val) => ptr = val\n    };\n\n    super.encode(stream, value, ctx);\n    return [new Ptr(ptr)];\n  }\n}\n\nclass Ptr {\n  constructor(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  valueOf() {\n    return this.val;\n  }\n}\n","import CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\n\nclass CFFBlendOp {\n  static decode(stream, parent, operands) {\n    let numBlends = operands.pop();\n\n    // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  }\n}\n\nexport default new CFFDict([\n  // key       name                    type                                          default\n  [6,         'BlueValues',           'delta',                                       null],\n  [7,         'OtherBlues',           'delta',                                       null],\n  [8,         'FamilyBlues',          'delta',                                       null],\n  [9,         'FamilyOtherBlues',     'delta',                                       null],\n  [[12, 9],   'BlueScale',            'number',                                      0.039625],\n  [[12, 10],  'BlueShift',            'number',                                      7],\n  [[12, 11],  'BlueFuzz',             'number',                                      1],\n  [10,        'StdHW',                'number',                                      null],\n  [11,        'StdVW',                'number',                                      null],\n  [[12, 12],  'StemSnapH',            'delta',                                       null],\n  [[12, 13],  'StemSnapV',            'delta',                                       null],\n  [[12, 14],  'ForceBold',            'boolean',                                     false],\n  [[12, 17],  'LanguageGroup',        'number',                                      0],\n  [[12, 18],  'ExpansionFactor',      'number',                                      0.06],\n  [[12, 19],  'initialRandomSeed',    'number',                                      0],\n  [20,        'defaultWidthX',        'number',                                      0],\n  [21,        'nominalWidthX',        'number',                                      0],\n  [22,        'vsindex',              'number',                                      0],\n  [23,        'blend',                CFFBlendOp,                                    null],\n  [19,        'Subrs',                new CFFPointer(new CFFIndex, {type: 'local'}), null]\n]);\n","// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nexport default [\n  \".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\",\n  \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\",\n  \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\",\n  \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\",\n  \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\",\n  \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n  \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\",\n  \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\",\n  \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\",\n  \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\",\n  \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\",\n  \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\",\n  \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\",\n  \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\",\n  \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\",\n  \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\",\n  \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\",\n  \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\",\n  \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\",\n  \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\",\n  \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\",\n  \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\",\n  \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\",\n  \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\",\n  \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\",\n  \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\",\n  \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\",\n  \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\",\n  \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\",\n  \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\",\n  \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\",\n  \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\",\n  \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\",\n  \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\",\n  \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\",\n  \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\",\n  \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\",\n  \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\",\n  \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\",\n  \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\",\n  \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\",\n  \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\",\n  \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\",\n  \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\",\n  \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\",\n  \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\",\n  \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\",\n  \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\",\n  \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\",\n  \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\",\n  \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\",\n  \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\",\n  \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\",\n  \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\",\n  \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\",\n  \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\",\n  \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\",\n  \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\",\n  \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\",\n  \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\",\n  \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\",\n  \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\",\n  \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\",\n  \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\",\n  \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\",\n  \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\",\n  \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"\n];\n","export let StandardEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n  'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n  'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n  'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n  'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n  'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n  'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n  'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n  'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n  '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n  'lslash', 'oslash', 'oe', 'germandbls'\n];\n\nexport let ExpertEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n  'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n  'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n  'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n  'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n  'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n  'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n  'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n  'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n  'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n  '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n  '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n  'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n  'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n  'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n  'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n  'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'\n];\n","export let ISOAdobeCharset = [\n  '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar',\n  'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright',\n  'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero',\n  'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n  'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question',\n  'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\n  'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n  'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent',\n  'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n  'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n  'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl',\n  'periodcentered', 'paragraph', 'bullet', 'quotesinglbase',\n  'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis',\n  'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla',\n  'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine',\n  'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash',\n  'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n  'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter',\n  'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior',\n  'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n  'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde',\n  'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n  'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex',\n  'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute',\n  'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla',\n  'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex',\n  'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis',\n  'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis',\n  'ugrave', 'yacute', 'ydieresis', 'zcaron'\n];\n\nexport let ExpertCharset = [\n  '.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle',\n  'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior',\n  'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma',\n  'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle',\n  'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle',\n  'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle',\n  'colon', 'semicolon', 'commasuperior', 'threequartersemdash',\n  'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall',\n  'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n  'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall',\n  'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall',\n  'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary',\n  'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle',\n  'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall',\n  'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall',\n  'Cedillasmall', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall',\n  'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall',\n  'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall',\n  'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall',\n  'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n  'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall',\n  'Ydieresissmall'\n];\n\nexport let ExpertSubsetCharset = [\n  '.notdef', 'space', 'dollaroldstyle', 'dollarsuperior',\n  'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n  'onedotenleader', 'comma', 'hyphen', 'period', 'fraction',\n  'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle',\n  'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior',\n  'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted',\n  'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter',\n  'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior'\n];\n","import {Feature} from './opentype';\nimport * as r from 'restructure';\n\n/*******************\n * Variation Store *\n *******************/\n\nlet F2DOT14 = new r.Fixed(16, 'BE', 14);\nlet RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\n\nlet VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\n\nlet DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, t => t.parent.shortDeltaCount),\n  regionDeltas: new r.Array(r.int8, t => t.parent.regionIndexCount - t.parent.shortDeltaCount),\n  deltas: t => t.shortDeltas.concat(t.regionDeltas)\n});\n\nlet ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\n\nexport let ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n\n/**********************\n * Feature Variations *\n **********************/\n\nlet ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: {\n    axisIndex: r.uint16,\n    axisIndex: r.uint16,\n    filterRangeMinValue: F2DOT14,\n    filterRangeMaxValue: F2DOT14\n  }\n});\n\nlet ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\n\nlet FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {type: 'parent'})\n});\n\nlet FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\n\nlet FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {type: 'parent'}),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {type: 'parent'})\n});\n\nexport let FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n","import * as r from 'restructure';\n\n//########################\n// Scripts and Languages #\n//########################\n\nlet LangSysTable = new r.Struct({\n  reserved:         new r.Reserved(r.uint16),\n  reqFeatureIndex:  r.uint16,\n  featureCount:     r.uint16,\n  featureIndexes:   new r.Array(r.uint16, 'featureCount')\n});\n\nlet LangSysRecord = new r.Struct({\n  tag:      new r.String(4),\n  langSys:  new r.Pointer(r.uint16, LangSysTable, { type: 'parent' })\n});\n\nlet Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count:          r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\n\nlet ScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, Script, { type: 'parent' })\n});\n\nexport let ScriptList = new r.Array(ScriptRecord, r.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nlet FeatureParams = new r.Struct({\n  version:    r.uint16, // should be set to 0 according OT spec\n  nameID:     r.uint16, //OT spec: UI Name ID or uiLabelNameId\n});\n\nexport let Feature = new r.Struct({\n  featureParams:      new r.Pointer(r.uint16, FeatureParams),\n  lookupCount:        r.uint16,\n  lookupListIndexes:  new r.Array(r.uint16, 'lookupCount')\n});\n\nlet FeatureRecord = new r.Struct({\n  tag:      new r.String(4),\n  feature:  new r.Pointer(r.uint16, Feature, { type: 'parent' })\n});\n\nexport let FeatureList = new r.Array(FeatureRecord, r.uint16);\n\nlet LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, [\n    'rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures',\n    'ignoreMarks', 'useMarkFilteringSet'\n  ])\n});\n\nexport function LookupList(SubTable) {\n  let Lookup = new r.Struct({\n    lookupType:         r.uint16,\n    flags:              LookupFlags,\n    subTableCount:      r.uint16,\n    subTables:          new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet:   new r.Optional(r.uint16, t => t.flags.flags.useMarkFilteringSet)\n  });\n\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nlet RangeRecord = new r.Struct({\n  start:              r.uint16,\n  end:                r.uint16,\n  startCoverageIndex: r.uint16\n});\n\nexport let Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount:   r.uint16,\n    glyphs:       new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount:   r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nlet ClassRangeRecord = new r.Struct({\n  start:  r.uint16,\n  end:    r.uint16,\n  class:  r.uint16\n});\n\nexport let ClassDef = new r.VersionedStruct(r.uint16, {\n  1: { // Class array\n    startGlyph:       r.uint16,\n    glyphCount:       r.uint16,\n    classValueArray:  new r.Array(r.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount:  r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nexport let Device = new r.Struct({\n  a: r.uint16, // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16, // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nlet LookupRecord = new r.Struct({\n  sequenceIndex:      r.uint16,\n  lookupListIndex:    r.uint16\n});\n\nlet Rule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  input:          new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\n\nlet ClassRule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  classes:        new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\n\nexport let Context = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    ruleSetCount:  r.uint16,\n    ruleSets:      new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    classDef:      new r.Pointer(r.uint16, ClassDef),\n    classSetCnt:   r.uint16,\n    classSet:      new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount:    r.uint16,\n    lookupCount:   r.uint16,\n    coverages:     new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nlet ChainRule = new r.Struct({\n  backtrackGlyphCount:  r.uint16,\n  backtrack:            new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount:      r.uint16,\n  input:                new r.Array(r.uint16, t => t.inputGlyphCount - 1),\n  lookaheadGlyphCount:  r.uint16,\n  lookahead:            new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount:          r.uint16,\n  lookupRecords:        new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\n\nexport let ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context glyph substitution\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    chainCount:         r.uint16,\n    chainRuleSets:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef:  new r.Pointer(r.uint16, ClassDef),\n    inputClassDef:      new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef:  new r.Pointer(r.uint16, ClassDef),\n    chainCount:         r.uint16,\n    chainClassSet:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount:    r.uint16,\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount:        r.uint16,\n    inputCoverage:          new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount:            r.uint16,\n    lookupRecords:          new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n","import * as r from 'restructure';\n\nlet VerticalOrigin = new r.Struct({\n  glyphIndex:   r.uint16,\n  vertOriginY:  r.int16\n});\n\nexport default new r.Struct({\n  majorVersion:           r.uint16,\n  minorVersion:           r.uint16,\n  defaultVertOriginY:     r.int16,\n  numVertOriginYMetrics:  r.uint16,\n  metrics:                new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n","import * as r from 'restructure';\nimport {BigMetrics} from './EBDT';\n\nlet SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\n\nlet CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\n\nlet IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n\n  1: {\n    offsetArray: new r.Array(r.uint32, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new r.Array(r.uint16, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, t => t.numGlyphs + 1)\n  },\n\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\n\nlet IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\n\nlet BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\n\nexport default new r.Struct({\n  version:  r.uint32, // 0x00020000\n  numSizes: r.uint32,\n  sizes:    new r.Array(BitmapSizeTable, 'numSizes')\n});\n","import * as r from 'restructure';\n\nexport let BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\n\nexport let SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\n\nlet EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nclass ByteAligned {}\n\nclass BitAligned {}\n\nexport let glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\n","import * as r from 'restructure';\n\nlet ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), t => t.parent.parent.maxp.numGlyphs + 1)\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nexport default new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n","import * as r from 'restructure';\n\nlet LayerRecord = new r.Struct({\n  gid: r.uint16,          // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16  // Index value to use in the appropriate palette. This value must\n});                       // be less than numPaletteEntries in the CPAL table, except for\n                          // the special case noted below. Each palette entry is 16 bits.\n                          // A palette index of 0xFFFF is a special case indicating that\n                          // the text foreground color should be used.\n\nlet BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,             // Glyph ID of reference glyph. This glyph is for reference only\n                             // and is not rendered for color.\n  firstLayerIndex: r.uint16, // Index (from beginning of the Layer Records) to the layer record.\n                             // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\n\nexport default new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: r.uint16\n});\n","import * as r from 'restructure';\n\nlet ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes'),\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device} from './opentype';\nimport {ItemVariationStore} from './variations';\n\nlet BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate:   r.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate:     r.int16,   // X or Y value, in design units\n    referenceGlyph: r.uint16,  // GlyphID of control glyph\n    baseCoordPoint: r.uint16   // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate:   r.int16,                         // X or Y value, in design units\n    deviceTable:  new r.Pointer(r.uint16, Device)  // Device table for X or Y value\n  }\n});\n\nlet BaseValues = new r.Struct({\n  defaultIndex:   r.uint16,  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords:     new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\n\nlet FeatMinMaxRecord = new r.Struct({\n  tag:        new r.String(4),  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'}), // May be NULL\n  maxCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'})  // May be NULL\n});\n\nlet MinMax = new r.Struct({\n  minCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  maxCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  featMinMaxCount:    r.uint16,                            // May be 0\n  featMinMaxRecords:  new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nlet BaseLangSysRecord = new r.Struct({\n  tag:    new r.String(4),  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {type: 'parent'})\n});\n\nlet BaseScript = new r.Struct({\n  baseValues:         new r.Pointer(r.uint16, BaseValues), // May be NULL\n  defaultMinMax:      new r.Pointer(r.uint16, MinMax),     // May be NULL\n  baseLangSysCount:   r.uint16,                            // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nlet BaseScriptRecord = new r.Struct({\n  tag:      new r.String(4),  // 4-byte script identification tag\n  script:   new r.Pointer(r.uint16, BaseScript, {type: 'parent'})\n});\n\nlet BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet BaseTagList = new r.Array(new r.String(4), r.uint16);\n\nlet Axis = new r.Struct({\n  baseTagList:    new r.Pointer(r.uint16, BaseTagList),  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis:    new r.Pointer(r.uint16, Axis),   // May be NULL\n    vertAxis:     new r.Pointer(r.uint16, Axis)    // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device} from './opentype';\nimport {ItemVariationStore} from './variations';\n\nlet AttachPoint = new r.Array(r.uint16, r.uint16);\nlet AttachList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  glyphCount:     r.uint16,\n  attachPoints:   new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\n\nlet CaretValue = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: r.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate:     r.int16,\n    deviceTable:    new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\n\nlet LigCaretList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount:  r.uint16,\n  ligGlyphs:      new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nlet MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount:       r.uint16,\n  coverage:           new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef:      new r.Pointer(r.uint16, ClassDef),\n    attachList:         new r.Pointer(r.uint16, AttachList),\n    ligCaretList:       new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext} from './opentype';\nimport {FeatureVariations} from './variations';\n\nlet ValueFormat = new r.Bitfield(r.uint16, [\n  'xPlacement', 'yPlacement',\n  'xAdvance', 'yAdvance',\n  'xPlaDevice', 'yPlaDevice',\n  'xAdvDevice', 'yAdvDevice'\n]);\n\nlet types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance:   r.int16,\n  yAdvance:   r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel })\n};\n\nclass ValueRecord {\n  constructor(key = 'valueFormat') {\n    this.key = key;\n  }\n\n  buildStruct(parent) {\n    let struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    let fields = {};\n    fields.rel = () => struct._startOffset;\n\n    let format = struct[this.key];\n    for (let key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  }\n\n  size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  }\n\n  decode(stream, parent) {\n    let res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  }\n}\n\nlet PairValueRecord = new r.Struct({\n  secondGlyph:    r.uint16,\n  value1:         new ValueRecord('valueFormat1'),\n  value2:         new ValueRecord('valueFormat2')\n});\n\nlet PairSet = new r.Array(PairValueRecord, r.uint16);\n\nlet Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nlet Anchor = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    anchorPoint:    r.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    xDeviceTable:   new r.Pointer(r.uint16, Device),\n    yDeviceTable:   new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet EntryExitRecord = new r.Struct({\n  entryAnchor:    new r.Pointer(r.uint16, Anchor, {type: 'parent'}),\n  exitAnchor:     new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkRecord = new r.Struct({\n  class:      r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkArray = new r.Array(MarkRecord, r.uint16);\n\nlet BaseRecord  = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.classCount);\nlet BaseArray   = new r.Array(BaseRecord, r.uint16);\n\nlet ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.parent.classCount);\nlet LigatureAttach  = new r.Array(ComponentRecord, r.uint16);\nlet LigatureArray   = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\n\nlet GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      value:          new ValueRecord()\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      valueCount:     r.uint16,\n      values:         new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new r.VersionedStruct(r.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      pairSetCount:   r.uint16,\n      pairSets:       new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      classDef1:      new r.Pointer(r.uint16, ClassDef),\n      classDef2:      new r.Pointer(r.uint16, ClassDef),\n      class1Count:    r.uint16,\n      class2Count:    r.uint16,\n      classRecords:   new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format:             r.uint16,\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    entryExitCount:     r.uint16,\n    entryExitRecords:   new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    baseCoverage:       new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    baseArray:          new r.Pointer(r.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage:   new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    ligatureArray:      new r.Pointer(r.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format:             r.uint16,\n    mark1Coverage:      new r.Pointer(r.uint16, Coverage),\n    mark2Coverage:      new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    mark1Array:         new r.Pointer(r.uint16, MarkArray),\n    mark2Array:         new r.Pointer(r.uint16, BaseArray)\n  },\n\n  7: Context,          // Contextual positioning\n  8: ChainingContext,  // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat:   r.uint16,\n    lookupType:  r.uint16,   // cannot also be 9\n    extension:   new r.Pointer(r.uint32, null)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList:     new r.Pointer(r.uint16, ScriptList),\n    featureList:    new r.Pointer(r.uint16, FeatureList),\n    lookupList:     new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\n// export GPOSLookup for JSTF table\nexport { GPOSLookup };\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext} from './opentype';\nimport {FeatureVariations} from './variations';\n\nlet Sequence = new r.Array(r.uint16, r.uint16);\nlet AlternateSet = Sequence;\n\nlet Ligature = new r.Struct({\n  glyph:      r.uint16,\n  compCount:  r.uint16,\n  components: new r.Array(r.uint16, t => t.compCount - 1)\n});\n\nlet LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\n\nlet GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {// Single Substitution\n    1: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID:   r.int16\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      glyphCount:     r.uint16,\n      substitute:     new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    sequences:      new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    alternateSet:   new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    ligatureSets:   new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n\n  5: Context,         // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat:   r.uint16,\n    lookupType:    r.uint16,   // cannot also be 7\n    extension:     new r.Pointer(r.uint32, null)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat:            r.uint16,\n    coverage:               new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount:             r.uint16,\n    substitutes:            new r.Array(r.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList:     new r.Pointer(r.uint16, ScriptList),\n    featureList:    new r.Pointer(r.uint16, FeatureList),\n    lookupList:     new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n","import * as r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device } from './opentype';\nimport { GPOSLookup } from './GPOS';\n\nlet JstfGSUBModList = new r.Array(r.uint16, r.uint16);\n\nlet JstfPriority = new r.Struct({\n  shrinkageEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\nlet JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\n\nlet JstfLangSysRecord = new r.Struct({\n  tag:         new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\n\nlet JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount:   r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nlet JstfScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {type: 'parent'})\n});\n\nexport default new r.Struct({\n  version:     r.uint32,  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList:  new r.Array(JstfScriptRecord, 'scriptCount')\n});\n","import * as r from 'restructure';\nimport { resolveLength } from 'restructure';\nimport { ItemVariationStore } from './variations';\n\n// TODO: add this to restructure\nclass VariableSizeNumber {\n  constructor(size) {\n    this._size = size;\n  }\n\n  decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1: return stream.readUInt8();\n      case 2: return stream.readUInt16BE();\n      case 3: return stream.readUInt24BE();\n      case 4: return stream.readUInt32BE();\n    }\n  }\n\n  size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  }\n}\n\nlet MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(t => ((t.parent.entryFormat & 0x0030) >> 4) + 1),\n  outerIndex: t => t.entry >> ((t.parent.entryFormat & 0x000F) + 1),\n  innerIndex: t => t.entry & ((1 << ((t.parent.entryFormat & 0x000F) + 1)) - 1)\n});\n\nlet DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\n\nexport default new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n","import * as r from 'restructure';\n\nlet Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\n\nlet SignatureBlock = new r.Struct({\n  reserved:       new r.Reserved(r.uint16, 2),\n  cbSignature:    r.uint32,  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature:      new r.Buffer('cbSignature')\n});\n\nexport default new r.Struct({\n  ulVersion:       r.uint32,  // Version number of the DSIG table (0x00000001)\n  usNumSigs:       r.uint16,  // Number of signatures in the table\n  usFlag:          r.uint16,  // Permission flags\n  signatures:      new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n","import * as r from 'restructure';\n\nlet GaspRange = new r.Struct({\n  rangeMaxPPEM:       r.uint16,                  // Upper limit of range, in ppem\n  rangeGaspBehavior:  new r.Bitfield(r.uint16, [ // Flags describing desired rasterizer behavior\n    'grayscale', 'gridfit',\n    'symmetricSmoothing', 'symmetricGridfit'     // only in version 1, for ClearType\n  ])\n});\n\nexport default new r.Struct({\n  version:    r.uint16,  // set to 0\n  numRanges:  r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n","import * as r from 'restructure';\n\nlet DeviceRecord = new r.Struct({\n  pixelSize:      r.uint8,\n  maximumWidth:   r.uint8,\n  widths:         new r.Array(r.uint8, t => t.parent.parent.maxp.numGlyphs)\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nexport default new r.Struct({\n  version:            r.uint16,\n  numRecords:         r.int16,\n  sizeDeviceRecord:   r.int32,\n  records:            new r.Array(DeviceRecord, 'numRecords')\n});\n","import * as r from 'restructure';\n\nlet KernPair = new r.Struct({\n  left:   r.uint16,\n  right:  r.uint16,\n  value:  r.int16\n});\n\nlet ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: t => t.offsets.length && Math.max.apply(Math, t.offsets)\n});\n\nlet Kern2Array = new r.Struct({\n  off: t => t._startOffset - t.parent.parent._startOffset,\n  len: t => (((t.parent.leftTable.max - t.off) / t.parent.rowWidth) + 1) * (t.parent.rowWidth / 2),\n  values: new r.LazyArray(r.int16, 'len')\n});\n\nlet KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs:         r.uint16,\n    searchRange:    r.uint16,\n    entrySelector:  r.uint16,\n    rangeShift:     r.uint16,\n    pairs:          new r.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth:   r.uint16,\n    leftTable:  new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    array:      new r.Pointer(r.uint16, Kern2Array, {type: 'parent'})\n  },\n\n  3: {\n    glyphCount:       r.uint16,\n    kernValueCount:   r.uint8,\n    leftClassCount:   r.uint8,\n    rightClassCount:  r.uint8,\n    flags:            r.uint8,\n    kernValue:        new r.Array(r.int16, 'kernValueCount'),\n    leftClass:        new r.Array(r.uint8, 'glyphCount'),\n    rightClass:       new r.Array(r.uint8, 'glyphCount'),\n    kernIndex:        new r.Array(r.uint8, t => t.leftClassCount * t.rightClassCount)\n  }\n});\n\nlet KernTable = new r.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: r.uint16,  // Microsoft has an extra sub-table version number\n    length:     r.uint16,  // Length of the subtable, in bytes\n    format:     r.uint8,   // Format of subtable\n    coverage:   new r.Bitfield(r.uint8, [\n      'horizontal',    // 1 if table has horizontal data, 0 if vertical\n      'minimum',       // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n      'crossStream',   // If set to 1, kerning is perpendicular to the flow of the text\n      'override'      // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  },\n  1: { // Apple uses this format\n    length:     r.uint32,\n    coverage:   new r.Bitfield(r.uint8, [\n      null, null, null, null, null,\n      'variation',     // Set if table has variation kerning values\n      'crossStream',   // Set if table has cross-stream kerning values\n      'vertical'      // Set if table has vertical kerning values\n    ]),\n    format:     r.uint8,\n    tupleIndex: r.uint16,\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  }\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  0: { // Microsoft Version\n    nTables:    r.uint16,\n    tables:     new r.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved:   new r.Reserved(r.uint16), // the other half of the version number\n    nTables:    r.uint32,\n    tables:     new r.Array(KernTable, 'nTables')\n  }\n});\n","import * as r from 'restructure';\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nexport default new r.Struct({\n  version:    r.uint16,\n  numGlyphs:  r.uint16,\n  yPels:      new r.Array(r.uint8, 'numGlyphs')\n});\n","import * as r from 'restructure';\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nexport default new r.Struct({\n  version:              r.uint16,\n  fontNumber:           r.uint32,\n  pitch:                r.uint16,\n  xHeight:              r.uint16,\n  style:                r.uint16,\n  typeFamily:           r.uint16,\n  capHeight:            r.uint16,\n  symbolSet:            r.uint16,\n  typeface:             new r.String(16),\n  characterComplement:  new r.String(8),\n  fileName:             new r.String(6),\n  strokeWeight:         new r.String(1),\n  widthType:            new r.String(1),\n  serifStyle:           r.uint8,\n  reserved:             new r.Reserved(r.uint8)\n});\n","import * as r from 'restructure';\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nlet Ratio = new r.Struct({\n  bCharSet:       r.uint8,                             // Character set\n  xRatio:         r.uint8,                             // Value to use for x-Ratio\n  yStartRatio:    r.uint8,                             // Starting y-Ratio value\n  yEndRatio:      r.uint8                              // Ending y-Ratio value\n});\n\nlet vTable = new r.Struct({\n  yPelHeight:     r.uint16,                            // yPelHeight to which values apply\n  yMax:           r.int16,                             // Maximum value (in pels) for this yPelHeight\n  yMin:           r.int16                              // Minimum value (in pels) for this yPelHeight\n});\n\nlet VdmxGroup = new r.Struct({\n  recs:           r.uint16,                            // Number of height records in this group\n  startsz:        r.uint8,                             // Starting yPelHeight\n  endsz:          r.uint8,                             // Ending yPelHeight\n  entries:        new r.Array(vTable, 'recs')          // The VDMX records\n});\n\nexport default new r.Struct({\n  version:        r.uint16,                            // Version number (0 or 1)\n  numRecs:        r.uint16,                            // Number of VDMX groups present\n  numRatios:      r.uint16,                            // Number of aspect ratio groupings\n  ratioRanges:    new r.Array(Ratio, 'numRatios'),     // Ratio ranges\n  offsets:        new r.Array(r.uint16, 'numRatios'),  // Offset to the VDMX group for this ratio range\n  groups:         new r.Array(VdmxGroup, 'numRecs')    // The actual VDMX groupings\n});\n","import * as r from 'restructure';\n\n// Vertical Header Table\nexport default new r.Struct({\n  version:                r.uint16,  // Version number of the Vertical Header Table\n  ascent:                 r.int16,   // The vertical typographic ascender for this font\n  descent:                r.int16,   // The vertical typographic descender for this font\n  lineGap:                r.int16,   // The vertical typographic line gap for this font\n  advanceHeightMax:       r.int16,   // The maximum advance height measurement found in the font\n  minTopSideBearing:      r.int16,   // The minimum top side bearing measurement found in the font\n  minBottomSideBearing:   r.int16,   // The minimum bottom side bearing measurement found in the font\n  yMaxExtent:             r.int16,\n  caretSlopeRise:         r.int16,   // Caret slope (rise/run)\n  caretSlopeRun:          r.int16,\n  caretOffset:            r.int16,   // Set value equal to 0 for nonslanted fonts\n  reserved:               new r.Reserved(r.int16, 4),\n  metricDataFormat:       r.int16,   // Set to 0\n  numberOfMetrics:        r.uint16   // Number of advance heights in the Vertical Metrics table\n});\n","import * as r from 'restructure';\n\nlet VmtxEntry = new r.Struct({\n  advance: r.uint16,  // The advance height of the glyph\n  bearing: r.int16    // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nexport default new r.Struct({\n  metrics:  new r.LazyArray(VmtxEntry, t => t.parent.vhea.numberOfMetrics),\n  bearings: new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n","import * as r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\n\nlet Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nlet Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n","import * as r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet BslnSubtable = new r.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n","import * as r from 'restructure';\n\nclass UnboundedArrayAccessor {\n  constructor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  getItem(index) {\n    if (this._items[index] == null) {\n      let pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  }\n\n  inspect() {\n    return `[UnboundedArray ${this.type.constructor.name}]`;\n  }\n}\n\nexport class UnboundedArray extends r.Array {\n  constructor(type) {\n    super(type, 0);\n  }\n\n  decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  }\n}\n\nexport let LookupTable = function(ValueType = r.uint16) {\n  // Helper class that makes internal structures invisible to pointers\n  class Shadow {\n    constructor(type) {\n      this.type = type;\n    }\n\n    decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    }\n\n    size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    }\n\n    encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    }\n  }\n\n  ValueType = new Shadow(ValueType);\n\n  let BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n\n  let LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n\n  let LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, t => t.lastGlyph - t.firstGlyph + 1), {type: 'parent'})\n  });\n\n  let LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, t => t.binarySearchHeader.nUnits)\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, t => t.binarySearchHeader.nUnits)\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, t => t.binarySearchHeader.nUnits)\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nexport function StateTable(entryData = {}, lookupType = r.uint16) {\n  let entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint16, t => t.nClasses));\n\n  let StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nexport function StateTable1(entryData = {}, lookupType = r.uint16) {\n  let ClassLookupTable = new r.Struct({\n    version() { return 8; }, // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  let entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: t => (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint8, t => t.nClasses));\n\n  let StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n","import * as r from 'restructure';\n\nlet Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nlet FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new r.Bitfield(r.uint8, [\n    null, null, null, null, null, null,\n    'hasDefault', 'exclusive'\n  ]),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n","import * as r from 'restructure';\n\nlet Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID]\n});\n\nlet Instance = new r.Struct({\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID],\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, t => t.parent.axisCount),\n  postscriptNameID: new r.Optional(r.uint16, t => t.parent.instanceSize - t._currentOffset > 0)\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n","import * as r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\nclass Offset {\n  static decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags\n      ? stream.readUInt32BE()\n      : stream.readUInt16BE() * 2;\n  }\n}\n\nlet gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', { relativeTo: ctx => ctx.offsetToData, allowNull: false }), t => t.glyphCount + 1)\n});\n\nexport default gvar;\n","import * as r from 'restructure';\nimport { LookupTable, StateTable1 } from './aat';\n\nlet ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1\n});\n\nlet WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\n\nlet WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\n\nlet ActionData = new r.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\n\nlet Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, t => t.actionLength - t._currentOffset)\n});\n\nlet PostcompensationAction = new r.Array(Action, r.uint32);\nlet PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\n\nlet JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: ctx => ctx.wdcOffset }))\n});\n\nexport default new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n","import * as r from 'restructure';\nimport { UnboundedArray, LookupTable, StateTable } from './aat';\n\nlet LigatureData = {\n  action: r.uint16\n};\n\nlet ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\n\nlet InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\n\nlet SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable))\n});\n\nlet SubtableData = new r.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\n\nlet Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n});\n\nlet FeatureEntry = new r.Struct({\n  featureType:    r.uint16,\n  featureSetting: r.uint16,\n  enableFlags:    r.uint32,\n  disableFlags:   r.uint32\n});\n\nlet MorxChain = new r.Struct({\n  defaultFlags:     r.uint32,\n  chainLength:      r.uint32,\n  nFeatureEntries:  r.uint32,\n  nSubtables:       r.uint32,\n  features:         new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables:        new r.Array(Subtable, 'nSubtables')\n});\n\nexport default new r.Struct({\n  version:  r.uint16,\n  unused:   new r.Reserved(r.uint16),\n  nChains:  r.uint32,\n  chains:   new r.Array(MorxChain, 'nChains')\n});\n","import * as r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n","import { binarySearch } from './utils';\nimport { encodingExists, getEncoding, getEncodingMapping } from './encodings';\nimport { cache } from './decorators';\nimport { range } from './utils';\n\nexport default class CmapProcessor {\n  constructor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n      // 32-bit subtables\n      [3, 10],\n      [0, 6],\n      [0, 4],\n\n      // 16-bit subtables\n      [3, 1],\n      [0, 3],\n      [0, 2],\n      [0, 1],\n      [0, 0]\n    ]);\n\n    // If not unicode cmap was found, take the first table with a supported encoding.\n    if (!this.cmap) {\n      for (let cmap of cmapTable.tables) {\n        let encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        let mapping = getEncodingMapping(encoding);\n        if (mapping) {\n          this.cmap = cmap.table;\n          this.encoding = mapping;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  findSubtable(cmapTable, pairs) {\n    for (let [platformID, encodingID] of pairs) {\n      for (let cmap of cmapTable.tables) {\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      codepoint = this.encoding.get(codepoint) || codepoint;\n\n      // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      let gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4: {\n        let min = 0;\n        let max = cmap.segCount - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n\n          if (codepoint < cmap.startCode.get(mid)) {\n            max = mid - 1;\n          } else if (codepoint > cmap.endCode.get(mid)) {\n            min = mid + 1;\n          } else {\n            let rangeOffset = cmap.idRangeOffset.get(mid);\n            let gid;\n\n            if (rangeOffset === 0) {\n              gid = codepoint + cmap.idDelta.get(mid);\n            } else {\n              let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n              gid = cmap.glyphIndexArray.get(index) || 0;\n              if (gid !== 0) {\n                gid += cmap.idDelta.get(mid);\n              }\n            }\n\n            return gid & 0xffff;\n          }\n        }\n\n        return 0;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13: {\n        let min = 0;\n        let max = cmap.nGroups - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n          let group = cmap.groups.get(mid);\n\n          if (codepoint < group.startCharCode) {\n            max = mid - 1;\n          } else if (codepoint > group.endCharCode) {\n            min = mid + 1;\n          } else {\n            if (cmap.version === 12) {\n              return group.glyphID + (codepoint - group.startCharCode);\n            } else {\n              return group.glyphID;\n            }\n          }\n        }\n\n        return 0;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    let selectors = this.uvs.varSelectors.toArray();\n    let i = binarySearch(selectors, x => variationSelector - x.varSelector);\n    let sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, x =>\n        codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0\n      );\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, x => codepoint - x.unicodeValue);\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  }\n\n  @cache\n  getCharacterSet() {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4: {\n        let res = [];\n        let endCodes = cmap.endCode.toArray();\n        for (let i = 0; i < endCodes.length; i++) {\n          let tail = endCodes[i] + 1;\n          let start = cmap.startCode.get(i);\n          res.push(...range(start, tail));\n        }\n\n        return res;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          res.push(...range(group.startCharCode, group.endCharCode + 1));\n        }\n\n        return res;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  @cache\n  codePointsForGlyph(gid) {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0: {\n        let res = [];\n        for (let i = 0; i < 256; i++) {\n          if (cmap.codeMap.get(i) === gid) {\n            res.push(i);\n          }\n        }\n\n        return res;\n      }\n\n      case 4: {\n        let res = [];\n        for (let i = 0; i < cmap.segCount; i++) {\n          let end = cmap.endCode.get(i);\n          let start = cmap.startCode.get(i);\n          let rangeOffset = cmap.idRangeOffset.get(i);\n          let delta = cmap.idDelta.get(i);\n\n          for (var c = start; c <= end; c++) {\n            let g = 0;\n            if (rangeOffset === 0) {\n              g = c + delta;\n            } else {\n              let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n              g = cmap.glyphIndexArray.get(index) || 0;\n              if (g !== 0) {\n                g += delta;\n              }\n            }\n\n            if (g === gid) {\n              res.push(c);\n            }\n          }\n        }\n\n        return res;\n      }\n\n      case 12: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n            res.push(group.startCharCode + (gid - group.glyphID));\n          }\n        }\n\n        return res;\n      }\n\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid === group.glyphID) {\n            res.push(...range(group.startCharCode, group.endCharCode + 1));\n          }\n        }\n\n        return res;\n      }\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n}\n","export function binarySearch(arr, cmp) {\n  let min = 0;\n  let max = arr.length - 1;\n  while (min <= max) {\n    let mid = (min + max) >> 1;\n    let res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function range(index, end) {\n  let range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n\nexport const asciiDecoder = new TextDecoder('ascii');\n\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst LOOKUP = new Uint8Array(256);\nfor (let i = 0; i < CHARS.length; i++) {\n  LOOKUP[CHARS.charCodeAt(i)] = i;\n}\n\nexport function decodeBase64(base64) {\n  let bufferLength = base64.length * 0.75;\n\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n\n  let bytes = new Uint8Array(bufferLength);\n  let p = 0;\n\n  for (let i = 0, len = base64.length; i < len; i += 4) {\n    let encoded1 = LOOKUP[base64.charCodeAt(i)];\n    let encoded2 = LOOKUP[base64.charCodeAt(i + 1)];\n    let encoded3 = LOOKUP[base64.charCodeAt(i + 2)];\n    let encoded4 = LOOKUP[base64.charCodeAt(i + 3)];\n\n    bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n    bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n    bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n  }\n\n  return bytes;\n}\n","import KernProcessor from './KernProcessor';\nimport UnicodeLayoutEngine from './UnicodeLayoutEngine';\nimport GlyphRun from './GlyphRun';\nimport GlyphPosition from './GlyphPosition';\nimport * as Script from './Script';\nimport AATLayoutEngine from '../aat/AATLayoutEngine';\nimport OTLayoutEngine from '../opentype/OTLayoutEngine';\n\nexport default class LayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    // Map string to glyphs if needed\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = Script.forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        let codePoints = [];\n        for (let glyph of string) {\n          codePoints.push(...glyph.codePoints);\n        }\n\n        script = Script.forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    let glyphRun = new GlyphRun(glyphs, features, script, language, direction);\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    // Substitute and position the glyphs\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  }\n\n  substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  }\n\n  position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(glyph => new GlyphPosition(glyph.advanceWidth));\n    let positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  }\n\n  hideDefaultIgnorables(glyphs, positions) {\n    let space = this.font.glyphForCodePoint(0x20);\n    for (let i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    let plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n      \tcase 0x00: return ch === 0x00AD;\n      \tcase 0x03: return ch === 0x034F;\n      \tcase 0x06: return ch === 0x061C;\n      \tcase 0x17: return 0x17B4 <= ch && ch <= 0x17B5;\n      \tcase 0x18: return 0x180B <= ch && ch <= 0x180E;\n      \tcase 0x20: return (0x200B <= ch && ch <= 0x200F) || (0x202A <= ch && ch <= 0x202E) || (0x2060 <= ch && ch <= 0x206F);\n      \tcase 0xFE: return (0xFE00 <= ch && ch <= 0xFE0F) || ch === 0xFEFF;\n      \tcase 0xFF: return 0xFFF0 <= ch && ch <= 0xFFF8;\n      \tdefault:   return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n      \tcase 0x01: return (0x1BCA0 <= ch && ch <= 0x1BCA3) || (0x1D173 <= ch && ch <= 0x1D17A);\n      \tcase 0x0E: return 0xE0000 <= ch && ch <= 0xE0FFF;\n      \tdefault:   return false;\n      }\n    }\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.engine) {\n      features.push(...this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  }\n\n  stringsForGlyph(gid) {\n    let result = new Set;\n\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (let codePoint of codePoints) {\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (let string of this.engine.stringsForGlyph(gid)) {\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  }\n}\n","import {binarySearch} from '../utils';\n\nexport default class KernProcessor {\n  constructor(font) {\n    this.kern = font.kern;\n  }\n\n  process(glyphs, positions) {\n    for (let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      let left = glyphs[glyphIndex].id;\n      let right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  }\n\n  getKerning(left, right) {\n    let res = 0;\n\n    for (let table of this.kern.tables) {\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error(`Unsupported kerning table version ${table.version}`);\n      }\n\n      let val = 0;\n      let s = table.subtable;\n      switch (table.format) {\n        case 0:\n          let pairIdx = binarySearch(s.pairs, function (pair) {\n            return (left - pair.left) || (right - pair.right);\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          let leftOffset = 0, rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          let index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  }\n}\n","import {getCombiningClass} from 'unicode-properties';\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\nexport default class UnicodeLayoutEngine {\n  constructor(font) {\n    this.font = font;\n  }\n\n  positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    let clusterStart = 0;\n    let clusterEnd = 0;\n    for (let index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.isMark) { // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  }\n\n  positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    let base = glyphs[clusterStart];\n    let baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += ((base.codePoints.length - 1) * baseBox.width) / base.codePoints.length;\n    }\n\n    let xOffset = -positions[clusterStart].xAdvance;\n    let yOffset = 0;\n    let yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (let index = clusterStart + 1; index <= clusterEnd; index++) {\n      let mark = glyphs[index];\n      let markBox = mark.cbox;\n      let position = positions[index];\n\n      let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default: // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  }\n\n  getCombiningClass(codePoint) {\n    let combiningClass = getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) { // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22': // meteg\n        return 'Below';\n\n      case 'CCC23': // rafe\n        return 'Attached_Above';\n\n      case 'CCC24': // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19': // holam\n        return 'Above_Left';\n\n      case 'CCC26': // point varika\n        return 'Above';\n\n      case 'CCC21': // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36': // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32': // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103': // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107': // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118': // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122': // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132': // sign u\n        return 'Below';\n\n      case 'CCC130': // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  }\n}\n","import BBox from '../glyph/BBox';\nimport * as Script from '../layout/Script';\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\nexport default class GlyphRun {\n  constructor(glyphs, features, script, language, direction) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = null;\n\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n    this.script = script;\n\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n    this.language = language || null;\n\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n    this.direction = direction || Script.direction(script);\n\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n    this.features = {};\n\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      for (let tag of features) {\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n  get advanceWidth() {\n    let width = 0;\n    for (let position of this.positions) {\n      width += position.xAdvance;\n    }\n\n    return width;\n  }\n\n /**\n  * The total advance height of the run.\n  * @type {number}\n  */\n  get advanceHeight() {\n    let height = 0;\n    for (let position of this.positions) {\n      height += position.yAdvance;\n    }\n\n    return height;\n  }\n\n /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */\n  get bbox() {\n    let bbox = new BBox;\n\n    let x = 0;\n    let y = 0;\n    for (let index = 0; index < this.glyphs.length; index++) {\n      let glyph = this.glyphs[index];\n      let p = this.positions[index];\n      let b = glyph.bbox;\n\n      bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n      bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n      x += p.xAdvance;\n      y += p.yAdvance;\n    }\n\n    return bbox;\n  }\n}\n","/**\n * Represents a glyph bounding box\n */\nexport default class BBox {\n  constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity) {\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n  get width() {\n    return this.maxX - this.minX;\n  }\n\n  /**\n   * The height of the bounding box\n   * @type {number}\n   */\n  get height() {\n    return this.maxY - this.minY;\n  }\n\n  addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  }\n\n  copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  }\n}\n","import {getScript} from 'unicode-properties';\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nconst OPENTYPE_SCRIPTS = {};\nfor (let script in UNICODE_SCRIPTS) {\n  let tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (let t of tag) {\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nexport function fromUnicode(script) {\n  return UNICODE_SCRIPTS[script];\n}\n\nexport function fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nexport function forString(string) {\n  let len = string.length;\n  let idx = 0;\n  while (idx < len) {\n    let code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      let next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    let script = getScript(code);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nexport function forCodePoints(codePoints) {\n  for (let i = 0; i < codePoints.length; i++) {\n    let codePoint = codePoints[i];\n    let script = getScript(codePoint);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n// The scripts in this map are written from right to left\nconst RTL = {\n  arab: true,   // Arabic\n  hebr: true,   // Hebrew\n  syrc: true,   // Syriac\n  thaa: true,   // Thaana\n  cprt: true,   // Cypriot Syllabary\n  khar: true,   // Kharosthi\n  phnx: true,   // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true,   // Lydian\n  avst: true,   // Avestan\n  armi: true,   // Imperial Aramaic\n  phli: true,   // Inscriptional Pahlavi\n  prti: true,   // Inscriptional Parthian\n  sarb: true,   // Old South Arabian\n  orkh: true,   // Old Turkic, Orkhon Runic\n  samr: true,   // Samaritan\n  mand: true,   // Mandaic, Mandaean\n  merc: true,   // Meroitic Cursive\n  mero: true,   // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,   // Manichaean\n  mend: true,   // Mende Kikakui\n  nbat: true,   // Nabataean\n  narb: true,   // Old North Arabian\n  palm: true,   // Palmyrene\n  phlp: true    // Psalter Pahlavi\n};\n\nexport function direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n","/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nexport default class GlyphPosition {\n  constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0) {\n    /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */\n    this.xAdvance = xAdvance;\n\n    /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */\n    this.yAdvance = yAdvance;\n\n    /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */\n    this.xOffset = xOffset;\n\n    /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */\n    this.yOffset = yOffset;\n  }\n}\n","import * as AATFeatureMap from './AATFeatureMap';\nimport * as Script from '../layout/Script';\nimport AATMorxProcessor from './AATMorxProcessor';\n\nexport default class AATLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, AATFeatureMap.mapOTToAAT(glyphRun.features));\n  }\n\n  getAvailableFeatures(script, language) {\n    return AATFeatureMap.mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  }\n\n  stringsForGlyph(gid) {\n    let glyphStrings = this.morxProcessor.generateInputs(gid);\n    let result = new Set;\n\n    for (let glyphs of glyphStrings) {\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  }\n\n  _addStrings(glyphs, index, strings, string) {\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (let codePoint of codePoints) {\n      let s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  }\n}\n","// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n    // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nconst feature = (name, selector) => [features[name].code, features[name][selector]];\n\nconst OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n  // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (let i = 1; i <= 99; i++) {\n  OTMapping[`cv${`00${i}`.slice(-2)}`] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nlet AATMapping = {};\nfor (let ot in OTMapping) {\n  let aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nexport function mapOTToAAT(features) {\n  let res = {};\n  for (let k in features) {\n    let r;\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  let [type, setting] = f;\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nexport function mapAATToOT(features) {\n  let res = {};\n  if (Array.isArray(features)) {\n    for (let k = 0; k < features.length; k++) {\n      let r;\n      let f = mapFeatureStrings(features[k]);\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n\n  } else if (typeof features === 'object') {\n    for (let type in features) {\n      let feature = features[type];\n      for (let setting in feature) {\n        let r;\n        let f = mapFeatureStrings([type, setting]);\n        if (feature[setting] && (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]])) {\n          res[r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n","import AATStateMachine from './AATStateMachine';\nimport AATLookupTable from './AATLookupTable';\nimport {cache} from '../decorators';\n\n// indic replacement flags\nconst MARK_FIRST = 0x8000;\nconst MARK_LAST  = 0x2000;\nconst VERB       = 0x000F;\n\n// contextual substitution and glyph insertion flag\nconst SET_MARK = 0x8000;\n\n// ligature entry flags\nconst SET_COMPONENT  = 0x8000;\nconst PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nconst LAST_MASK   = 0x80000000;\nconst STORE_MASK  = 0x40000000;\nconst OFFSET_MASK = 0x3FFFFFFF;\n\nconst VERTICAL_ONLY           = 0x800000;\nconst REVERSE_DIRECTION       = 0x400000;\nconst HORIZONTAL_AND_VERTICAL = 0x200000;\n\n// glyph insertion flags\nconst CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst MARKED_IS_KASHIDA_LIKE  = 0x1000;\nconst CURRENT_INSERT_BEFORE   = 0x0800;\nconst MARKED_INSERT_BEFORE    = 0x0400;\nconst CURRENT_INSERT_COUNT    = 0x03E0;\nconst MARKED_INSERT_COUNT     = 0x001F;\n\nexport default class AATMorxProcessor {\n  constructor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n  process(glyphs, features = {}) {\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (let feature of chain.features) {\n        let f;\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    let index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  }\n\n  processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  }\n\n  @cache\n  getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  }\n\n  getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n    }\n  }\n\n  processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  }\n\n  processContextualSubstitution(glyph, entry, index) {\n    let subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.markIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.currentIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[index];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  }\n\n  processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      let actions = this.subtable.table.ligatureActions;\n      let components = this.subtable.table.components;\n      let ligatureList = this.subtable.table.ligatureList;\n\n      let actionIndex = entry.action;\n      let last = false;\n      let ligatureIndex = 0;\n      let codePoints = [];\n      let ligatureGlyphs = [];\n\n      while (!last) {\n        let componentGlyph = this.ligatureStack.pop();\n        codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n\n        let action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        let store = !!(action & STORE_MASK);\n        let offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        let component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          let ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      this.ligatureStack.push(...ligatureGlyphs);\n    }\n  }\n\n  processNoncontextualSubstitutions(subtable, glyphs, index) {\n    let lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        let gid = lookupTable.lookup(glyph.id);\n        if (gid) { // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  }\n\n  _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    let insertions = [];\n    while (count--) {\n      let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    this.glyphs.splice(glyphIndex, 0, ...insertions);\n  }\n\n  processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      let count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      let count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n    }\n  }\n\n  getSupportedFeatures() {\n    let features = [];\n    for (let chain of this.morx.chains) {\n      for (let feature of chain.features) {\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  }\n\n  generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  }\n\n  generateInputCache() {\n    this.inputCache = {};\n\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  }\n\n  generateInputsForSubtable(subtable) {\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    let reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let input = [];\n    let stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: (glyph, entry) => {\n        let glyphs = this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        let g = this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        let count = 0;\n        let found = 0;\n        for (let i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          let result = input.map(g => g.id);\n          let cache = this.inputCache[found];\n          if (cache) {\n            cache.push(result);\n          } else {\n            this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: () => {\n        ({glyphs: this.glyphs, ligatureStack: this.ligatureStack} = stack.pop());\n        input.pop();\n      }\n    });\n  }\n}\n\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n  let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  let length = lastGlyph - firstGlyph + 1;\n  switch (verb) {\n    case 0: // no change\n      return glyphs;\n\n    case 1: // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2: // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3: // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4: // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5: // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6: // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7: // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8: // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9: // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10: // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11: // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12: // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13: // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14: // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15: // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(`Unknown verb: ${verb}`);\n  }\n}\n","import AATLookupTable from './AATLookupTable';\n\nconst START_OF_TEXT_STATE = 0;\nconst START_OF_LINE_STATE = 1;\n\nconst END_OF_TEXT_CLASS = 0;\nconst OUT_OF_BOUNDS_CLASS = 1;\nconst DELETED_GLYPH_CLASS = 2;\nconst END_OF_LINE_CLASS = 3;\n\nconst DONT_ADVANCE = 0x4000;\n\nexport default class AATStateMachine {\n  constructor(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  process(glyphs, reverse, processEntry) {\n    let currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    let index = reverse ? glyphs.length - 1 : 0;\n    let dir = reverse ? -1 : 1;\n\n    while ((dir === 1 && index <= glyphs.length) || (dir === -1 && index >= -1)) {\n      let glyph = null;\n      let classCode = OUT_OF_BOUNDS_CLASS;\n      let shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) { // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      let row = this.stateTable.stateArray.getItem(currentState);\n      let entryIndex = row[classCode];\n      let entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !==  DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  traverse(opts, state = 0, visited = new Set) {\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    let {nClasses, stateArray, entryTable} = this.stateTable;\n    let row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (let classCode = 4; classCode < nClasses; classCode++) {\n      let entryIndex = row[classCode];\n      let entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (let glyph of this.lookupTable.glyphsForValue(classCode)) {\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  }\n}\n","import {cache} from '../decorators';\nimport {range} from '../utils';\n\nexport default class AATLookupTable {\n  constructor(table) {\n    this.table = table;\n  }\n\n  lookup(glyph) {\n    switch (this.table.version) {\n      case 0: // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4: {\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.firstGlyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.firstGlyph) {\n            max = mid - 1;\n          } else if (glyph > seg.lastGlyph) {\n            min = mid + 1;\n          } else {\n            if (this.table.version === 2) {\n              return seg.value;\n            } else {\n              return seg.values[glyph - seg.firstGlyph];\n            }\n          }\n        }\n\n        return null;\n      }\n\n      case 6: { // lookup single\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.glyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.glyph) {\n            max = mid - 1;\n          } else if (glyph > seg.glyph) {\n            min = mid + 1;\n          } else {\n            return seg.value;\n          }\n        }\n\n        return null;\n      }\n\n      case 8: // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n  }\n\n  @cache\n  glyphsForValue(classValue) {\n    let res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4: {\n        for (let segment of this.table.segments) {\n          if ((this.table.version === 2 && segment.value === classValue)) {\n            res.push(...range(segment.firstGlyph, segment.lastGlyph + 1));\n          } else {\n            for (let index = 0; index < segment.values.length; index++) {\n              if (segment.values[index] === classValue) {\n                res.push(segment.firstGlyph + index);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 6: { // lookup single\n        for (let segment of this.table.segments) {\n          if (segment.value === classValue) {\n            res.push(segment.glyph);\n          }\n        }\n\n        break;\n      }\n\n      case 8: { // lookup trimmed\n        for (let i = 0; i < this.table.values.length; i++) {\n          if (this.table.values[i] === classValue) {\n            res.push(this.table.firstGlyph + i);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n\n    return res;\n  }\n}\n","import ShapingPlan from './ShapingPlan';\nimport * as Shapers from './shapers';\nimport GlyphInfo from './GlyphInfo';\nimport GSUBProcessor from './GSUBProcessor';\nimport GPOSProcessor from './GPOSProcessor';\n\nexport default class OTLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  setup(glyphRun) {\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(glyph => new GlyphInfo(this.font, glyph.id, [...glyph.codePoints]));\n\n    // Select a script based on what is available in GSUB/GPOS.\n    let script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = Shapers.choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n\n    // Assign chosen features to output glyph run\n    for (let key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  }\n\n  substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos);\n\n      // Map glyph infos back to normal Glyph objects\n      glyphRun.glyphs = this.glyphInfos.map(glyphInfo => this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n    }\n  }\n\n  position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  }\n\n  zeroMarkAdvances(positions) {\n    for (let i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  }\n}\n","import * as Script from '../layout/Script';\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\nexport default class ShapingPlan {\n  constructor(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n  _addFeatures(features, global) {\n    let stageIndex = this.stages.length - 1;\n    let stage = this.stages[stageIndex];\n    for (let feature of features) {\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n\n  /**\n   * Add features to the last stage\n   */\n  add(arg, global = true) {\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n\n  /**\n   * Add a new stage\n   */\n  addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  }\n\n  setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (let tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          let stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  assignGlobalFeatures(glyphs) {\n    for (let glyph of glyphs) {\n      for (let feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  process(processor, glyphs, positions) {\n    for (let stage of this.stages) {\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport ArabicShaper from './ArabicShaper';\nimport HangulShaper from './HangulShaper';\nimport IndicShaper from './IndicShaper';\nimport UniversalShaper from './UniversalShaper';\n\nconst SHAPERS = {\n  arab: ArabicShaper,    // Arabic\n  mong: ArabicShaper,    // Mongolian\n  syrc: ArabicShaper,    // Syriac\n  'nko ': ArabicShaper,  // N'Ko\n  phag: ArabicShaper,    // Phags Pa\n  mand: ArabicShaper,    // Mandaic\n  mani: ArabicShaper,    // Manichaean\n  phlp: ArabicShaper,    // Psalter Pahlavi\n\n  hang: HangulShaper,    // Hangul\n\n  bng2: IndicShaper,     // Bengali\n  beng: IndicShaper,     // Bengali\n  dev2: IndicShaper,     // Devanagari\n  deva: IndicShaper,     // Devanagari\n  gjr2: IndicShaper,     // Gujarati\n  gujr: IndicShaper,     // Gujarati\n  guru: IndicShaper,     // Gurmukhi\n  gur2: IndicShaper,     // Gurmukhi\n  knda: IndicShaper,     // Kannada\n  knd2: IndicShaper,     // Kannada\n  mlm2: IndicShaper,     // Malayalam\n  mlym: IndicShaper,     // Malayalam\n  ory2: IndicShaper,     // Oriya\n  orya: IndicShaper,     // Oriya\n  taml: IndicShaper,     // Tamil\n  tml2: IndicShaper,     // Tamil\n  telu: IndicShaper,     // Telugu\n  tel2: IndicShaper,     // Telugu\n  khmr: IndicShaper,     // Khmer\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: IndicShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper,   // Latin\n  DFLT: DefaultShaper    // Default\n};\n\nexport function choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (let s of script) {\n    let shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n","import {isDigit} from 'unicode-properties';\n\nconst VARIATION_FEATURES = ['rvrn'];\nconst COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nconst FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nconst HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nconst VERTICAL_FEATURES = ['vert'];\nconst DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nexport default class DefaultShaper {\n  static zeroMarkWidths = 'AFTER_GPOS';\n  static plan(plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(plan);\n    this.planFeatures(plan);\n    this.planPostprocessing(plan, features);\n\n    // Assign the global features to all the glyphs\n    plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(plan, glyphs);\n  }\n\n  static planPreprocessing(plan) {\n    plan.add({\n      global: [...VARIATION_FEATURES, ...DIRECTIONAL_FEATURES[plan.direction]],\n      local: FRACTIONAL_FEATURES\n    });\n  }\n\n  static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  }\n\n  static planPostprocessing(plan, userFeatures) {\n    plan.add([...COMMON_FEATURES, ...HORIZONTAL_FEATURES]);\n    plan.setFeatureOverrides(userFeatures);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (let i = 0; i < glyphs.length; i++) {\n      let glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) { // fraction slash\n        let start = i;\n        let end = i + 1;\n\n        // Apply numerator\n        while (start > 0 && isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport {getCategory} from 'unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport { decodeBase64 } from '../../utils';\n\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/data.trie', 'base64')));\nconst FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nconst ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nconst ISOL = 'isol';\nconst FINA = 'fina';\nconst FIN2 = 'fin2';\nconst FIN3 = 'fin3';\nconst MEDI = 'medi';\nconst MED2 = 'med2';\nconst INIT = 'init';\nconst NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nconst STATE_TABLE = [\n  //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n  // State 0: prev was U,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN2, 5 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 2: prev was D/L in ISOL form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ INIT, FINA, 1 ],  [ INIT, FINA, 3 ],  [ INIT, FINA, 4 ],  [ INIT, FINA, 6 ] ],\n\n  // State 3: prev was D in FINA form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MEDI, FINA, 1 ],  [ MEDI, FINA, 3 ],  [ MEDI, FINA, 4 ],  [ MEDI, FINA, 6 ] ],\n\n  // State 4: prev was FINA ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MED2, ISOL, 1 ],  [ MED2, ISOL, 2 ],  [ MED2, FIN2, 5 ],  [ MED2, ISOL, 6 ] ],\n\n  // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ ISOL, ISOL, 1 ],  [ ISOL, ISOL, 2 ],  [ ISOL, FIN2, 5 ],  [ ISOL, ISOL, 6 ] ],\n\n  // State 6: prev was DALATH/RISH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN3, 5 ],  [ NONE, ISOL, 6 ] ]\n];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\nexport default class ArabicShaper extends DefaultShaper {\n  static planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (let i = 0; i < FEATURES.length; i++) {\n      let feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  }\n\n  static assignFeatures(plan, glyphs) {\n    super.assignFeatures(plan, glyphs);\n\n    let prev = -1;\n    let state = 0;\n    let actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (let i = 0; i < glyphs.length; i++) {\n      let curAction, prevAction;\n      var glyph = glyphs[i];\n      let type = getShapingClass(glyph.codePoints[0]);\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      [prevAction, curAction, state] = STATE_TABLE[state][type];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (let index = 0; index < glyphs.length; index++) {\n      let feature;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n}\n\nfunction getShapingClass(codePoint) {\n  let res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  let category = getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n","import DefaultShaper from './DefaultShaper';\nimport GlyphInfo from '../GlyphInfo';\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nexport default class HangulShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    let state = 0;\n    let i = 0;\n    while (i < glyphs.length) {\n      let action;\n      let glyph = glyphs[i];\n      let code = glyph.codePoints[0];\n      let type = getType(code);\n\n      [ action, state ] = STATE_TABLE[state][type];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  }\n}\n\nconst HANGUL_BASE  = 0xac00;\nconst HANGUL_END   = 0xd7a4;\nconst HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nconst L_BASE  = 0x1100; // lead\nconst V_BASE  = 0x1161; // vowel\nconst T_BASE  = 0x11a7; // trail\nconst L_COUNT = 19;\nconst V_COUNT = 21;\nconst T_COUNT = 28;\nconst L_END   = L_BASE + L_COUNT - 1;\nconst V_END   = V_BASE + V_COUNT - 1;\nconst T_END   = T_BASE + T_COUNT - 1;\nconst DOTTED_CIRCLE = 0x25cc;\n\nconst isL    = code => 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst isV    = code => 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst isT    = code => 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst isTone = code => 0x302e <= code && code <= 0x302f;\nconst isLVT  = code => HANGUL_BASE <= code && code <= HANGUL_END;\nconst isLV   = code => (code - HANGUL_BASE) < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\nconst isCombiningL = code => L_BASE <= code && code <= L_END;\nconst isCombiningV = code => V_BASE <= code && code <= V_END;\nconst isCombiningT = code => T_BASE + 1 && 1 <= code && code <= T_END;\n\n// Character categories\nconst X   = 0; // Other character\nconst L   = 1; // Leading consonant\nconst V   = 2; // Medial vowel\nconst T   = 3; // Trailing consonant\nconst LV  = 4; // Composed <LV> syllable\nconst LVT = 5; // Composed <LVT> syllable\nconst M   = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code))    { return L; }\n  if (isV(code))    { return V; }\n  if (isT(code))    { return T; }\n  if (isLV(code))   { return LV; }\n  if (isLVT(code))  { return LVT; }\n  if (isTone(code)) { return M; }\n  return X;\n}\n\n// State machine actions\nconst NO_ACTION = 0;\nconst DECOMPOSE = 1;\nconst COMPOSE   = 2;\nconst TONE_MARK = 4;\nconst INVALID   = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst STATE_TABLE = [\n  //       X                 L                 V                T                  LV                LVT               M\n  // State 0: start state\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 1: <L>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [  COMPOSE, 2  ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 2: <L,V> or <LV>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [  COMPOSE, 3  ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ],\n\n  // State 3: <L,V,T> or <LVT>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ]\n];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyph.codePoints[0];\n\n  let s = code - HANGUL_BASE;\n  let t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  let l = L_BASE + s / V_COUNT | 0;\n  let v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) ||\n      !font.hasGlyphForCodePoint(v) ||\n      (t !== T_BASE && !font.hasGlyphForCodePoint(t))) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  let ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  let vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  let insert = [ ljmo, vjmo ];\n\n  if (t > T_BASE) {\n    let tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice(i, 1, ...insert);\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n  let type = getType(code);\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  let lv, ljmo, vjmo, tjmo;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    let l = ljmo.codePoints[0];\n    let v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  let t = (tjmo && tjmo.codePoints[0]) || T_BASE;\n  if ((lv != null) && (t === T_BASE || isCombiningT(t))) {\n    let s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      let del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) { ljmo.features.ljmo = true; }\n  if (vjmo) { vjmo.features.vjmo = true; }\n  if (tjmo) { tjmo.features.tjmo = true; }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) { return; }\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    let dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n","import {isMark} from 'unicode-properties';\nimport OTProcessor from './OTProcessor';\n\nexport default class GlyphInfo {\n  constructor(font, id, codePoints = [], features) {\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (let i = 0; i < features.length; i++) {\n        let feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n    this.substituted = true;\n\n    let GDEF = this._font.GDEF;\n    if (GDEF && GDEF.glyphClassDef) {\n      // TODO: clean this up\n      let classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n      this.isBase = classID === 1;\n      this.isLigature = classID === 2;\n      this.isMark = classID === 3;\n      this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n    } else {\n      this.isMark = this.codePoints.length > 0 && this.codePoints.every(isMark);\n      this.isBase = !this.isMark;\n      this.isLigature = this.codePoints.length > 1;\n      this.markAttachmentType = 0;\n    }\n  }\n\n  copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  }\n}\n","import GlyphIterator from './GlyphIterator';\nimport * as Script from '../layout/Script';\n\nconst DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nexport default class OTProcessor {\n  constructor(font, table) {\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor\n      ? this.findVariationsIndex(font._variationProcessor.normalizedCoords)\n      : -1;\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (let s of script) {\n      for (let entry of this.table.scriptList) {\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  selectScript(script, language, direction) {\n    let changed = false;\n    let entry;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction || direction !== this.direction) {\n      this.direction = direction || Script.direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (let lang of this.script.langSysRecords) {\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (let featureIndex of this.language.featureIndexes) {\n          let record = this.table.featureList[featureIndex];\n          let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  }\n\n  lookupsForFeatures(userFeatures = [], exclude) {\n    let lookups = [];\n    for (let tag of userFeatures) {\n      let feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (let lookupIndex of feature.lookupListIndexes) {\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort((a, b) => a.index - b.index);\n    return lookups;\n  }\n\n  substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    let substitutions = record.featureTableSubstitution.substitutions;\n    for (let substitution of substitutions) {\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  }\n\n  findVariationsIndex(coords) {\n    let variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n\n    let records = variations.featureVariationRecords;\n    for (let i = 0; i < records.length; i++) {\n      let conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  variationConditionsMatch(conditions, coords) {\n    return conditions.every(condition => {\n      let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    let lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  }\n\n  applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (let { feature, lookup } of lookups) {\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (let table of lookup.subTables) {\n          let res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  }\n\n  applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  }\n\n  applyLookupList(lookupRecords) {\n    let options = this.glyphIterator.options;\n    let glyphIndex = this.glyphIterator.index;\n\n    for (let lookupRecord of lookupRecords) {\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      // Get the lookup and setup flags for subtables\n      let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      // Apply lookup subtables until one matches\n      for (let table of lookup.subTables) {\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  }\n\n  coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (let range of coverage.rangeRecords) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  }\n\n  match(sequenceIndex, sequence, fn, matched) {\n    let pos = this.glyphIterator.index;\n    let glyph = this.glyphIterator.increment(sequenceIndex);\n    let idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  }\n\n  sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => component === glyph.id);\n  }\n\n  sequenceMatchIndices(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => {\n      // If the current feature doesn't apply to this glyph,\n      if (!(this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  }\n\n  coverageSequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (coverage, glyph) =>\n      this.coverageIndex(coverage, glyph.id) >= 0\n    );\n  }\n\n  getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1: // Class array\n        let i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (let range of classDef.classRangeRecord) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  }\n\n  classSequenceMatches(sequenceIndex, sequence, classDef) {\n    return this.match(sequenceIndex, sequence, (classID, glyph) =>\n      classID === this.getClassID(glyph.id, classDef)\n    );\n  }\n\n  applyContext(table) {\n    let index, set;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.ruleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n        for (let rule of set) {\n          if (this.classSequenceMatches(1, rule.classes, table.classDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n\n  applyChainingContext(table) {\n    let index;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let set = table.chainRuleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack)\n            && this.sequenceMatches(1, rule.input)\n            && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        let rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (let rule of rules) {\n          if (this.classSequenceMatches(-rule.backtrack.length, rule.backtrack, table.backtrackClassDef) &&\n            this.classSequenceMatches(1, rule.input, table.inputClassDef) &&\n            this.classSequenceMatches(1 + rule.input.length, rule.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) &&\n          this.coverageSequenceMatches(0, table.inputCoverage) &&\n          this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n}\n","export default class GlyphIterator {\n  constructor(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  reset(options = {}, index = 0) {\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  }\n\n  get cur() {\n    return this.glyphs[this.index] || null;\n  }\n\n  shouldIgnore(glyph) {\n    return (this.flags.ignoreMarks && glyph.isMark) ||\n           (this.flags.ignoreBaseGlyphs && glyph.isBase) ||\n           (this.flags.ignoreLigatures && glyph.isLigature) ||\n           (this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType);\n  }\n\n  move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  }\n\n  next() {\n    return this.move(+1);\n  }\n\n  prev() {\n    return this.move(-1);\n  }\n\n  peek(count = 1) {\n    let idx = this.index;\n    let res = this.increment(count);\n    this.index = idx;\n    return res;\n  }\n\n  peekIndex(count = 1) {\n    let idx = this.index;\n    this.increment(count);\n    let res = this.index;\n    this.index = idx;\n    return res;\n  }\n\n  increment(count = 1) {\n    let dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport {getCategory} from 'unicode-properties';\nimport * as Script from '../../layout/Script';\nimport GlyphInfo from '../GlyphInfo';\nimport indicMachine from './indic.json';\nimport useData from './use.json';\nimport {\n  CATEGORIES,\n  POSITIONS,\n  CONSONANT_FLAGS,\n  JOINER_FLAGS,\n  HALANT_OR_COENG_FLAGS, INDIC_CONFIGS,\n  INDIC_DECOMPOSITIONS\n} from './indic-data';\nimport { decodeBase64 } from '../../utils';\n\nconst {decompositions} = useData;\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/indic.trie', 'base64')));\nconst stateMachine = new StateMachine(indicMachine);\n\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\nexport default class IndicShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    plan.addStage(['locl', 'ccmp']);\n\n    plan.addStage(initialReordering);\n\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n\n    plan.addStage(finalReordering);\n\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n\n    // Setup the indic config for the selected script\n    plan.unicodeScript = Script.fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n\n    // TODO: turn off kern (Khmer) and liga features.\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      let d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n      if (d) {\n        let decomposed = d.map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction indicCategory(glyph) {\n  return trie.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie.get(glyph.codePoints[0]) & 0xff);\n}\n\nclass IndicInfo {\n  constructor(category, position, syllableType, syllable) {\n    this.category = category;\n    this.position = position;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  let last = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(indicCategory))) {\n    if (start > last) {\n      ++syllable;\n      for (let i = last; i < start; i++) {\n        glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(\n        1 << indicCategory(glyphs[i]),\n        indicPosition(glyphs[i]),\n        tags[0],\n        syllable\n      );\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n    for (let i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (let glyph of glyphs) {\n    glyph.features = {[feature]: true};\n  }\n\n  let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  let glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  let virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    let info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (let i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let {category, syllableType} = glyphs[start].shaperInfo;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(\n        1 << indicCategory(g),\n        indicPosition(g),\n        glyphs[start].shaperInfo.syllableType,\n        glyphs[start].shaperInfo.syllable\n      );\n\n      // Insert after possible Repha.\n      let i = start;\n      while (i < end && glyphs[i].shaperInfo.category === CATEGORIES.Repha) {\n        i++;\n      }\n\n      glyphs.splice(i++, 0, g);\n      end++;\n    }\n\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    let base = end;\n    let limit = start;\n    let hasReph = false;\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph &&\n      features.rphf &&\n      start + 3 <= end && (\n        (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2])) ||\n        (indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)\n      )\n    ) {\n      // See if it matches the 'rphf' feature.\n      let g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(g.slice(0, 2), 'rphf') || (indicConfig.rephMode === 'Explicit' && wouldSubstitute(g, 'rphf'))) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last': {\n        // starting from the end of the syllable, move backwards\n        let i = end;\n        let seenBelow = false;\n\n        do {\n          let info = glyphs[--i].shaperInfo;\n\n          // until a consonant is found\n          if (isConsonant(glyphs[i])) {\n            // that does not have a below-base or post-base form\n            // (post-base forms have to follow below-base forms),\n            if (info.position !== POSITIONS.Below_C && (info.position !== POSITIONS.Post_C || seenBelow)) {\n              base = i;\n              break;\n            }\n\n            // or that is not a pre-base reordering Ra,\n            //\n            // IMPLEMENTATION NOTES:\n            //\n            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n            // by the logic above already.\n            //\n\n            // or arrive at the first consonant. The consonant stopped at will\n            // be the base.\n            if (info.position === POSITIONS.Below_C) {\n              seenBelow = true;\n            }\n\n            base = i;\n          } else if (start < i && info.category === CATEGORIES.ZWJ && glyphs[i - 1].shaperInfo.category === CATEGORIES.H) {\n            // A ZWJ after a Halant stops the base search, and requests an explicit\n            // half form.\n            // A ZWJ before a Halant, requests a subjoined form instead, and hence\n            // search continues.  This is particularly important for Bengali\n            // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n            break;\n          }\n        } while (i > limit);\n        break;\n      }\n\n      case 'First': {\n        // The first consonant is always the base.\n        base = start;\n\n        // Mark all subsequent consonants as below.\n        for (let i = base + 1; i < end; i++) {\n          if (isConsonant(glyphs[i])) {\n            glyphs[i].shaperInfo.position = POSITIONS.Below_C;\n          }\n        }\n      }\n    }\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n\n    // Reorder characters\n\n    for (let i = start; i < base; i++) {\n      let info = glyphs[i].shaperInfo;\n      info.position = Math.min(POSITIONS.Pre_C, info.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (let i = base + 1; i < end; i++) {\n      if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n        for (let j = i + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // Handle beginning Ra\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      let disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (let i = base + 1; i < end; i++) {\n        if (glyphs[i].shaperInfo.category === CATEGORIES.H) {\n          let j;\n          for (j = end - 1; j > i; j--) {\n            if (isConsonant(glyphs[j]) || (disallowDoubleHalants && glyphs[j].shaperInfo.category === CATEGORIES.H)) {\n              break;\n            }\n          }\n\n          if (glyphs[j].shaperInfo.category !== CATEGORIES.H && j > i) {\n            // Move Halant to after last consonant.\n            let t = glyphs[i];\n            glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n            glyphs[j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Attach misc marks to previous char to move with them.\n    let lastPos = POSITIONS.Start;\n    for (let i = start; i < end; i++) {\n      let info = glyphs[i].shaperInfo;\n      if (info.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & info.category)) {\n        info.position = lastPos;\n        if (info.category === CATEGORIES.H && info.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (let j = i; j > start; j--) {\n            if (glyphs[j - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              info.position = glyphs[j - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (info.position !== POSITIONS.SMVD) {\n        lastPos = info.position;\n      }\n    }\n\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    let last = base;\n    for (let i = base + 1; i < end; i++) {\n      if (isConsonant(glyphs[i])) {\n        for (let j = last + 1; j < i; j++) {\n          if (glyphs[j].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[j].shaperInfo.position = glyphs[i].shaperInfo.position;\n          }\n        }\n        last = i;\n      } else if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n        last = i;\n      }\n    }\n\n    let arr = glyphs.slice(start, end);\n    arr.sort((a, b) => a.shaperInfo.position - b.shaperInfo.position);\n    glyphs.splice(start, arr.length, ...arr);\n\n    // Find base again\n    for (let i = start; i < end; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        base = i;\n        break;\n      }\n    }\n\n    // Setup features now\n\n    // Reph\n    for (let i = start; i < end && glyphs[i].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; i++) {\n      glyphs[i].features.rphf = true;\n    }\n\n    // Pre-base\n    let blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (let i = start; i < base; i++) {\n      glyphs[i].features.half = true;\n      if (blwf) {\n        glyphs[i].features.blwf = true;\n      }\n    }\n\n    // Post-base\n    for (let i = base + 1; i < end; i++) {\n      glyphs[i].features.abvf = true;\n      glyphs[i].features.pstf = true;\n      glyphs[i].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (let i = start; i + 1 < base; i++) {\n        if (glyphs[i].shaperInfo.category === CATEGORIES.Ra &&\n          glyphs[i + 1].shaperInfo.category === CATEGORIES.H &&\n          (i + 1 === base || glyphs[i + 2].shaperInfo.category === CATEGORIES.ZWJ)\n        ) {\n          glyphs[i].features.blwf = true;\n          glyphs[i + 1].features.blwf = true;\n        }\n      }\n    }\n\n    let prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (let i = base + 1; i + prefLen - 1 < end; i++) {\n        let g = [glyphs[i].copy(), glyphs[i + 1].copy()];\n        if (wouldSubstitute(g, 'pref')) {\n          for (let j = 0; j < prefLen; j++) {\n            glyphs[i++].features.pref = true;\n          }\n\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) {\n            for (; i < end; i++) {\n              glyphs[i].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply ZWJ/ZWNJ effects\n    for (let i = start + 1; i < end; i++) {\n      if (isJoiner(glyphs[i])) {\n        let nonJoiner = glyphs[i].shaperInfo.category === CATEGORIES.ZWNJ;\n        let j = i;\n\n        do {\n          j--;\n\n          // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n\n          // A ZWNJ disables HALF.\n          if (nonJoiner) {\n            delete glyphs[j].features.half;\n          }\n        } while (j > start && !isConsonant(glyphs[j]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n\n    let tryPref = !!features.pref;\n\n    // Find base again\n    let base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (let i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        }\n\n        // For Malayalam, skip over unformed below- (but NOT post-) forms.\n        if (plan.unicodeScript === 'Malayalam') {\n          for (let i = base + 1; i < end; i++) {\n            while (i < end && isJoiner(glyphs[i])) {\n              i++;\n            }\n\n            if (i === end || !isHalantOrCoeng(glyphs[i])) {\n              break;\n            }\n\n            i++; // Skip halant.\n            while (i < end && isJoiner(glyphs[i])) {\n              i++;\n            }\n\n            if (i < end && isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === POSITIONS.Below_C) {\n              base = i;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) { // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      let newPos = base === end ? base - 2 : base - 1;\n\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (let i = newPos; i > start; i--) {\n          if (glyphs[i - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            let oldPos = i - 1;\n            if (oldPos < base && base <= newPos) { // Shouldn't actually happen.\n              base--;\n            }\n\n            let tmp = glyphs[oldPos];\n            glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n            glyphs[newPos] = tmp;\n\n            newPos--;\n          }\n        }\n      }\n    }\n\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end &&\n      glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph &&\n      (glyphs[start].shaperInfo.category === CATEGORIES.Repha) !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)\n    ) {\n      let newRephPos;\n      let rephPos = indicConfig.rephPos;\n      let found = false;\n\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (let i = base + 1; i < newRephPos; i++) {\n            if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      let reph = glyphs[start];\n      glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (let i = base + 1; i < end; i++) {\n        if (glyphs[i].features.pref) {\n           // 1. Only reorder a glyph produced by substitution during application\n           //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n           //    the feature generally but block it in certain contexts.)\n\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            let newPos = base;\n\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (newPos > start && !(glyphs[newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                newPos--;\n              }\n\n              // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n              if (newPos > start && glyphs[newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                let oldPos = i;\n                for (let j = base + 1; j < oldPos; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (newPos > start && isHalantOrCoeng(glyphs[newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (newPos < end && isJoiner(glyphs[newPos])) {\n                newPos++;\n              }\n            }\n\n            let oldPos = i;\n            let tmp = glyphs[oldPos];\n            glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n            glyphs[newPos] = tmp;\n\n            if (newPos <= base && base < oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n","{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}","{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}","// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nexport const CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,    // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14, // Khmer-style Virama.\n  Repha: 1 << 15, // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,    // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n};\n\n// Visual positions in a syllable from left to right.\nexport const POSITIONS = {\n  Start: 1 << 0,\n\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n\n  Above_C: 1 << 6,\n\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n\n  End: 1 << 15\n};\n\nexport const CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nexport const JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nexport const HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\n\nexport const INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\n\n// Additional decompositions that aren't in Unicode\nexport const INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport GlyphInfo from '../GlyphInfo';\nimport useData from './use.json';\nimport { decodeBase64 } from '../../utils';\n\nconst {categories, decompositions} = useData;\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/use.trie', 'base64')));\nconst stateMachine = new StateMachine(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nexport default class UniversalShaper extends DefaultShaper {\n  static zeroMarkWidths = 'BEFORE_GPOS';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      if (decompositions[codepoint]) {\n        let decomposed = decompositions[codepoint].map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nclass USEInfo {\n  constructor(category, syllableType, syllable) {\n    this.category = category;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(useCategory))) {\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    let limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (let i = start; i < start + limit; i++) {\n      glyphs[i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (let glyph of glyphs) {\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let i, j;\n    let info = glyphs[start].shaperInfo;\n    let type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++);\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n","import OTProcessor from './OTProcessor';\nimport GlyphInfo from './GlyphInfo';\n\nexport default class GSUBProcessor extends OTProcessor {\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let glyph = this.glyphIterator.cur;\n        switch (table.version) {\n          case 1:\n            glyph.id = (glyph.id + table.deltaGlyphID) & 0xffff;\n            break;\n\n          case 2:\n            glyph.id = table.substitute.get(index);\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Multiple Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let sequence = table.sequences.get(index);\n\n          if (sequence.length === 0) {\n            // If the sequence length is zero, delete the glyph.\n            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n            this.glyphs.splice(this.glyphIterator.index, 1);\n            return true;\n          }\n\n          this.glyphIterator.cur.id = sequence[0];\n          this.glyphIterator.cur.ligatureComponent = 0;\n\n          let features = this.glyphIterator.cur.features;\n          let curGlyph = this.glyphIterator.cur;\n          let replacement = sequence.slice(1).map((gid, i) => {\n            let glyph = new GlyphInfo(this.font, gid, undefined, features);\n            glyph.shaperInfo = curGlyph.shaperInfo;\n            glyph.isLigated = curGlyph.isLigated;\n            glyph.ligatureComponent = i + 1;\n            glyph.substituted = true;\n            glyph.isMultiplied = true;\n            return glyph;\n          });\n\n          this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n          return true;\n        }\n\n        return false;\n      }\n\n      case 3: { // Alternate Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let USER_INDEX = 0; // TODO\n          this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n          return true;\n        }\n\n        return false;\n      }\n\n      case 4: { // Ligature Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        for (let ligature of table.ligatureSets.get(index)) {\n          let matched = this.sequenceMatchIndices(1, ligature.components);\n          if (!matched) {\n            continue;\n          }\n\n          let curGlyph = this.glyphIterator.cur;\n\n          // Concatenate all of the characters the new ligature will represent\n          let characters = curGlyph.codePoints.slice();\n          for (let index of matched) {\n            characters.push(...this.glyphs[index].codePoints);\n          }\n\n          // Create the replacement ligature glyph\n          let ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, curGlyph.features);\n          ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n          ligatureGlyph.isLigated = true;\n          ligatureGlyph.substituted = true;\n\n          // From Harfbuzz:\n          // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n          //   the ligature to keep its old ligature id.  This will allow it to attach to\n          //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n          //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n          //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n          //   later, we don't want them to lose their ligature id/component, otherwise\n          //   GPOS will fail to correctly position the mark ligature on top of the\n          //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n          //\n          // - If a ligature is formed of components that some of which are also ligatures\n          //   themselves, and those ligature components had marks attached to *their*\n          //   components, we have to attach the marks to the new ligature component\n          //   positions!  Now *that*'s tricky!  And these marks may be following the\n          //   last component of the whole sequence, so we should loop forward looking\n          //   for them and update them.\n          //\n          //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n          //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n          //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n          //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n          //   the new ligature with a component value of 2.\n          //\n          //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n          let isMarkLigature = curGlyph.isMark;\n          for (let i = 0; i < matched.length && isMarkLigature; i++) {\n            isMarkLigature = this.glyphs[matched[i]].isMark;\n          }\n\n          ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n          let lastLigID = curGlyph.ligatureID;\n          let lastNumComps = curGlyph.codePoints.length;\n          let curComps = lastNumComps;\n          let idx = this.glyphIterator.index + 1;\n\n          // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n          // This allows GPOS to attach marks to the correct ligature components.\n          for (let matchIndex of matched) {\n            // Don't assign new ligature components for mark ligatures (see above)\n            if (isMarkLigature) {\n              idx = matchIndex;\n            } else {\n              while (idx < matchIndex) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                idx++;\n              }\n            }\n\n            lastLigID = this.glyphs[idx].ligatureID;\n            lastNumComps = this.glyphs[idx].codePoints.length;\n            curComps += lastNumComps;\n            idx++; // skip base glyph\n          }\n\n          // Adjust ligature components for any marks following\n          if (lastLigID && !isMarkLigature) {\n            for (let i = idx; i < this.glyphs.length; i++) {\n              if (this.glyphs[i].ligatureID === lastLigID) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i].ligatureComponent || 1, lastNumComps);\n                this.glyphs[i].ligatureComponent = ligatureComponent;\n              } else {\n                break;\n              }\n            }\n          }\n\n          // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n          for (let i = matched.length - 1; i >= 0; i--) {\n            this.glyphs.splice(matched[i], 1);\n          }\n\n          this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n          return true;\n        }\n\n        return false;\n      }\n\n      case 5: // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6: // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7: // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n    }\n  }\n}\n","import OTProcessor from './OTProcessor';\n\nexport default class GPOSProcessor extends OTProcessor {\n  applyPositionValue(sequenceIndex, value) {\n    let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // Adjustments for font variations\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n\n    // TODO: device tables\n  }\n\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single positioning value\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1:\n            this.applyPositionValue(0, table.value);\n            break;\n\n          case 2:\n            this.applyPositionValue(0, table.values.get(index));\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Pair Adjustment Positioning\n        let nextGlyph = this.glyphIterator.peek();\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1: // Adjustments for glyph pairs\n            let set = table.pairSets.get(index);\n\n            for (let pair of set) {\n              if (pair.secondGlyph === nextGlyph.id) {\n                this.applyPositionValue(0, pair.value1);\n                this.applyPositionValue(1, pair.value2);\n                return true;\n              }\n            }\n\n            return false;\n\n          case 2: // Class pair adjustment\n            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n            if (class1 === -1 || class2 === -1) {\n              return false;\n            }\n\n            var pair = table.classRecords.get(class1).get(class2);\n            this.applyPositionValue(0, pair.value1);\n            this.applyPositionValue(1, pair.value2);\n            return true;\n        }\n      }\n\n      case 3: { // Cursive Attachment Positioning\n        let nextIndex = this.glyphIterator.peekIndex();\n        let nextGlyph = this.glyphs[nextIndex];\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n        if (!curRecord || !curRecord.exitAnchor) {\n          return false;\n        }\n\n        let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n        if (!nextRecord || !nextRecord.entryAnchor) {\n          return false;\n        }\n\n        let entry = this.getAnchor(nextRecord.entryAnchor);\n        let exit = this.getAnchor(curRecord.exitAnchor);\n\n        let cur = this.positions[this.glyphIterator.index];\n        let next = this.positions[nextIndex];\n        let d;\n\n        switch (this.direction) {\n          case 'ltr':\n            cur.xAdvance = exit.x + cur.xOffset;\n\n            d = entry.x + next.xOffset;\n            next.xAdvance -= d;\n            next.xOffset -= d;\n            break;\n\n          case 'rtl':\n            d = exit.x + cur.xOffset;\n            cur.xAdvance -= d;\n            cur.xOffset -= d;\n            next.xAdvance = entry.x + next.xOffset;\n            break;\n        }\n\n        if (this.glyphIterator.flags.rightToLeft) {\n          this.glyphIterator.cur.cursiveAttachment = nextIndex;\n          cur.yOffset = entry.y - exit.y;\n        } else {\n          nextGlyph.cursiveAttachment = this.glyphIterator.index;\n          cur.yOffset = exit.y - entry.y;\n        }\n\n        return true;\n      }\n\n      case 4: { // Mark to base positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n        if (baseIndex === -1) {\n          return false;\n        }\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 5: { // Mark to ligature positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n        if (ligIndex === -1) {\n          return false;\n        }\n\n        let ligAttach = table.ligatureArray[ligIndex];\n        let markGlyph = this.glyphIterator.cur;\n        let ligGlyph = this.glyphs[baseGlyphIndex];\n        let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && (markGlyph.ligatureComponent > 0)\n          ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1\n          : ligGlyph.codePoints.length - 1;\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = ligAttach[compIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 6: { // Mark to mark positioning\n        let mark1Index = this.coverageIndex(table.mark1Coverage);\n        if (mark1Index === -1) {\n          return false;\n        }\n\n        // get the previous mark to attach to\n        let prevIndex = this.glyphIterator.peekIndex(-1);\n        let prev = this.glyphs[prevIndex];\n        if (!prev || !prev.isMark) {\n          return false;\n        }\n\n        let cur = this.glyphIterator.cur;\n\n        // The following logic was borrowed from Harfbuzz\n        let good = false;\n        if (cur.ligatureID === prev.ligatureID) {\n          if (!cur.ligatureID) { // Marks belonging to the same base\n            good = true;\n          } else if (cur.ligatureComponent === prev.ligatureComponent) { // Marks belonging to the same ligature component\n            good = true;\n          }\n        } else {\n          // If ligature ids don't match, it may be the case that one of the marks\n          // itself is a ligature, in which case match.\n          if ((cur.ligatureID && !cur.ligatureComponent) || (prev.ligatureID && !prev.ligatureComponent)) {\n            good = true;\n          }\n        }\n\n        if (!good) {\n          return false;\n        }\n\n        let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n        if (mark2Index === -1) {\n          return false;\n        }\n\n        let markRecord = table.mark1Array[mark1Index];\n        let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, prevIndex);\n        return true;\n      }\n\n      case 7: // Contextual positioning\n        return this.applyContext(table);\n\n      case 8: // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9: // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`Unsupported GPOS table: ${lookupType}`);\n    }\n  }\n\n  applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    let baseCoords = this.getAnchor(baseAnchor);\n    let markCoords = this.getAnchor(markRecord.markAnchor);\n\n    let basePos = this.positions[baseGlyphIndex];\n    let markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  }\n\n  getAnchor(anchor) {\n    // TODO: contour point, device tables\n    let x = anchor.xCoordinate;\n    let y = anchor.yCoordinate;\n\n    // Adjustments for font variations\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return { x, y };\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    super.applyFeatures(userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  }\n\n  fixCursiveAttachment(i) {\n    let glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      let j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  }\n\n  fixMarkAttachment() {\n    for (let i = 0; i < this.glyphs.length; i++) {\n      let glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        let j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (let k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (let k = j + 1; k < i + 1; k++) {\n            this.positions[i].xOffset += this.positions[k].xAdvance;\n            this.positions[i].yOffset += this.positions[k].yAdvance;\n          }\n        }\n      }\n    }\n  }\n}\n","import Glyph from './Glyph';\nimport Path from './Path';\nimport BBox from './BBox';\nimport * as r from 'restructure';\n\n// The header for both simple and composite glyphs\nlet GlyfHeader = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin:             r.int16,\n  yMin:             r.int16,\n  xMax:             r.int16,\n  yMax:             r.int16\n});\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\n// Flags for composite glyphs\nconst ARG_1_AND_2_ARE_WORDS     = 1 << 0;\nconst ARGS_ARE_XY_VALUES        = 1 << 1;\nconst ROUND_XY_TO_GRID          = 1 << 2;\nconst WE_HAVE_A_SCALE           = 1 << 3;\nconst MORE_COMPONENTS           = 1 << 5;\nconst WE_HAVE_AN_X_AND_Y_SCALE  = 1 << 6;\nconst WE_HAVE_A_TWO_BY_TWO      = 1 << 7;\nconst WE_HAVE_INSTRUCTIONS      = 1 << 8;\nconst USE_MY_METRICS            = 1 << 9;\nconst OVERLAP_COMPOUND          = 1 << 10;\nconst SCALED_COMPONENT_OFFSET   = 1 << 11;\nconst UNSCALED_COMPONENT_OFFSET = 1 << 12;\n\n// Represents a point in a simple glyph\nexport class Point {\n  constructor(onCurve, endContour, x = 0, y = 0) {\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  }\n}\n\n// Represents a component in a composite glyph\nclass Component {\n  constructor(glyphID, dx, dy) {\n    this.glyphID = glyphID;\n    this.dx = dx;\n    this.dy = dy;\n    this.pos = 0;\n    this.scaleX = this.scaleY = 1;\n    this.scale01 = this.scale10 = 0;\n  }\n}\n\n/**\n * Represents a TrueType glyph.\n */\nexport default class TTFGlyph extends Glyph {\n  type = 'TTF';\n\n  // Parses just the glyph header and returns the bounding box\n  _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    let glyph = GlyfHeader.decode(stream);\n\n    let cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  }\n\n  // Parses a single glyph coordinate\n  _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  }\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  _decode() {\n    let glyfPos = this._font.loca.offsets[this.id];\n    let nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) { return null; }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    let startPos = stream.pos;\n\n    let glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  }\n\n  _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    let endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n\n    let flags = [];\n    let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        let count = stream.readUInt8();\n        for (let j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      let point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    let px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    let py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = glyph.points.slice();\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  }\n\n  _decodeComposite(glyph, stream, offset = 0) {\n    // this is a composite glyph\n    glyph.components = [];\n    let haveInstructions = false;\n    let flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      let gPos = stream.pos - offset;\n      let glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX =\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale01 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale10 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = [];\n      for (let j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (let i = 0; i < points.length; i++) {\n        let point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  }\n\n  _getPhantomPoints(glyph) {\n    let cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    let { advanceWidth, advanceHeight, leftBearing, topBearing } = this._metrics;\n\n    return [\n      new Point(false, true, glyph.xMin - leftBearing, 0),\n      new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n      new Point(false, true, 0, glyph.yMax + topBearing),\n      new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n    ];\n  }\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n  _getContours() {\n    let glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n\n    let points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (let component of glyph.components) {\n        let contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (let i = 0; i < contours.length; i++) {\n          let contour = contours[i];\n          for (let j = 0; j < contour.length; j++) {\n            let point = contour[j];\n            let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n            let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n            points.push(new Point(point.onCurve, point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth  = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing   = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing    = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    let contours = [];\n    let cur = [];\n    for (let k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  }\n\n  _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    let cbox = this._getCBox(true);\n    super._getMetrics(cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  }\n\n  // Converts contours to a Path object that can be rendered\n  _getPath() {\n    let contours = this._getContours();\n    let path = new Path;\n\n    for (let i = 0; i < contours.length; i++) {\n      let contour = contours[i];\n      let firstPt = contour[0];\n      let lastPt = contour[contour.length - 1];\n      let start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (let j = start; j < contour.length; j++) {\n        let pt = contour[j];\n        let prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          let midX = (prevPt.x + pt.x) / 2;\n          let midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import { cache } from '../decorators';\nimport Path from './Path';\nimport {isMark} from 'unicode-properties';\nimport StandardNames from './StandardNames';\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nexport default class Glyph {\n  constructor(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  _getPath() {\n    return new Path();\n  }\n\n  _getCBox() {\n    return this.path.cbox;\n  }\n\n  _getBBox() {\n    return this.path.bbox;\n  }\n\n  _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    let metric = table.metrics.get(table.metrics.length - 1);\n    let res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  }\n\n  _getMetrics(cbox) {\n    if (this._metrics) { return this._metrics; }\n\n    let {advance:advanceWidth, bearing:leftBearing} = this._getTableMetrics(this._font.hmtx);\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n    if (this._font.vmtx) {\n      var {advance:advanceHeight, bearing:topBearing} = this._getTableMetrics(this._font.vmtx);\n\n    } else {\n      let os2;\n      if (typeof cbox === 'undefined' || cbox === null) { ({ cbox } = this); }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n\n      } else {\n        let { hhea } = this._font;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = { advanceWidth, advanceHeight, leftBearing, topBearing };\n  }\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  @cache\n  get cbox() {\n    return this._getCBox();\n  }\n\n  /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return this._getBBox();\n  }\n\n  /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */\n  @cache\n  get path() {\n    // Cache the path so we only decode it once\n    // Decoding is actually performed by subclasses\n    return this._getPath();\n  }\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  getScaledPath(size) {\n    let scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  @cache\n  get advanceWidth() {\n    return this._getMetrics().advanceWidth;\n  }\n\n  /**\n   * The glyph's advance height.\n   * @type {number}\n   */\n  @cache\n  get advanceHeight() {\n    return this._getMetrics().advanceHeight;\n  }\n\n  get ligatureCaretPositions() {}\n\n  _getName() {\n    let { post } = this._font;\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        let id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  @cache\n  get name() {\n    return this._getName();\n  }\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  render(ctx, size) {\n    ctx.save();\n\n    let scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    let fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import BBox from './BBox';\n\nconst SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\nexport default class Path {\n  constructor() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n  toFunction() {\n    return ctx => {\n      this.commands.forEach(c => {\n        return ctx[c.command].apply(ctx, c.args)\n      })\n    };\n  }\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  toSVG() {\n    let cmds = this.commands.map(c => {\n      let args = c.args.map(arg => Math.round(arg * 100) / 100);\n      return `${SVG_COMMANDS[c.command]}${args.join(' ')}`;\n    });\n\n    return cmds.join('');\n  }\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  get cbox() {\n    if (!this._cbox) {\n      let cbox = new BBox;\n      for (let command of this.commands) {\n        for (let i = 0; i < command.args.length; i += 2) {\n          cbox.addPoint(command.args[i], command.args[i + 1]);\n        }\n      }\n\n      this._cbox = Object.freeze(cbox);\n    }\n\n    return this._cbox;\n  }\n\n  /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */\n  get bbox() {\n    if (this._bbox) {\n      return this._bbox;\n    }\n\n    let bbox = new BBox;\n    let cx = 0, cy = 0;\n\n    let f = t => (\n      Math.pow(1 - t, 3) * p0[i]\n        + 3 * Math.pow(1 - t, 2) * t * p1[i]\n        + 3 * (1 - t) * Math.pow(t, 2) * p2[i]\n        + Math.pow(t, 3) * p3[i]\n    );\n\n    for (let c of this.commands) {\n      switch (c.command) {\n        case 'moveTo':\n        case 'lineTo':\n          let [x, y] = c.args;\n          bbox.addPoint(x, y);\n          cx = x;\n          cy = y;\n          break;\n\n        case 'quadraticCurveTo':\n        case 'bezierCurveTo':\n          if (c.command === 'quadraticCurveTo') {\n            // http://fontforge.org/bezier.html\n            var [qp1x, qp1y, p3x, p3y] = c.args;\n            var cp1x = cx + 2 / 3 * (qp1x - cx);    // CP1 = QP0 + 2/3 * (QP1-QP0)\n            var cp1y = cy + 2 / 3 * (qp1y - cy);\n            var cp2x = p3x + 2 / 3 * (qp1x - p3x);  // CP2 = QP2 + 2/3 * (QP1-QP2)\n            var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n          } else {\n            var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n          }\n\n          // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n          bbox.addPoint(p3x, p3y);\n\n          var p0 = [cx, cy];\n          var p1 = [cp1x, cp1y];\n          var p2 = [cp2x, cp2y];\n          var p3 = [p3x, p3y];\n\n          for (var i = 0; i <= 1; i++) {\n            let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            c = 3 * p1[i] - 3 * p0[i];\n\n            if (a === 0) {\n              if (b === 0) {\n                continue;\n              }\n\n              let t = -c / b;\n              if (0 < t && t < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t));\n                }\n              }\n\n              continue;\n            }\n\n            let b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0) {\n              continue;\n            }\n\n            let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t1), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t1));\n              }\n            }\n\n            let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t2), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t2));\n              }\n            }\n          }\n\n          cx = p3x;\n          cy = p3y;\n          break;\n      }\n    }\n\n    return this._bbox = Object.freeze(bbox);\n  }\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  mapPoints(fn) {\n    let path = new Path;\n\n    for (let c of this.commands) {\n      let args = [];\n      for (let i = 0; i < c.args.length; i += 2) {\n        let [x, y] = fn(c.args[i], c.args[i + 1]);\n        args.push(x, y);\n      }\n\n      path[c.command](...args);\n    }\n\n    return path;\n  }\n\n  /**\n   * Transforms the path by the given matrix.\n   */\n  transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints((x, y) => {\n      const tx = m0 * x + m2 * y + m4;\n      const ty = m1 * x + m3 * y + m5;\n      return [tx, ty];\n    });\n  }\n\n  /**\n   * Translates the path by the given offset.\n   */\n  translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  rotate(angle) {\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n\n  /**\n   * Scales the path.\n   */\n  scale(scaleX, scaleY = scaleX) {\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  }\n}\n\nfor (let command of ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']) {\n  Path.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command,\n      args\n    });\n\n    return this;\n  };\n}\n","export default [\n  '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n  'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n  'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n  'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n  'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n  'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n  'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n  'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n  'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n  'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n  'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n  'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n  'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n  'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n  'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n  'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n  'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n  'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n  'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n  'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n  'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n  'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n  'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n  'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'\n];\n","import Glyph from './Glyph';\nimport Path from './Path';\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\nexport default class CFFGlyph extends Glyph {\n  type = 'CFF';\n\n  _getName() {\n    if (this._font.CFF2) {\n      return super._getName();\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  }\n\n  bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  }\n\n  _getPath() {\n    let cff = this._font.CFF2 || this._font['CFF '];\n    let { stream } = cff;\n    let str = cff.topDict.CharStrings[this.id];\n    let end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    let path = new Path;\n    let stack = [];\n    let trans = [];\n\n    let width = null;\n    let nStems = 0;\n    let x = 0, y = 0;\n    let usedGsubrs;\n    let usedSubrs;\n    let open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    let gsubrs = cff.globalSubrIndex || [];\n    let gsubrsBias = this.bias(gsubrs);\n\n    let privateDict = cff.privateDictForGlyph(this.id) || {};\n    let subrs = privateDict.Subrs || [];\n    let subrsBias = this.bias(subrs);\n\n    let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    let vsindex = privateDict.vsindex;\n    let variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    let parse = function () {\n      while (stream.pos < end) {\n        let op = stream.readUInt8();\n        if (op < 32) {\n          let index, subr, phase;\n          switch (op) {\n            case 1:  // hstem\n            case 3:  // vstem\n            case 18: // hstemhm\n            case 23: // vstemhm\n              parseStems();\n              break;\n\n            case 4: // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5: // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7: // vlineto\n              phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8: // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10: // callsubr\n              index = stack.pop() + subrsBias;\n              subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11: // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n\n            case 14: // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n\n            case 15: { // vsindex\n              if (cff.version < 2) {\n                throw new Error('vsindex operator not supported in CFF v1');\n              }\n\n              vsindex = stack.pop();\n              break;\n            }\n\n            case 16: { // blend\n              if (cff.version < 2) {\n                throw new Error('blend operator not supported in CFF v1');\n              }\n\n              if (!variationProcessor) {\n                throw new Error('blend operator in non-variation font');\n              }\n\n              let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n              let numBlends = stack.pop();\n              let numOperands = numBlends * blendVector.length;\n              let delta = stack.length - numOperands;\n              let base = delta - numBlends;\n\n              for (let i = 0; i < numBlends; i++) {\n                let sum = stack[base + i];\n                for (let j = 0; j < blendVector.length; j++) {\n                  sum += blendVector[j] * stack[delta++];\n                }\n\n                stack[base + i] = sum;\n              }\n\n              while (numOperands--) {\n                stack.pop();\n              }\n\n              break;\n            }\n\n            case 19: // hintmask\n            case 20: // cntrmask\n              parseStems();\n              stream.pos += (nStems + 7) >> 3;\n              break;\n\n            case 21: // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22: // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24: // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25: // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26: // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27: // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28: // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29: // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31: // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3: // and\n                  let a = stack.pop();\n                  let b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4: // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5: // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9: // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10: // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11: // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12: // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14: // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15: // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18: // drop\n                  stack.pop();\n                  break;\n\n                case 20: // put\n                  let val = stack.pop();\n                  let idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21: // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22: // ifelse\n                  let s1 = stack.pop();\n                  let s2 = stack.pop();\n                  let v1 = stack.pop();\n                  let v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23: // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24: // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26: // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27: // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28: // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29: // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30: // roll\n                  let n = stack.pop();\n                  let j = stack.pop();\n\n                  if (j >= 0) {\n                    while (j > 0) {\n                      var t = stack[n - 1];\n                      for (let i = n - 2; i >= 0; i--) {\n                        stack[i + 1] = stack[i];\n                      }\n\n                      stack[0] = t;\n                      j--;\n                    }\n                  } else {\n                    while (j < 0) {\n                      var t = stack[0];\n                      for (let i = 0; i <= n; i++) {\n                        stack[i] = stack[i + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      j++;\n                    }\n                  }\n                  break;\n\n                case 34: // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  let c3x = c2x + stack.shift();\n                  let c3y = c2y;\n                  let c4x = c3x + stack.shift();\n                  let c4y = c3y;\n                  let c5x = c4x + stack.shift();\n                  let c5y = c4y;\n                  let c6x = c5x + stack.shift();\n                  let c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35: // flex\n                  let pts = [];\n\n                  for (let i = 0; i <= 5; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36: // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37: // flex1\n                  let startx = x;\n                  let starty = y;\n\n                  pts = [];\n                  for (let i = 0; i <= 4; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) { // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(`Unknown op: 12 ${op}`);\n              }\n              break;\n\n            default:\n              throw new Error(`Unknown op: ${op}`);\n          }\n\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import TTFGlyph from './TTFGlyph';\nimport * as r from 'restructure';\n\nlet SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(t => t.parent.buflen - t._currentOffset)\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\nexport default class SBIXGlyph extends TTFGlyph {\n  type = 'SBIX';\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  getImageForSize(size) {\n    for (let i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) { break; }\n    }\n\n    let offsets = table.imageOffsets;\n    let start = offsets[this.id];\n    let end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {buflen: end - start});\n  }\n\n  render(ctx, size) {\n    let img = this.getImageForSize(size);\n    if (img != null) {\n      let scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale});\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      super.render(ctx, size);\n    }\n  }\n}\n","import Glyph from './Glyph';\nimport BBox from './BBox';\n\nclass COLRLayer {\n  constructor(glyph, color) {\n    this.glyph = glyph;\n    this.color = color;\n  }\n}\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\nexport default class COLRGlyph extends Glyph {\n  type = 'COLR';\n\n  _getBBox() {\n    let bbox = new BBox;\n    for (let i = 0; i < this.layers.length; i++) {\n      let layer = this.layers[i];\n      let b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  get layers() {\n    let cpal = this._font.CPAL;\n    let colr = this._font.COLR;\n    let low = 0;\n    let high = colr.baseGlyphRecord.length - 1;\n\n    while (low <= high) {\n      let mid = (low + high) >> 1;\n      var rec = colr.baseGlyphRecord[mid];\n\n      if (this.id < rec.gid) {\n        high = mid - 1;\n      } else if (this.id > rec.gid) {\n        low = mid + 1;\n      } else {\n        var baseLayer = rec;\n        break;\n      }\n    }\n\n    // if base glyph not found in COLR table,\n    // default to normal glyph from glyf or CFF\n    if (baseLayer == null) {\n      var g = this._font._getBaseGlyph(this.id);\n      var color = {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 255\n      };\n\n      return [new COLRLayer(g, color)];\n    }\n\n    // otherwise, return an array of all the layers\n    let layers = [];\n    for (let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n      var rec = colr.layerRecords[i];\n      var color = cpal.colorRecords[rec.paletteIndex];\n      var g = this._font._getBaseGlyph(rec.gid);\n      layers.push(new COLRLayer(g, color));\n    }\n\n    return layers;\n  }\n\n  render(ctx, size) {\n    for (let {glyph, color} of this.layers) {\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  }\n}\n","const TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst TUPLE_COUNT_MASK           = 0x0fff;\nconst EMBEDDED_TUPLE_COORD       = 0x8000;\nconst INTERMEDIATE_TUPLE         = 0x4000;\nconst PRIVATE_POINT_NUMBERS      = 0x2000;\nconst TUPLE_INDEX_MASK           = 0x0fff;\nconst POINTS_ARE_WORDS           = 0x80;\nconst POINT_RUN_COUNT_MASK       = 0x7f;\nconst DELTAS_ARE_ZERO            = 0x80;\nconst DELTAS_ARE_WORDS           = 0x40;\nconst DELTA_RUN_COUNT_MASK       = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\nexport default class GlyphVariationProcessor {\n  constructor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map;\n  }\n\n  normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    let normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      let axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        let segment = this.font.avar.segment[i];\n        for (let j = 0; j < segment.correspondence.length; j++) {\n          let pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            let prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) /\n              (pair.fromCoord - prev.fromCoord + Number.EPSILON) +\n              prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  }\n\n  transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) { return; }\n\n    let { gvar } = this.font;\n    if (gid >= gvar.glyphCount) { return; }\n\n    let offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) { return; }\n\n    // Read the gvar data for this glyph\n    let { stream } = this.font;\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    let tupleCount = stream.readUInt16BE();\n    let offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    let origPoints = glyphPoints.map(pt => pt.copy());\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (let i = 0; i < tupleCount; i++) {\n      let tupleDataSize = stream.readUInt16BE();\n      let tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      let xDeltas = this.decodeDeltas(nPoints);\n      let yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) { // all points\n        for (let i = 0; i < glyphPoints.length; i++) {\n          var point = glyphPoints[i];\n          point.x += Math.round(xDeltas[i] * factor);\n          point.y += Math.round(yDeltas[i] * factor);\n        }\n      } else {\n        let outPoints = origPoints.map(pt => pt.copy());\n        let hasDelta = glyphPoints.map(() => false);\n\n        for (let i = 0; i < points.length; i++) {\n          let idx = points[i];\n          if (idx < glyphPoints.length) {\n            let point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            point.x += Math.round(xDeltas[i] * factor);\n            point.y += Math.round(yDeltas[i] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (let i = 0; i < glyphPoints.length; i++) {\n          let deltaX = outPoints[i].x - origPoints[i].x;\n          let deltaY = outPoints[i].y - origPoints[i].y;\n\n          glyphPoints[i].x += deltaX;\n          glyphPoints[i].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  }\n\n  decodePoints() {\n    let stream = this.font.stream;\n    let count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    let points = new Uint16Array(count);\n    let i = 0;\n    let point = 0;\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      let fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (let j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  }\n\n  decodeDeltas(count) {\n    let stream = this.font.stream;\n    let i = 0;\n    let deltas = new Int16Array(count);\n\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n\n      } else {\n        let fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (let j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  }\n\n  tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    let normalized = this.normalizedCoords;\n    let { gvar } = this.font;\n    let factor = 1;\n\n    for (let i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if ((normalized[i] < Math.min(0, tupleCoords[i])) ||\n            (normalized[i] > Math.max(0, tupleCoords[i]))) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if ((normalized[i] < startCoords[i]) ||\n            (normalized[i] > endCoords[i])) {\n          return 0;\n\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  }\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    let point = 0;\n    while (point < points.length) {\n      let firstPoint = point;\n\n      // find the end point of the contour\n      let endPoint = point;\n      let pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      let firstDelta = point;\n      let curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  }\n\n  deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    let iterable = ['x', 'y'];\n    for (let i = 0; i < iterable.length; i++) {\n      let k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      let in1 = inPoints[ref1][k];\n      let in2 = inPoints[ref2][k];\n      let out1 = outPoints[ref1][k];\n      let out2 = outPoints[ref2][k];\n\n      // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n      if (in1 !== in2 || out1 === out2) {\n        let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (let p = p1; p <= p2; p++) {\n          let out = inPoints[p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[p][k] = out;\n        }\n      }\n    }\n  }\n\n  deltaShift(p1, p2, ref, inPoints, outPoints) {\n    let deltaX = outPoints[ref].x - inPoints[ref].x;\n    let deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (let p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  }\n\n  getAdvanceAdjustment(gid, table) {\n    let outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      let idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      let entryFormat = table.advanceWidthMapping.entryFormat;\n      ({outerIndex, innerIndex} = table.advanceWidthMapping.mapData[idx]);\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  }\n\n  // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    let deltaSet = varData.deltaSets[innerIndex];\n    let blendVector = this.getBlendVector(itemStore, outerIndex);\n    let netAdjustment = 0;\n\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  }\n\n  getBlendVector(itemStore, outerIndex) {\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    let normalizedCoords = this.normalizedCoords;\n    let blendVector = [];\n\n    // outer loop steps through master designs to be blended\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      let scalar = 1;\n      let regionIndex = varData.regionIndexes[master];\n      let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      // inner loop steps through axes in this region\n      for (let j = 0; j < axes.length; j++) {\n        let axis = axes[j];\n        let axisScalar;\n\n        // compute the scalar contribution of this axis\n        // ignore invalid ranges\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n\n        // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n\n        // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n\n        // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) /\n              (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) /\n              (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        // take product of all the axis scalars\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  }\n}\n","import cloneDeep from 'clone';\nimport Subset from './Subset';\nimport Directory from '../tables/directory';\nimport Tables from '../tables';\nimport TTFGlyphEncoder from '../glyph/TTFGlyphEncoder';\n\nexport default class TTFSubset extends Subset {\n  constructor(font) {\n    super(font);\n    this.glyphEncoder = new TTFGlyphEncoder;\n  }\n\n  _addGlyph(gid) {\n    let glyph = this.font.getGlyph(gid);\n    let glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    let curOffset = this.font.loca.offsets[gid];\n    let nextOffset = this.font.loca.offsets[gid + 1];\n\n    let stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    let buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Uint8Array(buffer);\n      let view = new DataView(buffer.buffer);\n      for (let component of glyf.components) {\n        gid = this.includeGlyph(component.glyphID);\n        view.setUint16(component.pos, gid);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  }\n\n  encode() {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    let i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    let maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n\n    let head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    let hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    return Directory.toBuffer({\n      tables: {\n        head,\n        hhea,\n        loca: this.loca,\n        maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  }\n}\n","import * as r from 'restructure';\n\nconst resolved = Promise.resolve();\n\nexport default class Subset {\n  constructor(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  }\n}\n","import * as r from 'restructure';\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\nclass Point {\n  static size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  }\n  \n  static encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  }\n}\n\nlet Glyf = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\nexport default class TTFGlyphEncoder {\n  encodeSimple(path, instructions = []) {\n    let endPtsOfContours = [];\n    let xPoints = [];\n    let yPoints = [];\n    let flags = [];\n    let same = 0;\n    let lastX = 0, lastY = 0, lastFlag = 0;\n    let pointCount = 0;\n    \n    for (let i = 0; i < path.commands.length; i++) {\n      let c = path.commands[i];\n      \n      for (let j = 0; j < c.args.length; j += 2) {\n        let x = c.args[j];\n        let y = c.args[j + 1];\n        let flag = 0;\n        \n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          let next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            let midX = (lastX + next.args[0]) / 2;\n            let midY = (lastY + next.args[1]) / 2;\n            \n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n        \n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n        \n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n        \n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n      \n          flags.push(flag);\n          lastFlag = flag;\n        }\n        \n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n  \n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n    \n    let bbox = path.bbox;\n    let glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    \n    let size = Glyf.size(glyf);\n    let tail = 4 - (size % 4);\n    \n    let stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n    \n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n    \n    return stream.buffer;\n  }\n  \n  _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    let diff = value - last;\n    \n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n      \n      points.push(diff);\n    }\n    \n    return flag;\n  }\n}\n","import Subset from './Subset';\nimport CFFTop from '../cff/CFFTop';\nimport CFFPrivateDict from '../cff/CFFPrivateDict';\nimport standardStrings from '../cff/CFFStandardStrings';\n\nexport default class CFFSubset extends Subset {\n  constructor(font) {\n    super(font);\n\n    this.cff = this.font['CFF '];\n    if (!this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n  }\n\n  subsetCharstrings() {\n    this.charstrings = [];\n    let gsubrs = {};\n\n    for (let gid of this.glyphs) {\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  }\n\n  subsetSubrs(subrs, used) {\n    let res = [];\n    for (let i = 0; i < subrs.length; i++) {\n      let subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Uint8Array([11])); // return\n      }\n    }\n\n    return res;\n  }\n\n  subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    let used_fds = {};\n    let used_subrs = [];\n    let fd_select = {};\n    for (let gid of this.glyphs) {\n      let fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n        fd_select[fd] = topDict.FDArray.length - 1;\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(fd_select[fd]);\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[fd_select[fd]][subr] = true;\n      }\n    }\n\n    for (let i = 0; i < topDict.FDArray.length; i++) {\n      let dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  }\n\n  createCIDFontdict(topDict) {\n    let used_subrs = {};\n    for (let gid of this.glyphs) {\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    let privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  }\n\n  addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  }\n\n  encode() {\n    this.subsetCharstrings();\n\n    let charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    let topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (let key of ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']) {\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    let top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    return CFFTop.toBuffer(top);\n  }\n}\n","import TTFFont from './TTFFont';\nimport WOFFDirectory from './tables/WOFFDirectory';\nimport tables from './tables';\nimport inflate from 'tiny-inflate';\nimport * as r from 'restructure';\nimport { asciiDecoder } from './utils';\n\nexport default class WOFFFont extends TTFFont {\n  type = 'WOFF';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'wOFF';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        let outBuffer = new Uint8Array(table.length);\n        let buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  }\n}\n","import * as r from 'restructure';\nimport tables from './';\n\nlet WOFFDirectoryEntry = new r.Struct({\n  tag:          new r.String(4),\n  offset:       new r.Pointer(r.uint32, 'void', {type: 'global'}),\n  compLength:   r.uint32,\n  length:       r.uint32,\n  origChecksum: r.uint32\n});\n\nlet WOFFDirectory = new r.Struct({\n  tag:            new r.String(4), // should be 'wOFF'\n  flavor:         r.uint32,\n  length:         r.uint32,\n  numTables:      r.uint16,\n  reserved:       new r.Reserved(r.uint16),\n  totalSfntSize:  r.uint32,\n  majorVersion:   r.uint16,\n  minorVersion:   r.uint16,\n  metaOffset:     r.uint32,\n  metaLength:     r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset:     r.uint32,\n  privLength:     r.uint32,\n  tables:         new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nexport default WOFFDirectory;\n","import * as r from 'restructure';\nimport brotli from 'brotli/decompress.js';\nimport TTFFont from './TTFFont';\nimport TTFGlyph, { Point } from './glyph/TTFGlyph';\nimport WOFF2Glyph from './glyph/WOFF2Glyph';\nimport WOFF2Directory from './tables/WOFF2Directory';\nimport { asciiDecoder } from './utils';\n\n/**\n * Subclass of TTFFont that represents a TTF/OTF font compressed by WOFF2\n * See spec here: http://www.w3.org/TR/WOFF2/\n */\nexport default class WOFF2Font extends TTFFont {\n  type = 'WOFF2';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'wOF2';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFF2Directory.decode(this.stream);\n    this._dataPos = this.stream.pos;\n  }\n\n  _decompress() {\n    // decompress data and setup table offsets if we haven't already\n    if (!this._decompressed) {\n      this.stream.pos = this._dataPos;\n      let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n\n      let decompressedSize = 0;\n      for (let tag in this.directory.tables) {\n        let entry = this.directory.tables[tag];\n        entry.offset = decompressedSize;\n        decompressedSize += (entry.transformLength != null) ? entry.transformLength : entry.length;\n      }\n\n      let decompressed = brotli(buffer, decompressedSize);\n      if (!decompressed) {\n        throw new Error('Error decoding compressed data in WOFF2');\n      }\n\n      this.stream = new r.DecodeStream(decompressed);\n      this._decompressed = true;\n    }\n  }\n\n  _decodeTable(table) {\n    this._decompress();\n    return super._decodeTable(table);\n  }\n\n  // Override this method to get a glyph and return our\n  // custom subclass if there is a glyf table.\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n        if (!this._transformedGlyphs) { this._transformGlyfTable(); }\n        return this._glyphs[glyph] = new WOFF2Glyph(glyph, characters, this);\n\n      } else {\n        return super._getBaseGlyph(glyph, characters);\n      }\n    }\n  }\n\n  _transformGlyfTable() {\n    this._decompress();\n    this.stream.pos = this.directory.tables.glyf.offset;\n    let table = GlyfTable.decode(this.stream);\n    let glyphs = [];\n\n    for (let index = 0; index < table.numGlyphs; index++) {\n      let glyph = {};\n      let nContours = table.nContours.readInt16BE();\n      glyph.numberOfContours = nContours;\n\n      if (nContours > 0) { // simple glyph\n        let nPoints = [];\n        let totalPoints = 0;\n\n        for (let i = 0; i < nContours; i++) {\n          let r = read255UInt16(table.nPoints);\n          totalPoints += r;\n          nPoints.push(totalPoints);\n        }\n\n        glyph.points = decodeTriplet(table.flags, table.glyphs, totalPoints);\n        for (let i = 0; i < nContours; i++) {\n          glyph.points[nPoints[i] - 1].endContour = true;\n        }\n\n        var instructionSize = read255UInt16(table.glyphs);\n\n      } else if (nContours < 0) { // composite glyph\n        let haveInstructions = TTFGlyph.prototype._decodeComposite.call({ _font: this }, glyph, table.composites);\n        if (haveInstructions) {\n          var instructionSize = read255UInt16(table.glyphs);\n        }\n      }\n\n      glyphs.push(glyph);\n    }\n\n    this._transformedGlyphs = glyphs;\n  }\n}\n\n// Special class that accepts a length and returns a sub-stream for that data\nclass Substream {\n  constructor(length) {\n    this.length = length;\n    this._buf = new r.Buffer(length);\n  }\n\n  decode(stream, parent) {\n    return new r.DecodeStream(this._buf.decode(stream, parent));\n  }\n}\n\n// This struct represents the entire glyf table\nlet GlyfTable = new r.Struct({\n  version: r.uint32,\n  numGlyphs: r.uint16,\n  indexFormat: r.uint16,\n  nContourStreamSize: r.uint32,\n  nPointsStreamSize: r.uint32,\n  flagStreamSize: r.uint32,\n  glyphStreamSize: r.uint32,\n  compositeStreamSize: r.uint32,\n  bboxStreamSize: r.uint32,\n  instructionStreamSize: r.uint32,\n  nContours: new Substream('nContourStreamSize'),\n  nPoints: new Substream('nPointsStreamSize'),\n  flags: new Substream('flagStreamSize'),\n  glyphs: new Substream('glyphStreamSize'),\n  composites: new Substream('compositeStreamSize'),\n  bboxes: new Substream('bboxStreamSize'),\n  instructions: new Substream('instructionStreamSize')\n});\n\nconst WORD_CODE = 253;\nconst ONE_MORE_BYTE_CODE2 = 254;\nconst ONE_MORE_BYTE_CODE1 = 255;\nconst LOWEST_U_CODE = 253;\n\nfunction read255UInt16(stream) {\n  let code = stream.readUInt8();\n\n  if (code === WORD_CODE) {\n    return stream.readUInt16BE();\n  }\n\n  if (code === ONE_MORE_BYTE_CODE1) {\n    return stream.readUInt8() + LOWEST_U_CODE;\n  }\n\n  if (code === ONE_MORE_BYTE_CODE2) {\n    return stream.readUInt8() + LOWEST_U_CODE * 2;\n  }\n\n  return code;\n}\n\nfunction withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\n\nfunction decodeTriplet(flags, glyphs, nPoints) {\n  let y;\n  let x = y = 0;\n  let res = [];\n\n  for (let i = 0; i < nPoints; i++) {\n    let dx = 0, dy = 0;\n    let flag = flags.readUInt8();\n    let onCurve = !(flag >> 7);\n    flag &= 0x7f;\n\n    if (flag < 10) {\n      dx = 0;\n      dy = withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n\n    } else if (flag < 20) {\n      dx = withSign(flag, (((flag - 10) & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = withSign(flag, 1 + ((b0 / 12) << 8) + glyphs.readUInt8());\n      dy = withSign(flag >> 1, 1 + (((b0 % 12) >> 2) << 8) + glyphs.readUInt8());\n\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      let b2 = glyphs.readUInt8();\n      dx = withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n\n    } else {\n      dx = withSign(flag, glyphs.readUInt16BE());\n      dy = withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n\n    x += dx;\n    y += dy;\n    res.push(new Point(onCurve, false, x, y));\n  }\n\n  return res;\n}\n","import TTFGlyph from './TTFGlyph';\n\n/**\n * Represents a TrueType glyph in the WOFF2 format, which compresses glyphs differently.\n */\nexport default class WOFF2Glyph extends TTFGlyph {\n  type = 'WOFF2';\n\n  _decode() {\n    // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n    return this._font._transformedGlyphs[this.id];\n  }\n\n  _getCBox() {\n    return this.path.bbox;\n  }\n}\n","import * as r from 'restructure';\n\nconst Base128 = {\n  decode(stream) {\n    let result = 0;\n    let iterable = [0, 1, 2, 3, 4];\n    for (let j = 0; j < iterable.length; j++) {\n      let i = iterable[j];\n      let code = stream.readUInt8();\n\n      // If any of the top seven bits are set then we're about to overflow.\n      if (result & 0xe0000000) {\n        throw new Error('Overflow');\n      }\n\n      result = (result << 7) | (code & 0x7f);\n      if ((code & 0x80) === 0) {\n        return result;\n      }\n    }\n\n    throw new Error('Bad base 128 number');\n  }\n};\n\nlet knownTags = [\n  'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'OS/2', 'post', 'cvt ',\n  'fpgm', 'glyf', 'loca', 'prep', 'CFF ', 'VORG', 'EBDT', 'EBLC', 'gasp',\n  'hdmx', 'kern', 'LTSH', 'PCLT', 'VDMX', 'vhea', 'vmtx', 'BASE', 'GDEF',\n  'GPOS', 'GSUB', 'EBSC', 'JSTF', 'MATH', 'CBDT', 'CBLC', 'COLR', 'CPAL',\n  'SVG ', 'sbix', 'acnt', 'avar', 'bdat', 'bloc', 'bsln', 'cvar', 'fdsc',\n  'feat', 'fmtx', 'fvar', 'gvar', 'hsty', 'just', 'lcar', 'mort', 'morx',\n  'opbd', 'prop', 'trak', 'Zapf', 'Silf', 'Glat', 'Gloc', 'Feat', 'Sill'\n];\n\nlet WOFF2DirectoryEntry = new r.Struct({\n  flags: r.uint8,\n  customTag: new r.Optional(new r.String(4), t => (t.flags & 0x3f) === 0x3f),\n  tag: t => t.customTag || knownTags[t.flags & 0x3f],// || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },\n  length: Base128,\n  transformVersion: t => (t.flags >>> 6) & 0x03,\n  transformed: t => (t.tag === 'glyf' || t.tag === 'loca') ? t.transformVersion === 0 : t.transformVersion !== 0,\n  transformLength: new r.Optional(Base128, t => t.transformed)\n});\n\nlet WOFF2Directory = new r.Struct({\n  tag: new r.String(4), // should be 'wOF2'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  totalCompressedSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFF2DirectoryEntry, 'numTables')\n});\n\nWOFF2Directory.process = function() {\n  let tables = {};\n  for (let i = 0; i < this.tables.length; i++) {\n    let table = this.tables[i];\n    tables[table.tag] = table;\n  }\n\n  return this.tables = tables;\n};\n\nexport default WOFF2Directory;\n","import * as r from 'restructure';\nimport TTFFont from './TTFFont';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport { asciiDecoder } from './utils';\n\nlet TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts'),\n    dsigTag:    r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nexport default class TrueTypeCollection {\n  type = 'TTC';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'ttcf';\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  getFont(name) {\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      let font = new TTFFont(stream);\n      if (\n        font.postscriptName === name ||\n        (\n          font.postscriptName instanceof Uint8Array && \n          name instanceof Uint8Array && \n          font.postscriptName.every((v, i) => name[i] === v)\n        )\n      ) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n","import * as r from 'restructure';\nimport TTFFont from './TTFFont';\n\nlet DFontName = new r.String(r.uint8);\nlet DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\n\nlet Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\n\nlet Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, t => t.maxTypeIndex + 1), { type: 'parent' })\n});\n\nlet TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, t => t.length + 1)\n});\n\nlet DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\n\nlet DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nexport default class DFont {\n  type = 'DFont';\n\n  static probe(buffer) {\n    let stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (let type of header.map.typeList.types) {\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (let type of this.header.map.typeList.types) {\n      for (let ref of type.refList) {\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      let font = new TTFFont(stream);\n      if (\n        font.postscriptName === name ||\n        (\n          font.postscriptName instanceof Uint8Array && \n          name instanceof Uint8Array && \n          font.postscriptName.every((v, i) => name[i] === v)\n        )\n      ) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n"],"mappings":"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IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,CAAC,EAAE,IAAI;EAAS,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,SAAS;EAAG,EAAE,EAAE,SAAS;EAAG,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,SAAS;EAAG,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,EAAE,EAAE,IAAI;EAAQ,GAAG,EAAE,IAAI;EACzD,EAAE,EAAE,IAAI;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}