{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Base } from './Base.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\nvar ArrayT = /*#__PURE__*/function (_Base) {\n  _inherits(ArrayT, _Base);\n  var _super = _createSuper(ArrayT);\n  function ArrayT(type, length) {\n    var _this;\n    var lengthType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'count';\n    _classCallCheck(this, ArrayT);\n    _this = _super.call(this);\n    _this.type = type;\n    _this.length = length;\n    _this.lengthType = lengthType;\n    return _this;\n  }\n  _createClass(ArrayT, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var length;\n      var pos = stream.pos;\n      var res = [];\n      var ctx = parent;\n      if (this.length != null) {\n        length = utils.resolveLength(this.length, stream, parent);\n      }\n      if (this.length instanceof NumberT) {\n        // define hidden properties\n        Object.defineProperties(res, {\n          parent: {\n            value: parent\n          },\n          _startOffset: {\n            value: pos\n          },\n          _currentOffset: {\n            value: 0,\n            writable: true\n          },\n          _length: {\n            value: length\n          }\n        });\n        ctx = res;\n      }\n      if (length == null || this.lengthType === 'bytes') {\n        var target = length != null ? stream.pos + length : (parent != null ? parent._length : undefined) ? parent._startOffset + parent._length : stream.length;\n        while (stream.pos < target) {\n          res.push(this.type.decode(stream, ctx));\n        }\n      } else {\n        for (var i = 0, end = length; i < end; i++) {\n          res.push(this.type.decode(stream, ctx));\n        }\n      }\n      return res;\n    }\n  }, {\n    key: \"size\",\n    value: function size(array, ctx) {\n      var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!array) {\n        return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\n      }\n      var size = 0;\n      if (this.length instanceof NumberT) {\n        size += this.length.size();\n        ctx = {\n          parent: ctx,\n          pointerSize: 0\n        };\n      }\n      var _iterator = _createForOfIteratorHelper(array),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          size += this.type.size(item, ctx);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (ctx && includePointers && this.length instanceof NumberT) {\n        size += ctx.pointerSize;\n      }\n      return size;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, array, parent) {\n      var ctx = parent;\n      if (this.length instanceof NumberT) {\n        ctx = {\n          pointers: [],\n          startOffset: stream.pos,\n          parent: parent\n        };\n        ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n        this.length.encode(stream, array.length);\n      }\n      var _iterator2 = _createForOfIteratorHelper(array),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          this.type.encode(stream, item, ctx);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (this.length instanceof NumberT) {\n        var i = 0;\n        while (i < ctx.pointers.length) {\n          var ptr = ctx.pointers[i++];\n          ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n      }\n    }\n  }]);\n  return ArrayT;\n}(Base);\nexport { ArrayT as Array };","map":{"version":3,"names":["Base","Number","NumberT","utils","ArrayT","_Base","_inherits","_super","_createSuper","type","length","_this","lengthType","arguments","undefined","_classCallCheck","call","_createClass","key","value","decode","stream","parent","pos","res","ctx","resolveLength","Object","defineProperties","_startOffset","_currentOffset","writable","_length","target","push","i","end","size","array","includePointers","pointerSize","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","err","e","f","encode","pointers","startOffset","pointerOffset","_iterator2","_step2","ptr","val","Array"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/restructure/src/Array.js"],"sourcesContent":["import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass ArrayT extends Base {\n  constructor(type, length, lengthType = 'count') {\n    super();\n    this.type = type;\n    this.length = length;\n    this.lengthType = lengthType;\n  }\n\n  decode(stream, parent) {\n    let length;\n    const { pos } = stream;\n\n    const res = [];\n    let ctx = parent;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    }\n\n    if (this.length instanceof NumberT) {\n      // define hidden properties\n      Object.defineProperties(res, {\n        parent:         { value: parent },\n        _startOffset:   { value: pos },\n        _currentOffset: { value: 0, writable: true },\n        _length:        { value: length }\n      });\n\n      ctx = res;\n    }\n\n    if ((length == null) || (this.lengthType === 'bytes')) {\n      const target = (length != null) ?\n        stream.pos + length\n      : (parent != null ? parent._length : undefined) ?\n        parent._startOffset + parent._length\n      :\n        stream.length;\n\n      while (stream.pos < target) {\n        res.push(this.type.decode(stream, ctx));\n      }\n\n    } else {\n      for (let i = 0, end = length; i < end; i++) {\n        res.push(this.type.decode(stream, ctx));\n      }\n    }\n\n    return res;\n  }\n\n  size(array, ctx, includePointers = true) {\n    if (!array) {\n      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\n    }\n\n    let size = 0;\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n      ctx = {parent: ctx, pointerSize: 0};\n    }\n\n    for (let item of array) {\n      size += this.type.size(item, ctx);\n    }\n\n    if (ctx && includePointers && this.length instanceof NumberT) {\n      size += ctx.pointerSize;\n    }\n    \n    return size;\n  }\n\n  encode(stream, array, parent) {\n    let ctx = parent;\n    if (this.length instanceof NumberT) {\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent\n      };\n\n      ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n      this.length.encode(stream, array.length);\n    }\n\n    for (let item of array) {\n      this.type.encode(stream, item, ctx);\n    }\n\n    if (this.length instanceof NumberT) {\n      let i = 0;\n      while (i < ctx.pointers.length) {\n        const ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    }\n  }\n}\n\nexport {ArrayT as Array};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}