{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/utilsComponents/Select/functions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const removeUpper = (arrayIndex = [], lengthData = 0) => {\n  let data = [];\n  for (let i = 0; i < lengthData; i++) {\n    if (arrayIndex[i] < lengthData) data.push(arrayIndex[i]);\n  }\n  return data;\n};\nexport const getValueByIndex = (optionsType = [], indexSelected = []) => {\n  return optionsType.filter((o, index) => indexSelected.includes(index));\n};\n\n// use only for { value , label } Array\nexport const getMaxLenghtText = optionsType => {\n  let textArray = optionsType.filter((option, i, array) => {\n    return option.label.length === Math.max(...array.map(option_in => option_in.label.length));\n  });\n  if (textArray.length > 0) return textArray[0].label;else return \"\";\n};\nexport const swapToDefaultValue = (optionsType = [], defaultValue = undefined) => {\n  if (defaultValue === undefined && optionsType.length > 0) return optionsType[0];\n  let indexSelected = optionsType.findIndex(option => JSON.stringify(option) === JSON.stringify(defaultValue));\n  return optionsType[indexSelected];\n};\nexport const CaretDownIcon = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"10\",\n    height: \"6.807\",\n    viewBox: \"0 0 12 6.807\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      id: \"Icon_awesome-caret-down\",\n      \"data-name\": \"Icon awesome-caret-down\",\n      d: \"M1.6,13.5H11.987a.806.806,0,0,1,.569,1.376L7.365,20.071a.809.809,0,0,1-1.142,0L1.033,14.876A.806.806,0,0,1,1.6,13.5Z\",\n      transform: \"translate(-0.794 -13.5)\",\n      fill: \"#707070\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = CaretDownIcon;\nvar _c;\n$RefreshReg$(_c, \"CaretDownIcon\");","map":{"version":3,"names":["removeUpper","arrayIndex","lengthData","data","i","push","getValueByIndex","optionsType","indexSelected","filter","o","index","includes","getMaxLenghtText","textArray","option","array","label","length","Math","max","map","option_in","swapToDefaultValue","defaultValue","undefined","findIndex","JSON","stringify","CaretDownIcon","_jsxDEV","xmlns","width","height","viewBox","children","id","d","transform","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/utilsComponents/Select/functions.js"],"sourcesContent":["export const removeUpper = (arrayIndex = [], lengthData = 0) => {\n  let data = [];\n  for (let i = 0; i < lengthData; i++) {\n    if (arrayIndex[i] < lengthData) data.push(arrayIndex[i]);\n  }\n  return data;\n};\n\nexport const getValueByIndex = (optionsType = [], indexSelected = []) => {\n  return optionsType.filter((o, index) => indexSelected.includes(index));\n};\n\n// use only for { value , label } Array\nexport const getMaxLenghtText = (optionsType) => {\n  let textArray = optionsType.filter((option, i, array) => {\n    return option.label.length === Math.max(...array.map((option_in) => option_in.label.length));\n  });\n  if (textArray.length > 0) return textArray[0].label;\n  else return \"\";\n};\n\nexport const swapToDefaultValue = (optionsType = [], defaultValue = undefined) => {\n  if (defaultValue === undefined && optionsType.length > 0) return optionsType[0];\n  let indexSelected = optionsType.findIndex((option) => JSON.stringify(option) === JSON.stringify(defaultValue));\n  return optionsType[indexSelected];\n};\n\nexport const CaretDownIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"6.807\" viewBox=\"0 0 12 6.807\">\n      <path\n        id=\"Icon_awesome-caret-down\"\n        data-name=\"Icon awesome-caret-down\"\n        d=\"M1.6,13.5H11.987a.806.806,0,0,1,.569,1.376L7.365,20.071a.809.809,0,0,1-1.142,0L1.033,14.876A.806.806,0,0,1,1.6,13.5Z\"\n        transform=\"translate(-0.794 -13.5)\"\n        fill=\"#707070\"\n      />\n    </svg>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,WAAW,GAAGA,CAACC,UAAU,GAAG,EAAE,EAAEC,UAAU,GAAG,CAAC,KAAK;EAC9D,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;IACnC,IAAIH,UAAU,CAACG,CAAC,CAAC,GAAGF,UAAU,EAAEC,IAAI,CAACE,IAAI,CAACJ,UAAU,CAACG,CAAC,CAAC,CAAC;EAC1D;EACA,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGA,CAACC,WAAW,GAAG,EAAE,EAAEC,aAAa,GAAG,EAAE,KAAK;EACvE,OAAOD,WAAW,CAACE,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKH,aAAa,CAACI,QAAQ,CAACD,KAAK,CAAC,CAAC;AACxE,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAIN,WAAW,IAAK;EAC/C,IAAIO,SAAS,GAAGP,WAAW,CAACE,MAAM,CAAC,CAACM,MAAM,EAAEX,CAAC,EAAEY,KAAK,KAAK;IACvD,OAAOD,MAAM,CAACE,KAAK,CAACC,MAAM,KAAKC,IAAI,CAACC,GAAG,CAAC,GAAGJ,KAAK,CAACK,GAAG,CAAEC,SAAS,IAAKA,SAAS,CAACL,KAAK,CAACC,MAAM,CAAC,CAAC;EAC9F,CAAC,CAAC;EACF,IAAIJ,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE,OAAOJ,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,KAC/C,OAAO,EAAE;AAChB,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAGA,CAAChB,WAAW,GAAG,EAAE,EAAEiB,YAAY,GAAGC,SAAS,KAAK;EAChF,IAAID,YAAY,KAAKC,SAAS,IAAIlB,WAAW,CAACW,MAAM,GAAG,CAAC,EAAE,OAAOX,WAAW,CAAC,CAAC,CAAC;EAC/E,IAAIC,aAAa,GAAGD,WAAW,CAACmB,SAAS,CAAEX,MAAM,IAAKY,IAAI,CAACC,SAAS,CAACb,MAAM,CAAC,KAAKY,IAAI,CAACC,SAAS,CAACJ,YAAY,CAAC,CAAC;EAC9G,OAAOjB,WAAW,CAACC,aAAa,CAAC;AACnC,CAAC;AAED,OAAO,MAAMqB,aAAa,GAAGA,CAAA,KAAM;EACjC,oBACEC,OAAA;IAAKC,KAAK,EAAC,4BAA4B;IAACC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,OAAO;IAACC,OAAO,EAAC,cAAc;IAAAC,QAAA,eACtFL,OAAA;MACEM,EAAE,EAAC,yBAAyB;MAC5B,aAAU,yBAAyB;MACnCC,CAAC,EAAC,sHAAsH;MACxHC,SAAS,EAAC,yBAAyB;MACnCC,IAAI,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAZWf,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}