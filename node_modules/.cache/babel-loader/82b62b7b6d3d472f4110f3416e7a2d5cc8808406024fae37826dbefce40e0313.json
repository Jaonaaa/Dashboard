{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Expo/Add_/AddExpo.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AddForm from \"../../Add/AddForm/AddForm\";\nimport useForm from \"../../../hooks/useForm\";\nimport Input from \"../../../utilsComponents/Input/Input\";\nimport Select from \"../../../utilsComponents/Select/Select\";\nimport { alaivoGet, alaivoPost } from \"../../../utils/Alaivo\";\nimport { resizeFile } from \"../../../utils/Files\";\nimport { useMyNotifs } from \"../../../utilsComponents/Notif/useNotifs\";\nimport \"./style.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExpo = () => {\n  _s();\n  const {\n    formData,\n    handleInputForm\n  } = useForm();\n  const {\n    addNotifs,\n    notifs\n  } = useMyNotifs();\n  const {\n    subject,\n    categories,\n    types\n  } = useGetData();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.photo === undefined) addNotifs(\"error\", \"Please add a photo\");\n    if (formData.photo.length === 0) addNotifs(\"error\", \"Please add a photo\");\n    if (formData.date === undefined) {\n      addNotifs(\"error\", \"Please add a date\");\n      return null;\n    }\n    let data = {\n      ...formData\n    };\n    data.photo = await resizeFile(formData.photo[0]);\n    console.log(formData);\n    let res = await alaivoPost(\"apollo/art/expo\", JSON.stringify(data), null, true);\n    console.log(res);\n    addNotifs(res.status.status, res.status.details, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(AddForm, {\n    title: \"Add Exposition\",\n    children: [notifs.map(notif => notif), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add_expo\",\n      action: \"/\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          display: \"flex\",\n          alignItems: \"space-between\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"nom\",\n          onChange: handleInputForm,\n          title: \"Name\",\n          defaultValue: formData.nom,\n          fullWidth: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"date\",\n          onChange: handleInputForm,\n          title: \"Date\",\n          defaultValue: formData.date,\n          fullWidth: true,\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"sujetExpo\",\n        fullWidth: true,\n        onChange: handleInputForm,\n        title: \"Subject exposition\",\n        optionsType: subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"type\",\n        fullWidth: true,\n        onChange: handleInputForm,\n        title: \"Type\",\n        optionsType: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"categorie\",\n        fullWidth: true,\n        onChange: handleInputForm,\n        title: \"Category\",\n        optionsType: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"photo\",\n        type: \"file\",\n        defaultValue: formData.photo && formData.photo.length > 0 ? formData.photo[0] : undefined,\n        onChange: handleInputForm,\n        title: \"Picture Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Validate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AddExpo, \"Ox+UNXLO/sGoQXJ04TOzqqr0Bbk=\", false, function () {\n  return [useForm, useMyNotifs, useGetData];\n});\n_c = AddExpo;\nconst useGetData = () => {\n  _s2();\n  const [subject, setSubject] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    getSubjects();\n    getTypes();\n    getCategories();\n  }, []);\n  const getSubjects = async () => {\n    let res = await alaivoGet(\"apollo/art/sujetExpo\", null, true);\n    console.log(res);\n    res = res.data.map(row => {\n      return {\n        value: row,\n        label: row.theme\n      };\n    });\n    setSubject(res);\n  };\n  const getTypes = async () => {\n    let res = await alaivoGet(\"apollo/art/types\", null, true);\n    console.log(res);\n    res = res.data.map(row => {\n      return {\n        value: row,\n        label: row.nom\n      };\n    });\n    setTypes(res);\n  };\n  const getCategories = async () => {\n    let res = await alaivoGet(\"apollo/art/categories\", null, true);\n    console.log(res);\n    res = res.data.map(row => {\n      return {\n        value: row,\n        label: row.nom\n      };\n    });\n    setCategories(res);\n  };\n  return {\n    subject,\n    types,\n    categories\n  };\n};\n_s2(useGetData, \"s2WvwvkKpY8DdcAnc6aVpNdkZEU=\");\nexport default AddExpo;\nvar _c;\n$RefreshReg$(_c, \"AddExpo\");","map":{"version":3,"names":["React","useEffect","useState","AddForm","useForm","Input","Select","alaivoGet","alaivoPost","resizeFile","useMyNotifs","jsxDEV","_jsxDEV","AddExpo","_s","formData","handleInputForm","addNotifs","notifs","subject","categories","types","useGetData","handleSubmit","e","preventDefault","photo","undefined","length","date","data","console","log","res","JSON","stringify","status","details","title","children","map","notif","className","action","method","onSubmit","style","display","alignItems","gap","name","onChange","defaultValue","nom","fullWidth","type","fileName","_jsxFileName","lineNumber","columnNumber","optionsType","_c","_s2","setSubject","setTypes","setCategories","getSubjects","getTypes","getCategories","row","value","label","theme","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Expo/Add_/AddExpo.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AddForm from \"../../Add/AddForm/AddForm\";\nimport useForm from \"../../../hooks/useForm\";\nimport Input from \"../../../utilsComponents/Input/Input\";\nimport Select from \"../../../utilsComponents/Select/Select\";\nimport { alaivoGet, alaivoPost } from \"../../../utils/Alaivo\";\nimport { resizeFile } from \"../../../utils/Files\";\nimport { useMyNotifs } from \"../../../utilsComponents/Notif/useNotifs\";\nimport \"./style.sass\";\n\nconst AddExpo = () => {\n  const { formData, handleInputForm } = useForm();\n  const { addNotifs, notifs } = useMyNotifs();\n\n  const { subject, categories, types } = useGetData();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (formData.photo === undefined) addNotifs(\"error\", \"Please add a photo\");\n    if (formData.photo.length === 0) addNotifs(\"error\", \"Please add a photo\");\n    if (formData.date === undefined) {\n      addNotifs(\"error\", \"Please add a date\");\n      return null;\n    }\n\n    let data = { ...formData };\n    data.photo = await resizeFile(formData.photo[0]);\n    console.log(formData);\n    let res = await alaivoPost(\"apollo/art/expo\", JSON.stringify(data), null, true);\n    console.log(res);\n    addNotifs(res.status.status, res.status.details, 2000);\n  };\n\n  return (\n    <AddForm title=\"Add Exposition\">\n      {notifs.map((notif) => notif)}\n      <form className=\"add_expo\" action=\"/\" method=\"post\" onSubmit={handleSubmit}>\n        <div className=\"row\" style={{ display: \"flex\", alignItems: \"space-between\", gap: \"1rem\" }}>\n          <Input name=\"nom\" onChange={handleInputForm} title=\"Name\" defaultValue={formData.nom} fullWidth type=\"text\" />\n          <Input name=\"date\" onChange={handleInputForm} title=\"Date\" defaultValue={formData.date} fullWidth type=\"date\" />\n        </div>\n\n        <Select name={\"sujetExpo\"} fullWidth onChange={handleInputForm} title={\"Subject exposition\"} optionsType={subject} />\n        <Select name={\"type\"} fullWidth onChange={handleInputForm} title={\"Type\"} optionsType={types} />\n        <Select name={\"categorie\"} fullWidth onChange={handleInputForm} title={\"Category\"} optionsType={categories} />\n\n        <Input name=\"photo\" type=\"file\" defaultValue={formData.photo && formData.photo.length > 0 ? formData.photo[0] : undefined} onChange={handleInputForm} title=\"Picture Event\" />\n        <button> Validate </button>\n      </form>\n    </AddForm>\n  );\n};\n\nconst useGetData = () => {\n  const [subject, setSubject] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    getSubjects();\n    getTypes();\n    getCategories();\n  }, []);\n\n  const getSubjects = async () => {\n    let res = await alaivoGet(\"apollo/art/sujetExpo\", null, true);\n    console.log(res);\n    res = res.data.map((row) => {\n      return {\n        value: row,\n        label: row.theme,\n      };\n    });\n    setSubject(res);\n  };\n\n  const getTypes = async () => {\n    let res = await alaivoGet(\"apollo/art/types\", null, true);\n    console.log(res);\n    res = res.data.map((row) => {\n      return {\n        value: row,\n        label: row.nom,\n      };\n    });\n    setTypes(res);\n  };\n\n  const getCategories = async () => {\n    let res = await alaivoGet(\"apollo/art/categories\", null, true);\n    console.log(res);\n    res = res.data.map((row) => {\n      return {\n        value: row,\n        label: row.nom,\n      };\n    });\n    setCategories(res);\n  };\n\n  return { subject, types, categories };\n};\n\nexport default AddExpo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}