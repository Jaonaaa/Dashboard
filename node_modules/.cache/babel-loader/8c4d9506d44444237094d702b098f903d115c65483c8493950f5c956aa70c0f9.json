{"ast":null,"code":"export const removeUpper = (arrayIndex = [], lengthData = 0) => {\n  let data = [];\n  for (let i = 0; i < lengthData; i++) {\n    if (arrayIndex[i] < lengthData) data.push(arrayIndex[i]);\n  }\n  return data;\n};\nexport const getValueByIndex = (optionsType = [], indexSelected = []) => {\n  return optionsType.filter((o, index) => indexSelected.includes(index));\n};\n\n// use only for { value , label } Array\nexport const getMaxLenghtText = optionsType => {\n  let textArray = optionsType.filter((option, i, array) => {\n    return option.label.length === Math.max(...array.map(option_in => option_in.label.length));\n  });\n  if (textArray.length > 0) return textArray[0].label;else return \"\";\n};\nexport const swapToDefaultValue = (optionsType = [], defaultValue = undefined) => {\n  if (defaultValue === undefined && optionsType.length > 0) return optionsType[0];\n  let indexSelected = optionsType.findIndex(option => JSON.stringify(option) === JSON.stringify(defaultValue));\n  return optionsType[indexSelected];\n};","map":{"version":3,"names":["removeUpper","arrayIndex","lengthData","data","i","push","getValueByIndex","optionsType","indexSelected","filter","o","index","includes","getMaxLenghtText","textArray","option","array","label","length","Math","max","map","option_in","swapToDefaultValue","defaultValue","undefined","findIndex","JSON","stringify"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/utilsComponents/Select/functions.js"],"sourcesContent":["export const removeUpper = (arrayIndex = [], lengthData = 0) => {\n  let data = [];\n  for (let i = 0; i < lengthData; i++) {\n    if (arrayIndex[i] < lengthData) data.push(arrayIndex[i]);\n  }\n  return data;\n};\n\nexport const getValueByIndex = (optionsType = [], indexSelected = []) => {\n  return optionsType.filter((o, index) => indexSelected.includes(index));\n};\n\n// use only for { value , label } Array\nexport const getMaxLenghtText = (optionsType) => {\n  let textArray = optionsType.filter((option, i, array) => {\n    return option.label.length === Math.max(...array.map((option_in) => option_in.label.length));\n  });\n  if (textArray.length > 0) return textArray[0].label;\n  else return \"\";\n};\n\nexport const swapToDefaultValue = (optionsType = [], defaultValue = undefined) => {\n  if (defaultValue === undefined && optionsType.length > 0) return optionsType[0];\n  let indexSelected = optionsType.findIndex((option) => JSON.stringify(option) === JSON.stringify(defaultValue));\n  return optionsType[indexSelected];\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGA,CAACC,UAAU,GAAG,EAAE,EAAEC,UAAU,GAAG,CAAC,KAAK;EAC9D,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;IACnC,IAAIH,UAAU,CAACG,CAAC,CAAC,GAAGF,UAAU,EAAEC,IAAI,CAACE,IAAI,CAACJ,UAAU,CAACG,CAAC,CAAC,CAAC;EAC1D;EACA,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGA,CAACC,WAAW,GAAG,EAAE,EAAEC,aAAa,GAAG,EAAE,KAAK;EACvE,OAAOD,WAAW,CAACE,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKH,aAAa,CAACI,QAAQ,CAACD,KAAK,CAAC,CAAC;AACxE,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAIN,WAAW,IAAK;EAC/C,IAAIO,SAAS,GAAGP,WAAW,CAACE,MAAM,CAAC,CAACM,MAAM,EAAEX,CAAC,EAAEY,KAAK,KAAK;IACvD,OAAOD,MAAM,CAACE,KAAK,CAACC,MAAM,KAAKC,IAAI,CAACC,GAAG,CAAC,GAAGJ,KAAK,CAACK,GAAG,CAAEC,SAAS,IAAKA,SAAS,CAACL,KAAK,CAACC,MAAM,CAAC,CAAC;EAC9F,CAAC,CAAC;EACF,IAAIJ,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE,OAAOJ,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,KAC/C,OAAO,EAAE;AAChB,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAGA,CAAChB,WAAW,GAAG,EAAE,EAAEiB,YAAY,GAAGC,SAAS,KAAK;EAChF,IAAID,YAAY,KAAKC,SAAS,IAAIlB,WAAW,CAACW,MAAM,GAAG,CAAC,EAAE,OAAOX,WAAW,CAAC,CAAC,CAAC;EAC/E,IAAIC,aAAa,GAAGD,WAAW,CAACmB,SAAS,CAAEX,MAAM,IAAKY,IAAI,CAACC,SAAS,CAACb,MAAM,CAAC,KAAKY,IAAI,CAACC,SAAS,CAACJ,YAAY,CAAC,CAAC;EAC9G,OAAOjB,WAAW,CAACC,aAAa,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}