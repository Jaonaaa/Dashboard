{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst usePosition = (ref, type, miniNav) => {\n  _s();\n  const [position, setPosition] = useState({\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    x: 0,\n    y: 0,\n    to_Right: 0,\n    top_Bottom: 0,\n    to_center_y: 0,\n    to_center_x: 0\n  });\n  const [hovered, setHovered] = useState(false);\n  useEffect(() => {\n    getPosition();\n  }, [miniNav]);\n  const getPosition = () => {\n    if (type !== \"link_list\") return;\n    let {\n      left,\n      top,\n      right,\n      bottom,\n      x,\n      y,\n      width,\n      height\n    } = ref.current.getBoundingClientRect();\n    setPosition({\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      x: x,\n      y: y,\n      to_Right: left + width,\n      top_Bottom: top + height,\n      to_center_y: top + height / 2,\n      to_center_x: left + width / 2\n    });\n  };\n  const handleHover = () => {\n    if (type !== \"link_list\") return;\n    getPosition();\n    setHovered(!hovered);\n  };\n  return {\n    position,\n    hovered,\n    handleHover\n  };\n};\n_s(usePosition, \"oZaxriP0paObCRYj27VTx1LGnJ0=\");\nexport default usePosition;","map":{"version":3,"names":["useEffect","useState","usePosition","ref","type","miniNav","_s","position","setPosition","left","top","right","bottom","x","y","to_Right","top_Bottom","to_center_y","to_center_x","hovered","setHovered","getPosition","width","height","current","getBoundingClientRect","handleHover"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Navbar/RowNav/usePosition.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst usePosition = (ref, type, miniNav) => {\n  const [position, setPosition] = useState({\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    x: 0,\n    y: 0,\n    to_Right: 0,\n    top_Bottom: 0,\n    to_center_y: 0,\n    to_center_x: 0,\n  });\n  const [hovered, setHovered] = useState(false);\n\n  useEffect(() => {\n    getPosition();\n  }, [miniNav]);\n\n  const getPosition = () => {\n    if (type !== \"link_list\") return;\n    let { left, top, right, bottom, x, y, width, height } =\n      ref.current.getBoundingClientRect();\n    setPosition({\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      x: x,\n      y: y,\n      to_Right: left + width,\n      top_Bottom: top + height,\n      to_center_y: top + height / 2,\n      to_center_x: left + width / 2,\n    });\n  };\n  const handleHover = () => {\n    if (type !== \"link_list\") return;\n    getPosition();\n    setHovered(!hovered);\n  };\n\n  return { position, hovered, handleHover };\n};\n\nexport default usePosition;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACdqB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAAChB,OAAO,CAAC,CAAC;EAEb,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIjB,IAAI,KAAK,WAAW,EAAE;IAC1B,IAAI;MAAEK,IAAI;MAAEC,GAAG;MAAEC,KAAK;MAAEC,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEQ,KAAK;MAAEC;IAAO,CAAC,GACnDpB,GAAG,CAACqB,OAAO,CAACC,qBAAqB,CAAC,CAAC;IACrCjB,WAAW,CAAC;MACVC,IAAI,EAAEA,IAAI;MACVC,GAAG,EAAEA,GAAG;MACRC,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdC,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJC,QAAQ,EAAEN,IAAI,GAAGa,KAAK;MACtBN,UAAU,EAAEN,GAAG,GAAGa,MAAM;MACxBN,WAAW,EAAEP,GAAG,GAAGa,MAAM,GAAG,CAAC;MAC7BL,WAAW,EAAET,IAAI,GAAGa,KAAK,GAAG;IAC9B,CAAC,CAAC;EACJ,CAAC;EACD,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAItB,IAAI,KAAK,WAAW,EAAE;IAC1BiB,WAAW,CAAC,CAAC;IACbD,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,OAAO;IAAEZ,QAAQ;IAAEY,OAAO;IAAEO;EAAY,CAAC;AAC3C,CAAC;AAACpB,EAAA,CA3CIJ,WAAW;AA6CjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}