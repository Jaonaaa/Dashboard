{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Add/ArtisticGender/ArtisticGender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AddForm from \"../AddForm/AddForm\";\nimport Input from \"../../../utilsComponents/Input/Input\";\nimport useForm from \"../../../hooks/useForm\";\nimport { alaivoPost } from \"../../../utils/Alaivo\";\nimport { useMyNotifs } from \"../../../utilsComponents/Notif/useNotifs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtisticGender = () => {\n  _s();\n  const {\n    formData,\n    handleInputForm\n  } = useForm();\n  const {\n    addNotifs,\n    notifs\n  } = useMyNotifs();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    let res = await alaivoPost(\"apollo/art/genres\", JSON.stringify(formData), null, true);\n    console.log(res);\n    addNotifs(res.status.status, res.status.details, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(AddForm, {\n    title: \"Artistic Gender\",\n    children: [notifs.map(notif => notif), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"/\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"nom\",\n        onChange: handleInputForm,\n        title: \"Name\",\n        defaultValue: formData.nom,\n        fullWidth: true,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Validate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtisticGender, \"uzYdGWPu+Ur6k0hUE7WJujN0qFg=\", false, function () {\n  return [useForm, useMyNotifs];\n});\n_c = ArtisticGender;\nexport default ArtisticGender;\nvar _c;\n$RefreshReg$(_c, \"ArtisticGender\");","map":{"version":3,"names":["React","useEffect","useState","AddForm","Input","useForm","alaivoPost","useMyNotifs","jsxDEV","_jsxDEV","ArtisticGender","_s","formData","handleInputForm","addNotifs","notifs","handleSubmit","e","preventDefault","console","log","res","JSON","stringify","status","details","title","children","map","notif","action","method","onSubmit","name","onChange","defaultValue","nom","fullWidth","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Add/ArtisticGender/ArtisticGender.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AddForm from \"../AddForm/AddForm\";\nimport Input from \"../../../utilsComponents/Input/Input\";\nimport useForm from \"../../../hooks/useForm\";\nimport { alaivoPost } from \"../../../utils/Alaivo\";\nimport { useMyNotifs } from \"../../../utilsComponents/Notif/useNotifs\";\n\nconst ArtisticGender = () => {\n  const { formData, handleInputForm } = useForm();\n  const { addNotifs, notifs } = useMyNotifs();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formData);\n    let res = await alaivoPost(\"apollo/art/genres\", JSON.stringify(formData), null, true);\n    console.log(res);\n    addNotifs(res.status.status, res.status.details, 2000);\n  };\n\n  return (\n    <AddForm title=\"Artistic Gender\">\n      {notifs.map((notif) => notif)}\n      <form action=\"/\" method=\"post\" onSubmit={handleSubmit}>\n        <Input name=\"nom\" onChange={handleInputForm} title=\"Name\" defaultValue={formData.nom} fullWidth type=\"text\" />\n        <button> Validate </button>\n      </form>\n    </AddForm>\n  );\n};\n\nexport default ArtisticGender;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,sCAAsC;AACxD,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,WAAW,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,QAAQ;IAAEC;EAAgB,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC/C,MAAM;IAAES,SAAS;IAAEC;EAAO,CAAC,GAAGR,WAAW,CAAC,CAAC;EAE3C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;IACrB,IAAIS,GAAG,GAAG,MAAMf,UAAU,CAAC,mBAAmB,EAAEgB,IAAI,CAACC,SAAS,CAACX,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IACrFO,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChBP,SAAS,CAACO,GAAG,CAACG,MAAM,CAACA,MAAM,EAAEH,GAAG,CAACG,MAAM,CAACC,OAAO,EAAE,IAAI,CAAC;EACxD,CAAC;EAED,oBACEhB,OAAA,CAACN,OAAO;IAACuB,KAAK,EAAC,iBAAiB;IAAAC,QAAA,GAC7BZ,MAAM,CAACa,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC,eAC7BpB,OAAA;MAAMqB,MAAM,EAAC,GAAG;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBACpDlB,OAAA,CAACL,KAAK;QAAC6B,IAAI,EAAC,KAAK;QAACC,QAAQ,EAAErB,eAAgB;QAACa,KAAK,EAAC,MAAM;QAACS,YAAY,EAAEvB,QAAQ,CAACwB,GAAI;QAACC,SAAS;QAACC,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9GjC,OAAA;QAAAkB,QAAA,EAAQ;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC/B,EAAA,CArBID,cAAc;EAAA,QACoBL,OAAO,EACfE,WAAW;AAAA;AAAAoC,EAAA,GAFrCjC,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}