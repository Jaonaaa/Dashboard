{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { alaivoDelete, alaivoPost } from \"../utils/Alaivo\";\nimport { useLocation } from \"react-router-dom\";\n\n// variable localstorage\nconst userStocked = \"user\";\nconst tokenStocked = \"token\";\nconst refreshTokenStocked = \"refresh_token\";\nconst userDetails = \"details_user_\";\nconst contentTypeHeaders = {\n  \"Content-Type\": \"application/json\"\n};\nconst authenticateURL = \"auth/authenticate\";\nconst registerURL = \"auth/register\";\nconst getRefreshTokenURL = \"auth/refresh_token\";\nconst checkTokenStatusURL = \"auth/checkTokenStatus\";\nconst getUserPresp = () => {\n  return localStorage.getItem(userStocked) === null ? undefined : JSON.parse(localStorage.getItem(userStocked));\n};\nconst useIdentity = addNotifs => {\n  _s();\n  const userPresp = getUserPresp();\n  const loc = useLocation();\n  const [user, setUser] = useState(userPresp);\n  const [token_refresh_status, setTokenRefresh_status] = useState(false);\n  const [token_status, setToken_status] = useState(false);\n  const initUser = () => {\n    setUser(getUserPresp());\n  };\n  useEffect(() => {\n    initUser();\n  }, [loc]);\n  const logout = (to = \"/\") => {\n    localStorage.removeItem(userStocked);\n    localStorage.removeItem(tokenStocked);\n    localStorage.removeItem(refreshTokenStocked);\n    localStorage.removeItem(userDetails);\n    setUser(undefined);\n    document.location = to;\n  };\n  const getNewTokenByRefreshToken = refreshToken => {\n    alaivoPost(getRefreshTokenURL, JSON.stringify({\n      refresh_token: refreshToken ? refreshToken : localStorage.getItem(refreshToken)\n    }), {\n      headers: {\n        ...contentTypeHeaders\n      }\n    }, true).then(res => {\n      if (res.data) {\n        setUpStorageConnect(res.data);\n      }\n      if (res.status) console.log(res.details);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const checkTokenStatus = () => {\n    alaivoPost(checkTokenStatusURL, JSON.stringify({\n      refresh_token: localStorage.getItem(refreshTokenStocked),\n      token: localStorage.getItem(tokenStocked)\n    }), {\n      headers: {\n        ...contentTypeHeaders\n      }\n    }, true).then(res => {\n      setTokenRefresh_status(res.refresh_token_valid);\n      setToken_status(res.token_valid);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const disableRefreshToken = () => {\n    alaivoDelete(getRefreshTokenURL, JSON.stringify({\n      refresh_token: localStorage.getItem(refreshTokenStocked)\n    }), {\n      headers: {\n        ...contentTypeHeaders\n      }\n    }, true).then(res => {\n      localStorage.removeItem(refreshTokenStocked);\n      console.log(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const signIn = (formData, to, timer = 0) => {\n    alaivoPost(authenticateURL, JSON.stringify(formData), {\n      headers: {\n        ...contentTypeHeaders\n      }\n    }, true).then(response => {\n      console.log(response);\n      setUpStorageConnect(response);\n      if (to) document.location = to;\n    }).catch(() => {\n      addNotifs(\"error\", \"Email or password not correct.\");\n    });\n  };\n  const setUpStorageConnect = data => {\n    localStorage.setItem(refreshTokenStocked, data.refresh_token);\n    localStorage.setItem(tokenStocked, data.token);\n    localStorage.setItem(userStocked, JSON.stringify(data.user));\n    localStorage.setItem(userDetails, JSON.stringify(data.details_user_));\n  };\n  const signUp = (formData, to) => {\n    alaivoPost(registerURL, JSON.stringify(formData), {\n      headers: {\n        ...contentTypeHeaders\n      }\n    }, true).then(response => {\n      console.log(response);\n      if (to) document.location = to;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return {\n    user,\n    signIn,\n    setUser,\n    token_refresh_status,\n    token_status,\n    logout,\n    getNewTokenByRefreshToken,\n    signUp,\n    checkTokenStatus,\n    disableRefreshToken,\n    setUpStorageConnect\n  };\n};\n_s(useIdentity, \"9CDm1ALb12+TJ0NQ/vKfBe+5GxM=\", false, function () {\n  return [useLocation];\n});\nexport const getHeaderAuthJWT = () => ({\n  headers: {\n    Authorization: \"Bearer \" + tokenStocked,\n    ...contentTypeHeaders\n  }\n});\nexport const getHeaderAuth = () => ({\n  headers: {\n    ...contentTypeHeaders\n  }\n});\nexport default useIdentity;","map":{"version":3,"names":["useEffect","useState","alaivoDelete","alaivoPost","useLocation","userStocked","tokenStocked","refreshTokenStocked","userDetails","contentTypeHeaders","authenticateURL","registerURL","getRefreshTokenURL","checkTokenStatusURL","getUserPresp","localStorage","getItem","undefined","JSON","parse","useIdentity","addNotifs","_s","userPresp","loc","user","setUser","token_refresh_status","setTokenRefresh_status","token_status","setToken_status","initUser","logout","to","removeItem","document","location","getNewTokenByRefreshToken","refreshToken","stringify","refresh_token","headers","then","res","data","setUpStorageConnect","status","console","log","details","catch","err","error","checkTokenStatus","token","refresh_token_valid","token_valid","disableRefreshToken","signIn","formData","timer","response","setItem","details_user_","signUp","getHeaderAuthJWT","Authorization","getHeaderAuth"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/hooks/useIdentity.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { alaivoDelete, alaivoPost } from \"../utils/Alaivo\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// variable localstorage\r\nconst userStocked = \"user\";\r\nconst tokenStocked = \"token\";\r\nconst refreshTokenStocked = \"refresh_token\";\r\nconst userDetails = \"details_user_\";\r\nconst contentTypeHeaders = { \"Content-Type\": \"application/json\" };\r\nconst authenticateURL = \"auth/authenticate\";\r\nconst registerURL = \"auth/register\";\r\nconst getRefreshTokenURL = \"auth/refresh_token\";\r\nconst checkTokenStatusURL = \"auth/checkTokenStatus\";\r\n\r\nconst getUserPresp = () => {\r\n  return localStorage.getItem(userStocked) === null ? undefined : JSON.parse(localStorage.getItem(userStocked));\r\n};\r\n\r\nconst useIdentity = (addNotifs) => {\r\n  const userPresp = getUserPresp();\r\n  const loc = useLocation();\r\n  const [user, setUser] = useState(userPresp);\r\n  const [token_refresh_status, setTokenRefresh_status] = useState(false);\r\n  const [token_status, setToken_status] = useState(false);\r\n\r\n  const initUser = () => {\r\n    setUser(getUserPresp());\r\n  };\r\n\r\n  useEffect(() => {\r\n    initUser();\r\n  }, [loc]);\r\n\r\n  const logout = (to = \"/\") => {\r\n    localStorage.removeItem(userStocked);\r\n    localStorage.removeItem(tokenStocked);\r\n    localStorage.removeItem(refreshTokenStocked);\r\n    localStorage.removeItem(userDetails);\r\n    setUser(undefined);\r\n    document.location = to;\r\n  };\r\n\r\n  const getNewTokenByRefreshToken = (refreshToken) => {\r\n    alaivoPost(\r\n      getRefreshTokenURL,\r\n      JSON.stringify({\r\n        refresh_token: refreshToken ? refreshToken : localStorage.getItem(refreshToken),\r\n      }),\r\n      {\r\n        headers: {\r\n          ...contentTypeHeaders,\r\n        },\r\n      },\r\n      true\r\n    )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setUpStorageConnect(res.data);\r\n        }\r\n        if (res.status) console.log(res.details);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const checkTokenStatus = () => {\r\n    alaivoPost(\r\n      checkTokenStatusURL,\r\n      JSON.stringify({\r\n        refresh_token: localStorage.getItem(refreshTokenStocked),\r\n        token: localStorage.getItem(tokenStocked),\r\n      }),\r\n      {\r\n        headers: {\r\n          ...contentTypeHeaders,\r\n        },\r\n      },\r\n      true\r\n    )\r\n      .then((res) => {\r\n        setTokenRefresh_status(res.refresh_token_valid);\r\n        setToken_status(res.token_valid);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const disableRefreshToken = () => {\r\n    alaivoDelete(\r\n      getRefreshTokenURL,\r\n      JSON.stringify({\r\n        refresh_token: localStorage.getItem(refreshTokenStocked),\r\n      }),\r\n      {\r\n        headers: {\r\n          ...contentTypeHeaders,\r\n        },\r\n      },\r\n      true\r\n    )\r\n      .then((res) => {\r\n        localStorage.removeItem(refreshTokenStocked);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const signIn = (formData, to, timer = 0) => {\r\n    alaivoPost(\r\n      authenticateURL,\r\n      JSON.stringify(formData),\r\n      {\r\n        headers: {\r\n          ...contentTypeHeaders,\r\n        },\r\n      },\r\n      true\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        setUpStorageConnect(response);\r\n        if (to) document.location = to;\r\n      })\r\n      .catch(() => {\r\n        addNotifs(\"error\", \"Email or password not correct.\");\r\n      });\r\n  };\r\n\r\n  const setUpStorageConnect = (data) => {\r\n    localStorage.setItem(refreshTokenStocked, data.refresh_token);\r\n    localStorage.setItem(tokenStocked, data.token);\r\n    localStorage.setItem(userStocked, JSON.stringify(data.user));\r\n    localStorage.setItem(userDetails, JSON.stringify(data.details_user_));\r\n  };\r\n\r\n  const signUp = (formData, to) => {\r\n    alaivoPost(\r\n      registerURL,\r\n      JSON.stringify(formData),\r\n      {\r\n        headers: {\r\n          ...contentTypeHeaders,\r\n        },\r\n      },\r\n      true\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (to) document.location = to;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return {\r\n    user,\r\n    signIn,\r\n    setUser,\r\n    token_refresh_status,\r\n    token_status,\r\n    logout,\r\n    getNewTokenByRefreshToken,\r\n    signUp,\r\n    checkTokenStatus,\r\n    disableRefreshToken,\r\n    setUpStorageConnect,\r\n  };\r\n};\r\n\r\nexport const getHeaderAuthJWT = () => ({\r\n  headers: {\r\n    Authorization: \"Bearer \" + tokenStocked,\r\n    ...contentTypeHeaders,\r\n  },\r\n});\r\nexport const getHeaderAuth = () => ({\r\n  headers: {\r\n    ...contentTypeHeaders,\r\n  },\r\n});\r\n\r\nexport default useIdentity;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}