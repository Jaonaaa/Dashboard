{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Validation/Validation.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ContentContainer from \"../ContentContainer/ContentContainer\";\nimport Card from \"../Artwork/Card/Card\";\nimport { BsCheck2Square } from \"react-icons/bs\";\nimport { alaivoGet, alaivoPut } from \"../../utils/Alaivo\";\nimport \"./style.sass\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useMyNotifs } from \"../../utilsComponents/Notif/useNotifs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Validation = () => {\n  _s();\n  const {\n    expo,\n    loading,\n    getExpo,\n    setExpo\n  } = useGetData();\n  const {\n    addNotifs,\n    notifs\n  } = useMyNotifs();\n  const validate = async id => {\n    let res = await alaivoPut(\"apollo/art/oeuvres/validation\", JSON.stringify({\n      id: id\n    }), null, true);\n    addNotifs(\"ok\", \"Artwork validate\");\n    let neww = expo.filter(exp => exp.id !== id);\n    setExpo(neww);\n    console.log(res);\n  };\n  return /*#__PURE__*/_jsxDEV(ContentContainer, {\n    children: [notifs.map(notif => notif), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"validation_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title_validation\",\n          children: [\"Artworks \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" ( waiting for validation ) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list_cards\",\n          children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: loading ? [...Array(14).keys()].map((card, key) => /*#__PURE__*/_createElement(Card, {\n              ...card,\n              key: key,\n              icon: /*#__PURE__*/_jsxDEV(BsCheck2Square, {\n                className: \"go_to_icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 92\n              }, this),\n              loading: loading,\n              onClick: () => {},\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 60\n              }\n            })) : expo.map((card, key) => /*#__PURE__*/_createElement(Card, {\n              ...card,\n              key: card.id,\n              icon: /*#__PURE__*/_jsxDEV(BsCheck2Square, {\n                className: \"go_to_icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this),\n              loading: loading,\n              onClick: () => {\n                validate(card.id);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 21\n              }\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Validation, \"ExH+MugR/i3rEzstsgNMp94Nd+k=\", false, function () {\n  return [useGetData, useMyNotifs];\n});\n_c = Validation;\nconst useGetData = () => {\n  _s2();\n  const [expo, setExpo] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getExpo();\n  }, []);\n  const getExpo = async () => {\n    setLoading(true);\n    let res = await alaivoGet(\"apollo/art/oeuvres/nonValide\", null, true);\n    console.log(res);\n    res = res.data.map(row => ({\n      ...row,\n      date: (row.date ? row.date.replace(\"/-/g\", \"/\") : \"\") + \" \" + row.descriptionIA,\n      picture: row.photo[0],\n      title: row.auteur.nom + \" - \" + row.titre,\n      category: row.type.nom\n    }));\n    setLoading(false);\n    setExpo(res);\n  };\n  return {\n    expo,\n    loading,\n    getExpo,\n    setExpo\n  };\n};\n_s2(useGetData, \"H/02m3ypRiBpQRUtXu+1Hai3bH8=\");\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","useEffect","useState","ContentContainer","Card","BsCheck2Square","alaivoGet","alaivoPut","AnimatePresence","useMyNotifs","jsxDEV","_jsxDEV","createElement","_createElement","Validation","_s","expo","loading","getExpo","setExpo","useGetData","addNotifs","notifs","validate","id","res","JSON","stringify","neww","filter","exp","console","log","children","map","notif","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","keys","card","key","icon","onClick","__self","__source","_c","_s2","setLoading","data","row","date","replace","descriptionIA","picture","photo","title","auteur","nom","titre","category","type","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Validation/Validation.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentContainer from \"../ContentContainer/ContentContainer\";\nimport Card from \"../Artwork/Card/Card\";\nimport { BsCheck2Square } from \"react-icons/bs\";\nimport { alaivoGet, alaivoPut } from \"../../utils/Alaivo\";\nimport \"./style.sass\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useMyNotifs } from \"../../utilsComponents/Notif/useNotifs\";\n\nconst Validation = () => {\n  const { expo, loading, getExpo, setExpo } = useGetData();\n  const { addNotifs, notifs } = useMyNotifs();\n\n  const validate = async (id) => {\n    let res = await alaivoPut(\"apollo/art/oeuvres/validation\", JSON.stringify({ id: id }), null, true);\n    addNotifs(\"ok\", \"Artwork validate\");\n    let neww = expo.filter((exp) => exp.id !== id);\n    setExpo(neww);\n    console.log(res);\n  };\n\n  return (\n    <ContentContainer>\n      {notifs.map((notif) => notif)}\n      <div className=\"inner\">\n        <div className=\"validation_container\">\n          <div className=\"title_validation\">\n            Artworks <span> ( waiting for validation ) </span>{\" \"}\n          </div>\n          <div className=\"list_cards\">\n            <AnimatePresence>\n              {loading\n                ? [...Array(14).keys()].map((card, key) => <Card {...card} key={key} icon={<BsCheck2Square className=\"go_to_icon\" />} loading={loading} onClick={() => {}} />)\n                : expo.map((card, key) => (\n                    <Card\n                      {...card}\n                      key={card.id}\n                      icon={<BsCheck2Square className=\"go_to_icon\" />}\n                      loading={loading}\n                      onClick={() => {\n                        validate(card.id);\n                      }}\n                    />\n                  ))}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n    </ContentContainer>\n  );\n};\n\nconst useGetData = () => {\n  const [expo, setExpo] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getExpo();\n  }, []);\n\n  const getExpo = async () => {\n    setLoading(true);\n    let res = await alaivoGet(\"apollo/art/oeuvres/nonValide\", null, true);\n    console.log(res);\n    res = res.data.map((row) => ({\n      ...row,\n      date: (row.date ? row.date.replace(\"/-/g\", \"/\") : \"\") + \" \" + row.descriptionIA,\n      picture: row.photo[0],\n      title: row.auteur.nom + \" - \" + row.titre,\n      category: row.type.nom,\n    }));\n    setLoading(false);\n    setExpo(res);\n  };\n\n  return { expo, loading, getExpo, setExpo };\n};\n\nexport default Validation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}