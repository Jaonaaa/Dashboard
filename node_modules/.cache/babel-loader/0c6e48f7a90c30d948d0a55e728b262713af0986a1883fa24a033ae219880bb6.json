{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/utilsComponents/Input/Checkbox/Checkbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../Input.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkBooleanValue = value => {\n  if (value === \"true\" || value === true) return true;else if (value === \"false\" || value === false) return false;else return false;\n};\nconst Checkbox = ({\n  type = \"\",\n  defaultValue = \"\",\n  title = \"\",\n  name = \"\",\n  onChange = e => {},\n  disabled = false,\n  required = false,\n  fullWidth = false\n}) => {\n  _s();\n  const [checked, setChecked] = useState(!checkBooleanValue(defaultValue) ? checkBooleanValue(\"false\") : checkBooleanValue(defaultValue));\n  const handleValue = () => {\n    if (checked) setChecked(checkBooleanValue(false));else setChecked(true);\n    onChange({\n      target: {\n        value: checked ? checkBooleanValue(false) : true,\n        name: name\n      }\n    });\n  };\n  useEffect(() => {\n    setChecked(checkBooleanValue(defaultValue));\n    onChange({\n      target: {\n        value: checkBooleanValue(defaultValue),\n        name: name\n      }\n    });\n  }, [defaultValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `input_ checkbox ${fullWidth ? \"fullwidth\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `checkbox_container ${checked ? \"on\" : \"off\"}`,\n      onClick: handleValue,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `state ${checked ? \"on\" : \"off\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkbox, \"ndndC7ZlrS9Ba6HaHTfayWz54x8=\");\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","checkBooleanValue","value","Checkbox","type","defaultValue","title","name","onChange","e","disabled","required","fullWidth","_s","checked","setChecked","handleValue","target","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/utilsComponents/Input/Checkbox/Checkbox.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../Input.sass\";\n\nconst checkBooleanValue = (value) => {\n  if (value === \"true\" || value === true) return true;\n  else if (value === \"false\" || value === false) return false;\n  else return false;\n};\n\nconst Checkbox = ({\n  type = \"\",\n  defaultValue = \"\",\n  title = \"\",\n  name = \"\",\n  onChange = (e) => {},\n  disabled = false,\n  required = false,\n  fullWidth = false,\n}) => {\n  const [checked, setChecked] = useState(\n    !checkBooleanValue(defaultValue) ? checkBooleanValue(\"false\") : checkBooleanValue(defaultValue)\n  );\n\n  const handleValue = () => {\n    if (checked) setChecked(checkBooleanValue(false));\n    else setChecked(true);\n    onChange({ target: { value: checked ? checkBooleanValue(false) : true, name: name } });\n  };\n\n  useEffect(() => {\n    setChecked(checkBooleanValue(defaultValue));\n    onChange({ target: { value: checkBooleanValue(defaultValue), name: name } });\n  }, [defaultValue]);\n\n  return (\n    <div className={`input_ checkbox ${fullWidth ? \"fullwidth\" : \"\"}`}>\n      <div className={`checkbox_container ${checked ? \"on\" : \"off\"}`} onClick={handleValue}>\n        <div className={`state ${checked ? \"on\" : \"off\"}`}>{}</div>\n      </div>\n      <label htmlFor={name}>{title}</label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACnC,IAAIA,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC,KAC/C,IAAIA,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,KACvD,OAAO,KAAK;AACnB,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,IAAI,GAAG,EAAE;EACTC,YAAY,GAAG,EAAE;EACjBC,KAAK,GAAG,EAAE;EACVC,IAAI,GAAG,EAAE;EACTC,QAAQ,GAAIC,CAAC,IAAK,CAAC,CAAC;EACpBC,QAAQ,GAAG,KAAK;EAChBC,QAAQ,GAAG,KAAK;EAChBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CACpC,CAACG,iBAAiB,CAACI,YAAY,CAAC,GAAGJ,iBAAiB,CAAC,OAAO,CAAC,GAAGA,iBAAiB,CAACI,YAAY,CAChG,CAAC;EAED,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,OAAO,EAAEC,UAAU,CAACd,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,KAC7Cc,UAAU,CAAC,IAAI,CAAC;IACrBP,QAAQ,CAAC;MAAES,MAAM,EAAE;QAAEf,KAAK,EAAEY,OAAO,GAAGb,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI;QAAEM,IAAI,EAAEA;MAAK;IAAE,CAAC,CAAC;EACxF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdkB,UAAU,CAACd,iBAAiB,CAACI,YAAY,CAAC,CAAC;IAC3CG,QAAQ,CAAC;MAAES,MAAM,EAAE;QAAEf,KAAK,EAAED,iBAAiB,CAACI,YAAY,CAAC;QAAEE,IAAI,EAAEA;MAAK;IAAE,CAAC,CAAC;EAC9E,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAKkB,SAAS,EAAG,mBAAkBN,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;IAAAO,QAAA,gBAChEnB,OAAA;MAAKkB,SAAS,EAAG,sBAAqBJ,OAAO,GAAG,IAAI,GAAG,KAAM,EAAE;MAACM,OAAO,EAAEJ,WAAY;MAAAG,QAAA,eACnFnB,OAAA;QAAKkB,SAAS,EAAG,SAAQJ,OAAO,GAAG,IAAI,GAAG,KAAM;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNxB,OAAA;MAAOyB,OAAO,EAAElB,IAAK;MAAAY,QAAA,EAAEb;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACX,EAAA,CAjCIV,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}