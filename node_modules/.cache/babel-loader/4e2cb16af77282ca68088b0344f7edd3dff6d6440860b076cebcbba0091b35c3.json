{"ast":null,"code":"import { getHeaderAuth, getHeaderAuthJWT } from \"../hooks/useIdentity\";\nexport const URL = \"http://localhost:8089/\";\nconst rebuildURL = (url = \"\") => {\n  if (url.indexOf(\":new/\") !== -1) return url;else return URL + url;\n};\nexport const alaivoGet = async (url = \"\", options, noAuth = false) => {\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\n  return new Promise((resolve, reject) => {\n    fetch(rebuildURL(url), {\n      method: \"GET\",\n      ...auth,\n      ...options\n    }).then(response => response.json()).then(responseData => {\n      resolve(responseData);\n    }).catch(error => reject(error));\n  });\n};\nexport const alaivoDelete = async (url = \"\", data, options, noAuth = false) => {\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\n  return new Promise((resolve, reject) => {\n    fetch(rebuildURL(url), {\n      method: \"DELETE\",\n      body: data,\n      ...auth,\n      ...options\n    }).then(response => response.json()).then(responseData => {\n      resolve(responseData);\n    }).catch(error => reject(error));\n  });\n};\nexport const alaivoPut = (url = \"\", data, options, noAuth = false) => {\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\n  return new Promise((resolve, reject) => {\n    fetch(rebuildURL(url), {\n      method: \"PUT\",\n      body: data,\n      ...auth,\n      ...options\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      resolve(responseData);\n    }).catch(error => reject(error));\n  });\n};\nexport const alaivoPost = (url = \"\", data, options, noAuth = false) => {\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\n  return new Promise((resolve, reject) => {\n    fetch(rebuildURL(url), {\n      method: \"POST\",\n      body: data,\n      ...auth,\n      ...options\n    }).then(response => response.json()).then(responseData => {\n      resolve(responseData);\n    }).catch(error => reject(error));\n  });\n};","map":{"version":3,"names":["getHeaderAuth","getHeaderAuthJWT","URL","rebuildURL","url","indexOf","alaivoGet","options","noAuth","auth","Promise","resolve","reject","fetch","method","then","response","json","responseData","catch","error","alaivoDelete","data","body","alaivoPut","alaivoPost"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/utils/Alaivo.js"],"sourcesContent":["import { getHeaderAuth, getHeaderAuthJWT } from \"../hooks/useIdentity\";\r\n\r\nexport const URL = \"http://localhost:8089/\";\r\n\r\nconst rebuildURL = (url = \"\") => {\r\n  if (url.indexOf(\":new/\") !== -1) return url;\r\n  else return URL + url;\r\n};\r\n\r\nexport const alaivoGet = async (url = \"\", options, noAuth = false) => {\r\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(rebuildURL(url), {\r\n      method: \"GET\",\r\n      ...auth,\r\n      ...options,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        resolve(responseData);\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const alaivoDelete = async (url = \"\", data, options, noAuth = false) => {\r\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\r\n  return new Promise((resolve, reject) => {\r\n    fetch(rebuildURL(url), {\r\n      method: \"DELETE\",\r\n      body: data,\r\n      ...auth,\r\n      ...options,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        resolve(responseData);\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const alaivoPut = (url = \"\", data, options, noAuth = false) => {\r\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\r\n  return new Promise((resolve, reject) => {\r\n    fetch(rebuildURL(url), {\r\n      method: \"PUT\",\r\n      body: data,\r\n      ...auth,\r\n      ...options,\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseData) => {\r\n        resolve(responseData);\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const alaivoPost = (url = \"\", data, options, noAuth = false) => {\r\n  let auth = !noAuth ? getHeaderAuthJWT() : getHeaderAuth();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(rebuildURL(url), {\r\n      method: \"POST\",\r\n      body: data,\r\n      ...auth,\r\n      ...options,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        resolve(responseData);\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}