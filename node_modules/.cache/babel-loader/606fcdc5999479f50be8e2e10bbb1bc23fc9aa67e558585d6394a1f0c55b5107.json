{"ast":null,"code":"export const handleTextArea = e => {\n  let rows = e.target.value.split(\"\\n\");\n  let newText = \"\";\n  rows.forEach(row => newText += row + splitterTextArea);\n  // use this for the default split .replace(/\\\\n/g, \"\\n\")\n  return {\n    target: {\n      value: newText,\n      name: e.target.name\n    }\n  };\n};\nexport const isDateOn = type => {\n  if (type === \"date\" || type === \"month\" || type === \"datetime-local\" || type === \"time\") return true;else return false;\n};\nexport const formateDateValue = (value, type) => {\n  if (type === \"date\") return value.split(\"T\")[0];else if (type === \"datetime-local\") return value.replace(\":00.000+00:00\", \"\");else return value;\n};","map":{"version":3,"names":["handleTextArea","e","rows","target","value","split","newText","forEach","row","splitterTextArea","name","isDateOn","type","formateDateValue","replace"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/utilsComponents/Input/functions.js"],"sourcesContent":["export const handleTextArea = (e) => {\n  let rows = e.target.value.split(\"\\n\");\n  let newText = \"\";\n  rows.forEach((row) => (newText += row + splitterTextArea));\n  // use this for the default split .replace(/\\\\n/g, \"\\n\")\n  return { target: { value: newText, name: e.target.name } };\n};\n\nexport const isDateOn = (type) => {\n  if (type === \"date\" || type === \"month\" || type === \"datetime-local\" || type === \"time\") return true;\n  else return false;\n};\n\nexport const formateDateValue = (value, type) => {\n  if (type === \"date\") return value.split(\"T\")[0];\n  else if (type === \"datetime-local\") return value.replace(\":00.000+00:00\", \"\");\n  else return value;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,CAAC,IAAK;EACnC,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC;EACrC,IAAIC,OAAO,GAAG,EAAE;EAChBJ,IAAI,CAACK,OAAO,CAAEC,GAAG,IAAMF,OAAO,IAAIE,GAAG,GAAGC,gBAAiB,CAAC;EAC1D;EACA,OAAO;IAAEN,MAAM,EAAE;MAAEC,KAAK,EAAEE,OAAO;MAAEI,IAAI,EAAET,CAAC,CAACE,MAAM,CAACO;IAAK;EAAE,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,gBAAgB,IAAIA,IAAI,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,KAChG,OAAO,KAAK;AACnB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACT,KAAK,EAAEQ,IAAI,KAAK;EAC/C,IAAIA,IAAI,KAAK,MAAM,EAAE,OAAOR,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAC3C,IAAIO,IAAI,KAAK,gBAAgB,EAAE,OAAOR,KAAK,CAACU,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,KACzE,OAAOV,KAAK;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}