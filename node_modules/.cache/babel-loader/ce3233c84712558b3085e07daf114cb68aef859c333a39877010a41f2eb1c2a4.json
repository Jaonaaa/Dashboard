{"ast":null,"code":"var _jsxFileName = \"/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Ins/RowInput/RowInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./RowInput.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowInput = ({\n  name = \"\",\n  id = \"\",\n  value = \"\",\n  required = false,\n  title = \"\",\n  type = \"text\",\n  onChange = () => {},\n  fullWidth\n}) => {\n  _s();\n  const [focused, setFocused] = useState(false);\n  const [valueInput, setValue] = useState(value + \"\");\n  const handleFocusedState = () => {\n    setFocused(true);\n  };\n  const handleBlurState = () => {\n    if (valueInput.trim() !== \"\") {\n      setFocused(true);\n      return;\n    }\n    setFocused(false);\n  };\n  useEffect(() => {\n    handleBlurState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `row_input ${fullWidth ? \"fullWidth\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"_input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${focused ? \"input_focused\" : \"\"}`,\n        type: type,\n        required: required,\n        onFocus: handleFocusedState,\n        onBlur: handleBlurState,\n        id: id,\n        name: name,\n        defaultValue: value,\n        onChange: e => {\n          onChange(e);\n          setValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `placeholder ${focused ? \"up\" : \"\"}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(RowInput, \"QSw1YRzjkguuP1fRdstaQz8+bSY=\");\n_c = RowInput;\nexport default RowInput;\nvar _c;\n$RefreshReg$(_c, \"RowInput\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RowInput","name","id","value","required","title","type","onChange","fullWidth","_s","focused","setFocused","valueInput","setValue","handleFocusedState","handleBlurState","trim","className","children","onFocus","onBlur","defaultValue","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/src/components/Ins/RowInput/RowInput.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./RowInput.sass\";\r\n\r\nconst RowInput = ({\r\n  name = \"\",\r\n  id = \"\",\r\n  value = \"\",\r\n  required = false,\r\n  title = \"\",\r\n  type = \"text\",\r\n  onChange = () => {},\r\n  fullWidth,\r\n}) => {\r\n  const [focused, setFocused] = useState(false);\r\n  const [valueInput, setValue] = useState(value + \"\");\r\n  const handleFocusedState = () => {\r\n    setFocused(true);\r\n  };\r\n  const handleBlurState = () => {\r\n    if (valueInput.trim() !== \"\") {\r\n      setFocused(true);\r\n      return;\r\n    }\r\n    setFocused(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleBlurState();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`row_input ${fullWidth ? \"fullWidth\" : \"\"}`}>\r\n      <div className=\"_input\">\r\n        <input\r\n          className={`${focused ? \"input_focused\" : \"\"}`}\r\n          type={type}\r\n          required={required}\r\n          onFocus={handleFocusedState}\r\n          onBlur={handleBlurState}\r\n          id={id}\r\n          name={name}\r\n          defaultValue={value}\r\n          onChange={(e) => {\r\n            onChange(e);\r\n            setValue(e.target.value);\r\n          }}\r\n        />\r\n        <div className={`placeholder ${focused ? \"up\" : \"\"}`}>{title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RowInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,IAAI,GAAG,EAAE;EACTC,EAAE,GAAG,EAAE;EACPC,KAAK,GAAG,EAAE;EACVC,QAAQ,GAAG,KAAK;EAChBC,KAAK,GAAG,EAAE;EACVC,IAAI,GAAG,MAAM;EACbC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC;EACnBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,UAAU,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACM,KAAK,GAAG,EAAE,CAAC;EACnD,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIH,UAAU,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BL,UAAU,CAAC,IAAI,CAAC;MAChB;IACF;IACAA,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdmB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAKkB,SAAS,EAAG,aAAYT,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;IAAAU,QAAA,eAC1DnB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnB,OAAA;QACEkB,SAAS,EAAG,GAAEP,OAAO,GAAG,eAAe,GAAG,EAAG,EAAE;QAC/CJ,IAAI,EAAEA,IAAK;QACXF,QAAQ,EAAEA,QAAS;QACnBe,OAAO,EAAEL,kBAAmB;QAC5BM,MAAM,EAAEL,eAAgB;QACxBb,EAAE,EAAEA,EAAG;QACPD,IAAI,EAAEA,IAAK;QACXoB,YAAY,EAAElB,KAAM;QACpBI,QAAQ,EAAGe,CAAC,IAAK;UACff,QAAQ,CAACe,CAAC,CAAC;UACXT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAC;QAC1B;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF5B,OAAA;QAAKkB,SAAS,EAAG,eAAcP,OAAO,GAAG,IAAI,GAAG,EAAG,EAAE;QAAAQ,QAAA,EAAEb;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhDIT,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}