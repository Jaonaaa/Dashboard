{"ast":null,"code":"import _classCallCheck from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as r from \"restructure\";\nimport { readUInt16BE, readUInt16LE, readUInt32BE, readUInt32LE, uint8ArrayToHexString, uint8ArrayToString } from \"./utils.js\";\nvar tags = {\n  ifd: {\n    \"010e\": \"imageDescription\",\n    \"010f\": \"make\",\n    \"011a\": \"xResolution\",\n    \"011b\": \"yResolution\",\n    \"011c\": \"planarConfiguration\",\n    \"012d\": \"transferFunction\",\n    \"013b\": \"artist\",\n    \"013e\": \"whitePoint\",\n    \"013f\": \"primaryChromaticities\",\n    \"0100\": \"imageWidth\",\n    \"0101\": \"imageHeight\",\n    \"0102\": \"bitsPerSample\",\n    \"0103\": \"compression\",\n    \"0106\": \"photometricInterpretation\",\n    \"0110\": \"model\",\n    \"0111\": \"stripOffsets\",\n    \"0112\": \"orientation\",\n    \"0115\": \"samplesPerPixel\",\n    \"0116\": \"rowsPerStrip\",\n    \"0117\": \"stripByteCounts\",\n    \"0128\": \"resolutionUnit\",\n    \"0131\": \"software\",\n    \"0132\": \"dateTime\",\n    \"0201\": \"jpegInterchangeFormat\",\n    \"0202\": \"jpegInterchangeFormatLength\",\n    \"0211\": \"ycbCrCoefficients\",\n    \"0212\": \"ycbCrSubSampling\",\n    \"0213\": \"ycbCrPositioning\",\n    \"0214\": \"referenceBlackWhite\",\n    \"829a\": \"exposureTime\",\n    \"829d\": \"fNumber\",\n    \"920a\": \"focalLength\",\n    \"927c\": \"makerNote\",\n    8298: \"copyright\",\n    8769: \"exifIFDPointer\",\n    8822: \"exposureProgram\",\n    8824: \"spectralSensitivity\",\n    8825: \"gpsInfoIFDPointer\",\n    8827: \"photographicSensitivity\",\n    8828: \"oecf\",\n    8830: \"sensitivityType\",\n    8831: \"standardOutputSensitivity\",\n    8832: \"recommendedExposureIndex\",\n    8833: \"isoSpeed\",\n    8834: \"isoSpeedLatitudeyyy\",\n    8835: \"isoSpeedLatitudezzz\",\n    9000: \"exifVersion\",\n    9003: \"dateTimeOriginal\",\n    9004: \"dateTimeDigitized\",\n    9101: \"componentsConfiguration\",\n    9102: \"compressedBitsPerPixel\",\n    9201: \"shutterSpeedValue\",\n    9202: \"apertureValue\",\n    9203: \"brightnessValue\",\n    9204: \"exposureBiasValue\",\n    9205: \"maxApertureValue\",\n    9206: \"subjectDistance\",\n    9207: \"meteringMode\",\n    9208: \"lightSource\",\n    9209: \"flash\",\n    9214: \"subjectArea\",\n    9286: \"userComment\",\n    9290: \"subSecTime\",\n    9291: \"subSecTimeOriginal\",\n    9292: \"subSecTimeDigitized\",\n    a000: \"flashpixVersion\",\n    a001: \"colorSpace\",\n    a002: \"pixelXDimension\",\n    a003: \"pixelYDimension\",\n    a004: \"relatedSoundFile\",\n    a005: \"interoperabilityIFDPointer\",\n    a20b: \"flashEnergy\",\n    a20c: \"spatialFrequencyResponse\",\n    a20e: \"focalPlaneXResolution\",\n    a20f: \"focalPlaneYResolution\",\n    a40a: \"sharpness\",\n    a40b: \"deviceSettingDescription\",\n    a40c: \"subjectDistanceRange\",\n    a210: \"focalPlaneResolutionUnit\",\n    a214: \"subjectLocation\",\n    a215: \"exposureIndex\",\n    a217: \"sensingMethod\",\n    a300: \"fileSource\",\n    a301: \"sceneType\",\n    a302: \"cfaPattern\",\n    a401: \"customRendered\",\n    a402: \"exposureMode\",\n    a403: \"whiteBalance\",\n    a404: \"digitalZoomRatio\",\n    a405: \"focalLengthIn35mmFilm\",\n    a406: \"sceneCaptureType\",\n    a407: \"gainControl\",\n    a408: \"contrast\",\n    a409: \"saturation\",\n    a420: \"imageUniqueID\",\n    a430: \"cameraOwnerName\",\n    a431: \"bodySerialNumber\",\n    a432: \"lensSpecification\",\n    a433: \"lensMake\",\n    a434: \"lensModel\",\n    a435: \"lensSerialNumber\",\n    a500: \"gamma\"\n  },\n  gps: {\n    \"0000\": \"gpsVersionID\",\n    \"0001\": \"gpsLatitudeRef\",\n    \"0002\": \"gpsLatitude\",\n    \"0003\": \"gpsLongitudeRef\",\n    \"0004\": \"gpsLongitude\",\n    \"0005\": \"gpsAltitudeRef\",\n    \"0006\": \"gpsAltitude\",\n    \"0007\": \"gpsTimeStamp\",\n    \"0008\": \"gpsSatellites\",\n    \"0009\": \"gpsStatus\",\n    \"000a\": \"gpsMeasureMode\",\n    \"000b\": \"gpsDOP\",\n    \"000c\": \"gpsSpeedRef\",\n    \"000d\": \"gpsSpeed\",\n    \"000e\": \"gpsTrackRef\",\n    \"000f\": \"gpsTrack\",\n    \"0010\": \"gpsImgDirectionRef\",\n    \"0011\": \"gpsImgDirection\",\n    \"0012\": \"gpsMapDatum\",\n    \"0013\": \"gpsDestLatitudeRef\",\n    \"0014\": \"gpsDestLatitude\",\n    \"0015\": \"gpsDestLongitudeRef\",\n    \"0016\": \"gpsDestLongitude\",\n    \"0017\": \"gpsDestBearingRef\",\n    \"0018\": \"gpsDestBearing\",\n    \"0019\": \"gpsDestDistanceRef\",\n    \"001a\": \"gpsDestDistance\",\n    \"001b\": \"gpsProcessingMethod\",\n    \"001c\": \"gpsAreaInformation\",\n    \"001d\": \"gpsDateStamp\",\n    \"001e\": \"gpsDifferential\",\n    \"001f\": \"gpsHPositioningError\"\n  }\n};\nvar IDFEntries = /*#__PURE__*/function () {\n  function IDFEntries(bigEndian) {\n    _classCallCheck(this, IDFEntries);\n    this.bigEndian = bigEndian;\n    this.bytes = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8];\n  }\n  _createClass(IDFEntries, [{\n    key: \"_getTagValue\",\n    value: function _getTagValue(dataValue, dataFormat) {\n      var _this = this;\n      var uint16 = function uint16(pos) {\n        return _this.bigEndian ? readUInt16BE(dataValue, pos) : readUInt16LE(dataValue, pos);\n      };\n      var uint32 = function uint32(pos) {\n        return _this.bigEndian ? readUInt32BE(dataValue, pos) : readUInt32LE(dataValue, pos);\n      };\n      switch (dataFormat) {\n        case 1:\n          return dataValue.readUInt8(0);\n        case 2:\n          return dataValue.toString(\"ascii\").replace(/\\0+$/, \"\");\n        case 3:\n          return uint16(0);\n        case 4:\n          return uint32(0);\n        case 5:\n          var tagValue = [];\n          for (var i = 0; i < dataValue.length; i += 8) {\n            tagValue.push(uint32(i) / uint32(i + 4));\n          }\n          return tagValue;\n        case 7:\n          return null;\n        case 10:\n          {\n            return uint32(0) / uint32(4);\n          }\n        default:\n          return \"0x\" + dataValue.toString(\"hex\");\n      }\n    }\n  }, {\n    key: \"_decodeIDFEntries\",\n    value: function _decodeIDFEntries(buffer, tags, offset) {\n      var _this2 = this;\n      var pos = 2;\n      var entries = {};\n      var uint16 = function uint16(pos) {\n        return _this2.bigEndian ? readUInt16BE(buffer, pos) : readUInt16LE(buffer, pos);\n      };\n      var uint32 = function uint32(pos) {\n        return _this2.bigEndian ? readUInt32BE(buffer, pos) : readUInt32LE(buffer, pos);\n      };\n      var numberOfEntries = uint16(0);\n      for (var i = 0; i < numberOfEntries; i++) {\n        var tagAddress = buffer.slice(pos, pos + 2);\n        var dataFormat = uint16(pos + 2);\n        var componentsNumber = uint32(pos + 4);\n        var componentsBytes = this.bytes[dataFormat];\n        var dataLength = componentsNumber * componentsBytes;\n        var dataValue = buffer.slice(pos + 8, pos + 12);\n        if (dataLength > 4) {\n          var valueOffset = this.bigEndian ? readUInt32BE(dataValue, 0) : readUInt32LE(dataValue, 0);\n          var dataOffset = valueOffset - offset;\n          dataValue = buffer.slice(dataOffset, dataOffset + dataLength);\n        }\n        var tagValue = this._getTagValue(dataValue, dataFormat);\n        var tagNumber = this.bigEndian ? uint8ArrayToHexString(tagAddress) : uint8ArrayToHexString(tagAddress.reverse());\n        var tagName = tags[tagNumber];\n        entries[tagName] = tagValue;\n        pos += 12;\n      }\n      return entries;\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var buffer = stream.buffer.slice(stream.pos);\n      var offsetToFirstIFD = parent.offsetToFirstIFD;\n      if (offsetToFirstIFD > buffer.length) {\n        stream.pos += parent.parent.length - 16;\n        return {};\n      }\n      var entries = this._decodeIDFEntries(buffer, tags.ifd, offsetToFirstIFD);\n      var exifIFDPointer = entries.exifIFDPointer,\n        gpsInfoIFDPointer = entries.gpsInfoIFDPointer;\n      if (exifIFDPointer) {\n        var subuffer = buffer.slice(exifIFDPointer - offsetToFirstIFD);\n        entries.subExif = this._decodeIDFEntries(subuffer, tags.ifd, exifIFDPointer);\n      }\n      if (gpsInfoIFDPointer) {\n        var gps = gpsInfoIFDPointer;\n        var _subuffer = buffer.slice(exifIFDPointer ? gps - exifIFDPointer : gps - offsetToFirstIFD);\n        entries.gpsInfo = IFDHandler(_subuffer, tags.gps, gps);\n      }\n      stream.pos += parent.parent.length - 16;\n      return entries;\n    }\n  }]);\n  return IDFEntries;\n}();\nvar IFDData = function IFDData(bigEndian) {\n  var uint16 = bigEndian ? r.uint16be : r.uint16le;\n  var uint32 = bigEndian ? r.uint32be : r.uint32le;\n  return new r.Struct({\n    fortyTwo: uint16,\n    offsetToFirstIFD: uint32,\n    entries: new IDFEntries(bigEndian)\n  });\n};\nvar TIFFHeader = /*#__PURE__*/function () {\n  function TIFFHeader() {\n    _classCallCheck(this, TIFFHeader);\n  }\n  _createClass(TIFFHeader, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var byteOrder = uint8ArrayToString(stream.buffer.slice(stream.pos, stream.pos + 2));\n      var bigEndian = byteOrder === \"MM\";\n      stream.pos += 2;\n      var data = IFDData(bigEndian).decode(stream, parent);\n      return data.entries;\n    }\n  }]);\n  return TIFFHeader;\n}();\nvar EXIFMarker = {\n  name: function name() {\n    return \"EXIF\";\n  },\n  length: r.uint16be,\n  identifier: new r.String(6),\n  entries: new TIFFHeader()\n};\nexport default EXIFMarker;","map":{"version":3,"names":["r","readUInt16BE","readUInt16LE","readUInt32BE","readUInt32LE","uint8ArrayToHexString","uint8ArrayToString","tags","ifd","a000","a001","a002","a003","a004","a005","a20b","a20c","a20e","a20f","a40a","a40b","a40c","a210","a214","a215","a217","a300","a301","a302","a401","a402","a403","a404","a405","a406","a407","a408","a409","a420","a430","a431","a432","a433","a434","a435","a500","gps","IDFEntries","bigEndian","_classCallCheck","bytes","_createClass","key","value","_getTagValue","dataValue","dataFormat","_this","uint16","pos","uint32","readUInt8","toString","replace","tagValue","i","length","push","_decodeIDFEntries","buffer","offset","_this2","entries","numberOfEntries","tagAddress","slice","componentsNumber","componentsBytes","dataLength","valueOffset","dataOffset","tagNumber","reverse","tagName","decode","stream","parent","offsetToFirstIFD","exifIFDPointer","gpsInfoIFDPointer","subuffer","subExif","gpsInfo","IFDHandler","IFDData","uint16be","uint16le","uint32be","uint32le","Struct","fortyTwo","TIFFHeader","byteOrder","data","EXIFMarker","name","identifier","String"],"sources":["/home/jaona/myfiles/Jaona/Components/dashboard/node_modules/jay-peg/src/markers/exif.js"],"sourcesContent":["import * as r from \"restructure\";\nimport {\n  readUInt16BE,\n  readUInt16LE,\n  readUInt32BE,\n  readUInt32LE,\n  uint8ArrayToHexString,\n  uint8ArrayToString,\n} from \"./utils.js\";\n\nconst tags = {\n  ifd: {\n    \"010e\": \"imageDescription\",\n    \"010f\": \"make\",\n    \"011a\": \"xResolution\",\n    \"011b\": \"yResolution\",\n    \"011c\": \"planarConfiguration\",\n    \"012d\": \"transferFunction\",\n    \"013b\": \"artist\",\n    \"013e\": \"whitePoint\",\n    \"013f\": \"primaryChromaticities\",\n    \"0100\": \"imageWidth\",\n    \"0101\": \"imageHeight\",\n    \"0102\": \"bitsPerSample\",\n    \"0103\": \"compression\",\n    \"0106\": \"photometricInterpretation\",\n    \"0110\": \"model\",\n    \"0111\": \"stripOffsets\",\n    \"0112\": \"orientation\",\n    \"0115\": \"samplesPerPixel\",\n    \"0116\": \"rowsPerStrip\",\n    \"0117\": \"stripByteCounts\",\n    \"0128\": \"resolutionUnit\",\n    \"0131\": \"software\",\n    \"0132\": \"dateTime\",\n    \"0201\": \"jpegInterchangeFormat\",\n    \"0202\": \"jpegInterchangeFormatLength\",\n    \"0211\": \"ycbCrCoefficients\",\n    \"0212\": \"ycbCrSubSampling\",\n    \"0213\": \"ycbCrPositioning\",\n    \"0214\": \"referenceBlackWhite\",\n    \"829a\": \"exposureTime\",\n    \"829d\": \"fNumber\",\n    \"920a\": \"focalLength\",\n    \"927c\": \"makerNote\",\n    8298: \"copyright\",\n    8769: \"exifIFDPointer\",\n    8822: \"exposureProgram\",\n    8824: \"spectralSensitivity\",\n    8825: \"gpsInfoIFDPointer\",\n    8827: \"photographicSensitivity\",\n    8828: \"oecf\",\n    8830: \"sensitivityType\",\n    8831: \"standardOutputSensitivity\",\n    8832: \"recommendedExposureIndex\",\n    8833: \"isoSpeed\",\n    8834: \"isoSpeedLatitudeyyy\",\n    8835: \"isoSpeedLatitudezzz\",\n    9000: \"exifVersion\",\n    9003: \"dateTimeOriginal\",\n    9004: \"dateTimeDigitized\",\n    9101: \"componentsConfiguration\",\n    9102: \"compressedBitsPerPixel\",\n    9201: \"shutterSpeedValue\",\n    9202: \"apertureValue\",\n    9203: \"brightnessValue\",\n    9204: \"exposureBiasValue\",\n    9205: \"maxApertureValue\",\n    9206: \"subjectDistance\",\n    9207: \"meteringMode\",\n    9208: \"lightSource\",\n    9209: \"flash\",\n    9214: \"subjectArea\",\n    9286: \"userComment\",\n    9290: \"subSecTime\",\n    9291: \"subSecTimeOriginal\",\n    9292: \"subSecTimeDigitized\",\n    a000: \"flashpixVersion\",\n    a001: \"colorSpace\",\n    a002: \"pixelXDimension\",\n    a003: \"pixelYDimension\",\n    a004: \"relatedSoundFile\",\n    a005: \"interoperabilityIFDPointer\",\n    a20b: \"flashEnergy\",\n    a20c: \"spatialFrequencyResponse\",\n    a20e: \"focalPlaneXResolution\",\n    a20f: \"focalPlaneYResolution\",\n    a40a: \"sharpness\",\n    a40b: \"deviceSettingDescription\",\n    a40c: \"subjectDistanceRange\",\n    a210: \"focalPlaneResolutionUnit\",\n    a214: \"subjectLocation\",\n    a215: \"exposureIndex\",\n    a217: \"sensingMethod\",\n    a300: \"fileSource\",\n    a301: \"sceneType\",\n    a302: \"cfaPattern\",\n    a401: \"customRendered\",\n    a402: \"exposureMode\",\n    a403: \"whiteBalance\",\n    a404: \"digitalZoomRatio\",\n    a405: \"focalLengthIn35mmFilm\",\n    a406: \"sceneCaptureType\",\n    a407: \"gainControl\",\n    a408: \"contrast\",\n    a409: \"saturation\",\n    a420: \"imageUniqueID\",\n    a430: \"cameraOwnerName\",\n    a431: \"bodySerialNumber\",\n    a432: \"lensSpecification\",\n    a433: \"lensMake\",\n    a434: \"lensModel\",\n    a435: \"lensSerialNumber\",\n    a500: \"gamma\",\n  },\n  gps: {\n    \"0000\": \"gpsVersionID\",\n    \"0001\": \"gpsLatitudeRef\",\n    \"0002\": \"gpsLatitude\",\n    \"0003\": \"gpsLongitudeRef\",\n    \"0004\": \"gpsLongitude\",\n    \"0005\": \"gpsAltitudeRef\",\n    \"0006\": \"gpsAltitude\",\n    \"0007\": \"gpsTimeStamp\",\n    \"0008\": \"gpsSatellites\",\n    \"0009\": \"gpsStatus\",\n    \"000a\": \"gpsMeasureMode\",\n    \"000b\": \"gpsDOP\",\n    \"000c\": \"gpsSpeedRef\",\n    \"000d\": \"gpsSpeed\",\n    \"000e\": \"gpsTrackRef\",\n    \"000f\": \"gpsTrack\",\n    \"0010\": \"gpsImgDirectionRef\",\n    \"0011\": \"gpsImgDirection\",\n    \"0012\": \"gpsMapDatum\",\n    \"0013\": \"gpsDestLatitudeRef\",\n    \"0014\": \"gpsDestLatitude\",\n    \"0015\": \"gpsDestLongitudeRef\",\n    \"0016\": \"gpsDestLongitude\",\n    \"0017\": \"gpsDestBearingRef\",\n    \"0018\": \"gpsDestBearing\",\n    \"0019\": \"gpsDestDistanceRef\",\n    \"001a\": \"gpsDestDistance\",\n    \"001b\": \"gpsProcessingMethod\",\n    \"001c\": \"gpsAreaInformation\",\n    \"001d\": \"gpsDateStamp\",\n    \"001e\": \"gpsDifferential\",\n    \"001f\": \"gpsHPositioningError\",\n  },\n};\n\nclass IDFEntries {\n  constructor(bigEndian) {\n    this.bigEndian = bigEndian;\n    this.bytes = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8];\n  }\n\n  _getTagValue(dataValue, dataFormat) {\n    const uint16 = (pos) =>\n      this.bigEndian\n        ? readUInt16BE(dataValue, pos)\n        : readUInt16LE(dataValue, pos);\n\n    const uint32 = (pos) =>\n      this.bigEndian\n        ? readUInt32BE(dataValue, pos)\n        : readUInt32LE(dataValue, pos);\n\n    switch (dataFormat) {\n      case 1:\n        return dataValue.readUInt8(0);\n      case 2:\n        return dataValue.toString(\"ascii\").replace(/\\0+$/, \"\");\n      case 3:\n        return uint16(0);\n      case 4:\n        return uint32(0);\n      case 5:\n        const tagValue = [];\n\n        for (var i = 0; i < dataValue.length; i += 8) {\n          tagValue.push(uint32(i) / uint32(i + 4));\n        }\n\n        return tagValue;\n      case 7:\n        return null;\n      case 10: {\n        return uint32(0) / uint32(4);\n      }\n      default:\n        return \"0x\" + dataValue.toString(\"hex\");\n    }\n  }\n\n  _decodeIDFEntries(buffer, tags, offset) {\n    let pos = 2;\n\n    const entries = {};\n\n    const uint16 = (pos) =>\n      this.bigEndian ? readUInt16BE(buffer, pos) : readUInt16LE(buffer, pos);\n\n    const uint32 = (pos) =>\n      this.bigEndian ? readUInt32BE(buffer, pos) : readUInt32LE(buffer, pos);\n\n    const numberOfEntries = uint16(0);\n\n    for (let i = 0; i < numberOfEntries; i++) {\n      const tagAddress = buffer.slice(pos, pos + 2);\n      const dataFormat = uint16(pos + 2);\n      const componentsNumber = uint32(pos + 4);\n      const componentsBytes = this.bytes[dataFormat];\n      const dataLength = componentsNumber * componentsBytes;\n\n      let dataValue = buffer.slice(pos + 8, pos + 12);\n\n      if (dataLength > 4) {\n        const valueOffset = this.bigEndian\n          ? readUInt32BE(dataValue, 0)\n          : readUInt32LE(dataValue, 0);\n\n        const dataOffset = valueOffset - offset;\n\n        dataValue = buffer.slice(dataOffset, dataOffset + dataLength);\n      }\n\n      const tagValue = this._getTagValue(dataValue, dataFormat);\n\n      const tagNumber = this.bigEndian\n        ? uint8ArrayToHexString(tagAddress)\n        : uint8ArrayToHexString(tagAddress.reverse());\n\n      const tagName = tags[tagNumber];\n\n      entries[tagName] = tagValue;\n\n      pos += 12;\n    }\n\n    return entries;\n  }\n\n  decode(stream, parent) {\n    const buffer = stream.buffer.slice(stream.pos);\n    const offsetToFirstIFD = parent.offsetToFirstIFD;\n\n    if (offsetToFirstIFD > buffer.length) {\n      stream.pos += parent.parent.length - 16;\n      return {};\n    }\n\n    const entries = this._decodeIDFEntries(buffer, tags.ifd, offsetToFirstIFD);\n    const { exifIFDPointer, gpsInfoIFDPointer } = entries;\n\n    if (exifIFDPointer) {\n      const subuffer = buffer.slice(exifIFDPointer - offsetToFirstIFD);\n      entries.subExif = this._decodeIDFEntries(\n        subuffer,\n        tags.ifd,\n        exifIFDPointer,\n      );\n    }\n\n    if (gpsInfoIFDPointer) {\n      const gps = gpsInfoIFDPointer;\n      const subuffer = buffer.slice(\n        exifIFDPointer ? gps - exifIFDPointer : gps - offsetToFirstIFD,\n      );\n      entries.gpsInfo = IFDHandler(subuffer, tags.gps, gps);\n    }\n\n    stream.pos += parent.parent.length - 16;\n\n    return entries;\n  }\n}\n\nconst IFDData = (bigEndian) => {\n  const uint16 = bigEndian ? r.uint16be : r.uint16le;\n  const uint32 = bigEndian ? r.uint32be : r.uint32le;\n\n  return new r.Struct({\n    fortyTwo: uint16,\n    offsetToFirstIFD: uint32,\n    entries: new IDFEntries(bigEndian),\n  });\n};\n\nclass TIFFHeader {\n  decode(stream, parent) {\n    const byteOrder = uint8ArrayToString(\n      stream.buffer.slice(stream.pos, stream.pos + 2),\n    );\n\n    const bigEndian = byteOrder === \"MM\";\n\n    stream.pos += 2;\n\n    const data = IFDData(bigEndian).decode(stream, parent);\n\n    return data.entries;\n  }\n}\n\nconst EXIFMarker = {\n  name: () => \"EXIF\",\n  length: r.uint16be,\n  identifier: new r.String(6),\n  entries: new TIFFHeader(),\n};\n\nexport default EXIFMarker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}